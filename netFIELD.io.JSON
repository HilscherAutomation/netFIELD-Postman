{
  "swagger": "2.0",
  "host": "api.netfield.io",
  "basePath": "/v1",
  "schemes": ["https"],
  "securityDefinitions": {
    "jwt": { "type": "apiKey", "name": "Authorization", "in": "header" }
  },
  "info": {
    "title": "netFIELD CLOUD API",
    "version": "2.2.0",
    "description": "netIOT netFIELD CLOUD API Documentation",
    "x-websockets": {
      "topics": [
        {
          "identity": "platformconnector",
          "topic": "/devices/{deviceId}/platformconnector/{topic}",
          "description": "This topic provide forwarded messages from netield app platform connector container.",
          "fields": [
            {
              "id": "deviceId",
              "type": "string",
              "title": "The id property defines the unique id / objectId",
              "inputType": "input"
            },
            {
              "id": "topic",
              "type": "string",
              "title": "MQTT Topic as Based64 encoded",
              "inputType": "textarea"
            }
          ],
          "response": [
            { "key": "createdAt", "value": "1566310082437" },
            {
              "key": "topic",
              "value": "'netfield/gateway-prefix/containerName/applicationSpecificHierarchy>/123'"
            },
            { "key": "data", "value": "{}" }
          ]
        }
      ]
    }
  },
  "tags": [
    { "name": "users", "description": "Api users interface" },
    { "name": "auth", "description": "Api authentication services" },
    { "name": "organisations", "description": "Api organisations interface" },
    {
      "name": "organisationManifests",
      "description": "Api organisation manifests interface"
    },
    { "name": "devices", "description": "Api devices interface" },
    { "name": "messages", "description": "Api messages interface" },
    { "name": "roles", "description": "Api roles interface" },
    { "name": "containers", "description": "Api containers interface" },
    { "name": "keys", "description": "Api keys for interface" },
    { "name": "permissions", "description": "Api permissions interface" },
    { "name": "edgeos", "description": "Api edgeos interface" },
    { "name": "groups", "description": "Api groups interface" },
    { "name": "tenants", "description": "Api tenants interface" },
    {
      "name": "deviceContainers",
      "description": "Api device containers interface"
    },
    {
      "name": "deviceNotifications",
      "description": "Api device notifications interface"
    },
    {
      "name": "sensorEdgeDeploymentManifests",
      "description": "Api sensorEDGE deployment manifests interface"
    },
    {
      "name": "remoteDevices",
      "description": "Api device remote control interface"
    },
    { "name": "notifications", "description": "Api notifications interface" },
    { "name": "webhooks", "description": "Api webhooks interface" },
    { "name": "dashboards", "description": "Api dashboards interface" },
    { "name": "search", "description": "Api search interface" }
  ],
  "paths": {
    "/containers": {
      "get": {
        "summary": "Get list of containers",
        "operationId": "getContainers",
        "description": "containers<br/><br/>viewContainers",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "min(1), null and empty values are not allowed",
            "default": 1,
            "minimum": 1,
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "min(1) / max is set by config pageEntries, null and empty values are not allowed",
            "default": 10,
            "minimum": 1,
            "maximum": 5000,
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sort by \"name\" or other resource property, null not allowed",
            "default": "id",
            "name": "sortBy",
            "in": "query"
          },
          {
            "type": "string",
            "description": "valid - \"asc\" and \"desc\", null and empty string not allowed",
            "default": "asc",
            "enum": ["asc", "desc"],
            "name": "sortOrder",
            "in": "query"
          }
        ],
        "tags": ["containers"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "type": "object",
                  "properties": {
                    "offset": { "type": "integer" },
                    "limit": { "type": "integer" },
                    "total": { "type": "integer" }
                  },
                  "required": ["offset", "limit", "total"]
                },
                "containers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Random uuid v4.",
                        "default": "7adb258e-3ee7-4299-bcb9-513fab03f7d4",
                        "x-format": { "guid": { "version": "uuidv4" } }
                      },
                      "image": { "type": "string" },
                      "organisationId": { "type": "number" },
                      "organisation": { "type": "string" },
                      "containerAccess": {
                        "type": "string",
                        "description": "Container access",
                        "enum": ["public", "private"]
                      },
                      "status": { "type": "string" },
                      "displayName": {
                        "type": "string",
                        "description": "Display name"
                      },
                      "containerName": {
                        "type": "string",
                        "description": "Container name"
                      },
                      "icon": {
                        "type": "string",
                        "description": "Icon name",
                        "enum": [
                          "american sign language interpreting",
                          "assistive listening systems",
                          "audio description",
                          "blind",
                          "braille",
                          "closed captioning",
                          "closed captioning outline",
                          "deaf",
                          "low vision",
                          "phone volume",
                          "question circle",
                          "question circle outline",
                          "sign language",
                          "tty",
                          "universal access",
                          "wheelchair",
                          "angle double down",
                          "angle double left",
                          "angle double right",
                          "angle double up",
                          "angle down",
                          "angle left",
                          "angle right",
                          "angle up",
                          "arrow alternate circle down",
                          "arrow alternate circle down outline",
                          "arrow alternate circle left",
                          "arrow alternate circle left outline",
                          "arrow alternate circle right",
                          "arrow alternate circle right outline",
                          "arrow alternate circle up",
                          "arrow alternate circle up outline",
                          "arrow circle down",
                          "arrow circle left",
                          "arrow circle right",
                          "arrow circle up",
                          "arrow down",
                          "arrow left",
                          "arrow right",
                          "arrow up",
                          "arrows alternate",
                          "arrows alternate horizontal",
                          "arrows alternate vertical",
                          "caret down",
                          "caret left",
                          "caret right",
                          "caret square down",
                          "caret square down outline",
                          "caret square left",
                          "caret square left outline",
                          "caret square right",
                          "caret square right outline",
                          "caret square up",
                          "caret square up outline",
                          "caret up",
                          "cart arrow down",
                          "chart line",
                          "chevron circle down",
                          "chevron circle left",
                          "chevron circle right",
                          "chevron circle up",
                          "chevron down",
                          "chevron left",
                          "chevron right",
                          "chevron up",
                          "cloud download",
                          "cloud upload",
                          "download",
                          "exchange",
                          "expand arrows alternate",
                          "external alternate",
                          "external square alternate",
                          "hand point down",
                          "hand point down outline",
                          "hand point left",
                          "hand point left outline",
                          "hand point right",
                          "hand point right outline",
                          "hand point up",
                          "hand point up outline",
                          "hand pointer",
                          "hand pointer outline",
                          "history",
                          "level down alternate",
                          "level up alternate",
                          "location arrow",
                          "long arrow alternate down",
                          "long arrow alternate left",
                          "long arrow alternate right",
                          "long arrow alternate up",
                          "mouse pointer",
                          "play",
                          "random",
                          "recycle",
                          "redo",
                          "redo alternate",
                          "reply",
                          "reply all",
                          "retweet",
                          "share",
                          "share square",
                          "share square outline",
                          "sign-in",
                          "sign-out",
                          "sign-in alternate",
                          "sign-out alternate",
                          "sort",
                          "sort alphabet down",
                          "sort alphabet up",
                          "sort amount down",
                          "sort amount up",
                          "sort down",
                          "sort numeric down",
                          "sort numeric up",
                          "sort up",
                          "sync",
                          "sync alternate",
                          "text height",
                          "text width",
                          "undo",
                          "undo alternate",
                          "upload",
                          "zoom-in",
                          "zoom-out",
                          "backward",
                          "circle",
                          "circle outline",
                          "compress",
                          "eject",
                          "expand",
                          "fast backward",
                          "fast forward",
                          "file audio",
                          "file audio outline",
                          "file video",
                          "file video outline",
                          "film",
                          "forward",
                          "headphones",
                          "microphone",
                          "microphone slash",
                          "music",
                          "pause",
                          "pause circle",
                          "pause circle outline",
                          "play circle",
                          "play circle outline",
                          "podcast",
                          "rss",
                          "rss square",
                          "step backward",
                          "step forward",
                          "stop",
                          "stop circle",
                          "stop circle outline",
                          "video",
                          "volume down",
                          "volume off",
                          "volume up",
                          "address book",
                          "address book outline",
                          "address card",
                          "address card outline",
                          "archive",
                          "balance scale",
                          "birthday cake",
                          "book",
                          "briefcase",
                          "building",
                          "building outline",
                          "bullhorn",
                          "bullseye",
                          "calculator",
                          "calendar",
                          "calendar outline",
                          "calendar alternate",
                          "calendar alternate outline",
                          "certificate",
                          "chart area",
                          "chart bar",
                          "chart bar outline",
                          "chart pie",
                          "clipboard",
                          "clipboard outline",
                          "coffee",
                          "columns",
                          "compass",
                          "compass outline",
                          "copy",
                          "copy outline",
                          "copyright",
                          "copyright outline",
                          "cut",
                          "edit",
                          "edit outline",
                          "envelope",
                          "envelope outline",
                          "envelope open",
                          "envelope open outline",
                          "envelope square",
                          "eraser",
                          "fax",
                          "file",
                          "file outline",
                          "file alternate",
                          "file alternate outline",
                          "folder",
                          "folder outline",
                          "folder open",
                          "folder open outline",
                          "globe",
                          "industry",
                          "paperclip",
                          "paste",
                          "pen square",
                          "pencil alternate",
                          "percent",
                          "phone",
                          "phone square",
                          "registered",
                          "registered outline",
                          "save",
                          "save outline",
                          "sitemap",
                          "sticky note",
                          "sticky note outline",
                          "suitcase",
                          "table",
                          "tag",
                          "tags",
                          "tasks",
                          "thumbtack",
                          "trademark",
                          "chess",
                          "chess bishop",
                          "chess board",
                          "chess king",
                          "chess knight",
                          "chess pawn",
                          "chess queen",
                          "chess rook",
                          "square full",
                          "barcode",
                          "bath",
                          "bug",
                          "code",
                          "code branch",
                          "file code",
                          "file code outline",
                          "filter",
                          "fire extinguisher",
                          "keyboard",
                          "keyboard outline",
                          "microchip",
                          "qrcode",
                          "shield alternate",
                          "terminal",
                          "user secret",
                          "window close",
                          "window close outline",
                          "window maximize",
                          "window maximize outline",
                          "window minimize",
                          "window minimize outline",
                          "window restore",
                          "window restore outline",
                          "at",
                          "bell",
                          "bell outline",
                          "bell slash",
                          "bell slash outline",
                          "comment",
                          "comment outline",
                          "comment alternate",
                          "comment alternate outline",
                          "comments",
                          "comments outline",
                          "inbox",
                          "language",
                          "mobile",
                          "mobile alternate",
                          "paper plane",
                          "paper plane outline",
                          "wifi",
                          "desktop",
                          "hdd",
                          "hdd outline",
                          "laptop",
                          "plug",
                          "power off",
                          "print",
                          "server",
                          "tablet",
                          "tablet alternate",
                          "tv",
                          "dollar sign",
                          "euro sign",
                          "lira sign",
                          "money bill alternate",
                          "money bill alternate outline",
                          "pound sign",
                          "ruble sign",
                          "rupee sign",
                          "shekel sign",
                          "won sign",
                          "yen sign",
                          "calendar check",
                          "calendar check outline",
                          "calendar minus",
                          "calendar minus outline",
                          "calendar plus",
                          "calendar plus outline",
                          "calendar times",
                          "calendar times outline",
                          "clock",
                          "clock outline",
                          "hourglass",
                          "hourglass outline",
                          "hourglass end",
                          "hourglass half",
                          "hourglass start",
                          "stopwatch",
                          "adjust",
                          "clone",
                          "clone outline",
                          "crop",
                          "crosshairs",
                          "eye",
                          "eye dropper",
                          "eye slash",
                          "eye slash outline",
                          "object group",
                          "object group outline",
                          "object ungroup",
                          "object ungroup outline",
                          "paint brush",
                          "tint",
                          "align center",
                          "align justify",
                          "align left",
                          "align right",
                          "bold",
                          "font",
                          "heading",
                          "i cursor",
                          "indent",
                          "italic",
                          "linkify",
                          "list",
                          "list alternate",
                          "list alternate outline",
                          "list ol",
                          "list ul",
                          "outdent",
                          "paragraph",
                          "quote left",
                          "quote right",
                          "strikethrough",
                          "subscript",
                          "superscript",
                          "th",
                          "th large",
                          "th list",
                          "trash",
                          "trash alternate",
                          "trash alternate outline",
                          "underline",
                          "unlink",
                          "file archive",
                          "file archive outline",
                          "file excel",
                          "file excel outline",
                          "file image",
                          "file image outline",
                          "file pdf",
                          "file pdf outline",
                          "file powerpoint",
                          "file powerpoint outline",
                          "file word",
                          "file word outline",
                          "genderless",
                          "mars",
                          "mars double",
                          "mars stroke",
                          "mars stroke horizontal",
                          "mars stroke vertical",
                          "mercury",
                          "neuter",
                          "transgender",
                          "transgender alternate",
                          "venus",
                          "venus double",
                          "venus mars",
                          "hand lizard",
                          "hand lizard outline",
                          "hand paper",
                          "hand paper outline",
                          "hand peace",
                          "hand peace outline",
                          "hand rock",
                          "hand rock outline",
                          "hand scissors",
                          "hand scissors outline",
                          "hand spock",
                          "hand spock outline",
                          "handshake",
                          "handshake outline",
                          "thumbs down",
                          "thumbs down outline",
                          "thumbs up",
                          "thumbs up outline",
                          "ambulance",
                          "h square",
                          "heart",
                          "heart outline",
                          "heartbeat",
                          "hospital",
                          "hospital outline",
                          "medkit",
                          "plus square",
                          "plus square outline",
                          "stethoscope",
                          "user md",
                          "bolt",
                          "camera",
                          "camera retro",
                          "id badge",
                          "id badge outline",
                          "id card",
                          "id card outline",
                          "image",
                          "image outline",
                          "images",
                          "images outline",
                          "sliders horizontal",
                          "ban",
                          "bars",
                          "beer",
                          "check",
                          "check circle",
                          "check circle outline",
                          "check square",
                          "check square outline",
                          "cloud",
                          "cog",
                          "cogs",
                          "database",
                          "dot circle",
                          "dot circle outline",
                          "ellipsis horizontal",
                          "ellipsis vertical",
                          "exclamation",
                          "exclamation circle",
                          "exclamation triangle",
                          "flag",
                          "flag outline",
                          "flag checkered",
                          "frown",
                          "frown outline",
                          "hashtag",
                          "home",
                          "info",
                          "info circle",
                          "magic",
                          "meh",
                          "meh outline",
                          "minus",
                          "minus circle",
                          "minus square",
                          "minus square outline",
                          "plus",
                          "plus circle",
                          "question",
                          "search",
                          "search minus",
                          "search plus",
                          "share alternate",
                          "share alternate square",
                          "signal",
                          "smile",
                          "smile outline",
                          "star",
                          "star outline",
                          "star half",
                          "star half outline",
                          "times",
                          "times circle",
                          "times circle outline",
                          "toggle off",
                          "toggle on",
                          "trophy",
                          "user",
                          "user outline",
                          "user circle",
                          "user circle outline",
                          "box",
                          "boxes",
                          "clipboard check",
                          "clipboard list",
                          "dolly",
                          "dolly flatbed",
                          "pallet",
                          "shipping fast",
                          "truck",
                          "warehouse",
                          "anchor",
                          "bed",
                          "bicycle",
                          "binoculars",
                          "bomb",
                          "bookmark",
                          "bookmark outline",
                          "car",
                          "fighter jet",
                          "fire",
                          "flask",
                          "gamepad",
                          "gavel",
                          "gift",
                          "glass martini",
                          "graduation cap",
                          "key",
                          "leaf",
                          "lemon",
                          "lemon outline",
                          "life ring",
                          "life ring outline",
                          "lightbulb",
                          "lightbulb outline",
                          "magnet",
                          "male",
                          "map",
                          "map outline",
                          "map marker",
                          "map marker alternate",
                          "map pin",
                          "map signs",
                          "motorcycle",
                          "newspaper",
                          "newspaper outline",
                          "paw",
                          "plane",
                          "road",
                          "rocket",
                          "ship",
                          "shopping bag",
                          "shopping basket",
                          "shopping cart",
                          "shower",
                          "street view",
                          "subway",
                          "taxi",
                          "ticket alternate",
                          "train",
                          "tree",
                          "umbrella",
                          "university",
                          "utensil spoon",
                          "utensils",
                          "wrench",
                          "band aid",
                          "dna",
                          "first aid",
                          "hospital symbol",
                          "pills",
                          "syringe",
                          "thermometer",
                          "weight",
                          "bus",
                          "cube",
                          "cubes",
                          "futbol",
                          "futbol outline",
                          "gem",
                          "gem outline",
                          "lock",
                          "lock open",
                          "moon",
                          "moon outline",
                          "puzzle piece",
                          "snowflake",
                          "snowflake outline",
                          "space shuttle",
                          "sun",
                          "sun outline",
                          "tachometer alternate",
                          "unlock",
                          "unlock alternate",
                          "cart plus",
                          "credit card",
                          "credit card outline",
                          "square",
                          "square outline",
                          "asterisk",
                          "circle notch",
                          "spinner",
                          "baseball ball",
                          "basketball ball",
                          "bowling ball",
                          "football ball",
                          "golf ball",
                          "hockey puck",
                          "quidditch",
                          "table tennis",
                          "volleyball ball",
                          "battery empty",
                          "battery full",
                          "battery half",
                          "battery quarter",
                          "battery three quarters",
                          "sign in alternate",
                          "sign out alternate",
                          "thermometer empty",
                          "thermometer full",
                          "thermometer half",
                          "thermometer quarter",
                          "thermometer three quarters",
                          "child",
                          "female",
                          "user plus",
                          "user times",
                          "users",
                          "500px",
                          "accessible",
                          "accusoft",
                          "adn",
                          "adversal",
                          "affiliatetheme",
                          "algolia",
                          "amazon",
                          "amazon pay",
                          "amilia",
                          "android",
                          "angellist",
                          "angrycreative",
                          "angular",
                          "app store",
                          "app store ios",
                          "apper",
                          "apple",
                          "apple pay",
                          "asymmetrik",
                          "audible",
                          "autoprefixer",
                          "avianex",
                          "aviato",
                          "aws",
                          "bandcamp",
                          "behance",
                          "behance square",
                          "bimobject",
                          "bitbucket",
                          "bitcoin",
                          "bity",
                          "black tie",
                          "blackberry",
                          "blogger",
                          "blogger b",
                          "bluetooth",
                          "bluetooth b",
                          "btc",
                          "buromobelexperte",
                          "buysellads",
                          "cc amazon pay",
                          "cc amex",
                          "cc apple pay",
                          "cc diners club",
                          "cc discover",
                          "cc jcb",
                          "cc mastercard",
                          "cc paypal",
                          "cc stripe",
                          "cc visa",
                          "centercode",
                          "chrome",
                          "cloudscale",
                          "cloudsmith",
                          "cloudversify",
                          "codepen",
                          "codiepie",
                          "connectdevelop",
                          "contao",
                          "cpanel",
                          "creative commons",
                          "css3",
                          "css3 alternate",
                          "cuttlefish",
                          "d and d",
                          "dashcube",
                          "delicious",
                          "deploydog",
                          "deskpro",
                          "deviantart",
                          "digg",
                          "digital ocean",
                          "discord",
                          "discourse",
                          "dochub",
                          "docker",
                          "draft2digital",
                          "dribbble",
                          "dribbble square",
                          "dropbox",
                          "drupal",
                          "dyalog",
                          "earlybirds",
                          "edge",
                          "elementor",
                          "ember",
                          "empire",
                          "envira",
                          "erlang",
                          "ethereum",
                          "etsy",
                          "expeditedssl",
                          "facebook",
                          "facebook f",
                          "facebook messenger",
                          "facebook square",
                          "firefox",
                          "first order",
                          "firstdraft",
                          "flickr",
                          "flipboard",
                          "fly",
                          "font awesome",
                          "font awesome alternate",
                          "font awesome flag",
                          "fonticons",
                          "fonticons fi",
                          "fort awesome",
                          "fort awesome alternate",
                          "forumbee",
                          "foursquare",
                          "free code camp",
                          "freebsd",
                          "get pocket",
                          "gg",
                          "gg circle",
                          "git",
                          "git square",
                          "github",
                          "github alternate",
                          "github square",
                          "gitkraken",
                          "gitlab",
                          "gitter",
                          "glide",
                          "glide g",
                          "gofore",
                          "goodreads",
                          "goodreads g",
                          "google",
                          "google drive",
                          "google play",
                          "google plus",
                          "google plus g",
                          "google plus square",
                          "google wallet",
                          "gratipay",
                          "grav",
                          "gripfire",
                          "grunt",
                          "gulp",
                          "hacker news",
                          "hacker news square",
                          "hips",
                          "hire a helper",
                          "hooli",
                          "hotjar",
                          "houzz",
                          "html5",
                          "hubspot",
                          "imdb",
                          "instagram",
                          "internet explorer",
                          "ioxhost",
                          "itunes",
                          "itunes note",
                          "jenkins",
                          "joget",
                          "joomla",
                          "js",
                          "js square",
                          "jsfiddle",
                          "keycdn",
                          "kickstarter",
                          "kickstarter k",
                          "korvue",
                          "laravel",
                          "lastfm",
                          "lastfm square",
                          "leanpub",
                          "less",
                          "linechat",
                          "linkedin",
                          "linkedin alternate",
                          "linode",
                          "linux",
                          "lyft",
                          "magento",
                          "maxcdn",
                          "medapps",
                          "medium",
                          "medium m",
                          "medrt",
                          "meetup",
                          "microsoft",
                          "mix",
                          "mixcloud",
                          "mizuni",
                          "modx",
                          "monero",
                          "napster",
                          "nintendo switch",
                          "node",
                          "node js",
                          "npm",
                          "ns8",
                          "nutritionix",
                          "odnoklassniki",
                          "odnoklassniki square",
                          "opencart",
                          "openid",
                          "opera",
                          "optin monster",
                          "osi",
                          "page4",
                          "pagelines",
                          "palfed",
                          "patreon",
                          "paypal",
                          "periscope",
                          "phabricator",
                          "phoenix framework",
                          "php",
                          "pied piper",
                          "pied piper alternate",
                          "pied piper pp",
                          "pinterest",
                          "pinterest p",
                          "pinterest square",
                          "playstation",
                          "product hunt",
                          "pushed",
                          "python",
                          "qq",
                          "quinscape",
                          "quora",
                          "ravelry",
                          "react",
                          "rebel",
                          "redriver",
                          "reddit",
                          "reddit alien",
                          "reddit square",
                          "rendact",
                          "renren",
                          "replyd",
                          "resolving",
                          "rocketchat",
                          "rockrms",
                          "safari",
                          "sass",
                          "schlix",
                          "scribd",
                          "searchengin",
                          "sellcast",
                          "sellsy",
                          "servicestack",
                          "shirtsinbulk",
                          "simplybuilt",
                          "sistrix",
                          "skyatlas",
                          "skype",
                          "slack",
                          "slack hash",
                          "slideshare",
                          "snapchat",
                          "snapchat ghost",
                          "snapchat square",
                          "soundcloud",
                          "speakap",
                          "spotify",
                          "stack exchange",
                          "stack overflow",
                          "staylinked",
                          "steam",
                          "steam square",
                          "steam symbol",
                          "sticker mule",
                          "strava",
                          "stripe",
                          "stripe s",
                          "studiovinari",
                          "stumbleupon",
                          "stumbleupon circle",
                          "superpowers",
                          "supple",
                          "telegram",
                          "telegram plane",
                          "tencent weibo",
                          "themeisle",
                          "trello",
                          "tripadvisor",
                          "tumblr",
                          "tumblr square",
                          "twitch",
                          "twitter",
                          "twitter square",
                          "typo3",
                          "uber",
                          "uikit",
                          "uniregistry",
                          "untappd",
                          "usb",
                          "ussunnah",
                          "vaadin",
                          "viacoin",
                          "viadeo",
                          "viadeo square",
                          "viber",
                          "vimeo",
                          "vimeo square",
                          "vimeo v",
                          "vine",
                          "vk",
                          "vnv",
                          "vuejs",
                          "wechat",
                          "weibo",
                          "weixin",
                          "whatsapp",
                          "whatsapp square",
                          "whmcs",
                          "wikipedia w",
                          "windows",
                          "wordpress",
                          "wordpress simple",
                          "wpbeginner",
                          "wpexplorer",
                          "wpforms",
                          "xbox",
                          "xing",
                          "xing square",
                          "y combinator",
                          "yahoo",
                          "yandex",
                          "yandex international",
                          "yelp",
                          "yoast",
                          "youtube",
                          "youtube square",
                          "chess rock",
                          "ordered list",
                          "unordered list",
                          "user doctor",
                          "shield",
                          "puzzle",
                          "add circle",
                          "add square",
                          "add to calendar",
                          "add to cart",
                          "add user",
                          "add",
                          "alarm mute",
                          "alarm",
                          "ald",
                          "als",
                          "announcement",
                          "area chart",
                          "area graph",
                          "arrow down cart",
                          "asexual",
                          "asl interpreting",
                          "asl",
                          "assistive listening devices",
                          "attach",
                          "attention",
                          "balance",
                          "bar",
                          "bathtub",
                          "battery four",
                          "battery high",
                          "battery low",
                          "battery one",
                          "battery three",
                          "battery two",
                          "battery zero",
                          "birthday",
                          "block layout",
                          "bluetooth alternative",
                          "broken chain",
                          "browser",
                          "call square",
                          "call",
                          "cancel",
                          "cart",
                          "cc",
                          "chain",
                          "chat",
                          "checked calendar",
                          "checkmark",
                          "circle notched",
                          "close",
                          "cny",
                          "cocktail",
                          "commenting",
                          "computer",
                          "configure",
                          "content",
                          "deafness",
                          "delete calendar",
                          "delete",
                          "detective",
                          "discussions",
                          "doctor",
                          "dollar",
                          "dont",
                          "drivers license",
                          "dropdown",
                          "emergency",
                          "envira gallery",
                          "erase",
                          "eur",
                          "euro",
                          "eyedropper",
                          "factory",
                          "favorite",
                          "feed",
                          "female homosexual",
                          "file text",
                          "file text outline",
                          "find",
                          "fork",
                          "game",
                          "gay",
                          "gbp",
                          "google plus circle",
                          "google plus official",
                          "grab",
                          "graduation",
                          "grid layout",
                          "group",
                          "h",
                          "hand victory",
                          "handicap",
                          "hard of hearing",
                          "header",
                          "help circle",
                          "help",
                          "heterosexual",
                          "hide",
                          "hotel",
                          "hourglass four",
                          "hourglass full",
                          "hourglass one",
                          "hourglass three",
                          "hourglass two",
                          "idea",
                          "ils",
                          "in cart",
                          "inr",
                          "intergender",
                          "intersex",
                          "jpy",
                          "krw",
                          "lab",
                          "law",
                          "legal",
                          "lesbian",
                          "lightning",
                          "like",
                          "line graph",
                          "linkedin square",
                          "lira",
                          "list layout",
                          "magnify",
                          "mail forward",
                          "mail square",
                          "mail",
                          "male homosexual",
                          "man",
                          "marker",
                          "mars alternate",
                          "mars horizontal",
                          "mars vertical",
                          "microsoft edge",
                          "military",
                          "ms edge",
                          "mute",
                          "new pied piper",
                          "non binary transgender",
                          "numbered list",
                          "options",
                          "other gender horizontal",
                          "other gender vertical",
                          "other gender",
                          "payment",
                          "paypal card",
                          "pencil square",
                          "photo",
                          "picture",
                          "pie chart",
                          "pie graph",
                          "pied piper hat",
                          "pin",
                          "plus cart",
                          "point",
                          "pointing down",
                          "pointing left",
                          "pointing right",
                          "pointing up",
                          "pound",
                          "power cord",
                          "power",
                          "privacy",
                          "r circle",
                          "rain",
                          "record",
                          "refresh",
                          "remove circle",
                          "remove from calendar",
                          "remove user",
                          "remove",
                          "repeat",
                          "rmb",
                          "rouble",
                          "rub",
                          "ruble",
                          "rupee",
                          "s15",
                          "selected radio",
                          "send",
                          "setting",
                          "settings",
                          "shekel",
                          "sheqel",
                          "shipping",
                          "shop",
                          "shuffle",
                          "shutdown",
                          "sidebar",
                          "signing",
                          "signup",
                          "sliders",
                          "soccer",
                          "sort alphabet ascending",
                          "sort alphabet descending",
                          "sort ascending",
                          "sort content ascending",
                          "sort content descending",
                          "sort descending",
                          "sort numeric ascending",
                          "sort numeric descending",
                          "sound",
                          "spy",
                          "stripe card",
                          "student",
                          "talk",
                          "target",
                          "teletype",
                          "television",
                          "text cursor",
                          "text telephone",
                          "theme",
                          "thumb tack",
                          "time",
                          "tm",
                          "toggle down",
                          "toggle left",
                          "toggle right",
                          "toggle up",
                          "translate",
                          "travel",
                          "treatment",
                          "triangle down",
                          "triangle left",
                          "triangle right",
                          "triangle up",
                          "try",
                          "unhide",
                          "unlinkify",
                          "unmute",
                          "usd",
                          "user cancel",
                          "user close",
                          "user delete",
                          "user x",
                          "vcard",
                          "video camera",
                          "video play",
                          "volume control phone",
                          "wait",
                          "warning circle",
                          "warning sign",
                          "warning",
                          "wi-fi",
                          "winner",
                          "wizard",
                          "woman",
                          "won",
                          "wordpress beginner",
                          "wordpress forms",
                          "world",
                          "write square",
                          "x",
                          "yen",
                          "zip",
                          "zoom in",
                          "zoom out",
                          "zoom",
                          "bitbucket square",
                          "checkmark box",
                          "circle thin",
                          "compose",
                          "conversation",
                          "credit card alternative",
                          "currency",
                          "dashboard",
                          "diamond",
                          "disk",
                          "external share",
                          "external square",
                          "external",
                          "facebook official",
                          "food",
                          "hourglass zero",
                          "level down",
                          "level up",
                          "log out",
                          "meanpath",
                          "money",
                          "move",
                          "pencil",
                          "protect",
                          "radio",
                          "remove bookmark",
                          "resize horizontal",
                          "resize vertical",
                          "sign in",
                          "sign out",
                          "spoon",
                          "star half empty",
                          "star half full",
                          "ticket",
                          "times rectangle",
                          "write"
                        ]
                      },
                      "type": { "type": "string" },
                      "restartPolicy": {
                        "type": "string",
                        "description": "Restart policy"
                      },
                      "desiredStatus": {
                        "type": "string",
                        "description": "Desired status",
                        "enum": ["stopped", "running"]
                      },
                      "registryType": {
                        "type": "string",
                        "description": "Registry type",
                        "enum": ["public", "private"]
                      },
                      "category": {
                        "type": "string",
                        "description": "Container categories",
                        "enum": [
                          "Receiver",
                          "Connectivity",
                          "Data Acquisition",
                          "IT/Cloud Connectors",
                          "Services",
                          "Applications"
                        ]
                      },
                      "settingsPageId": {
                        "type": "string",
                        "description": "Settings page",
                        "enum": [
                          "gatewayTelemetry",
                          "networkTopology",
                          "opcuaPublisher",
                          "ainConnector",
                          "netFieldProxy",
                          "netFieldAppPlatformConnector"
                        ]
                      },
                      "shortDescription": {
                        "type": "string",
                        "description": "Short description, max(60)",
                        "maxLength": 60
                      },
                      "description": {
                        "type": "string",
                        "description": "Description, max(3000)",
                        "maxLength": 3000
                      },
                      "credentials": {
                        "type": "object",
                        "properties": {
                          "address": { "type": "string" },
                          "username": { "type": "string" }
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "createdAt",
                        "default": "2021-05-21T06:02:07.125Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "updatedAt",
                        "default": "2021-05-21T06:02:07.125Z"
                      },
                      "sharedWithOrganisations": {
                        "type": "array",
                        "x-constraint": { "unique": "id" },
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": { "type": "number" },
                            "name": { "type": "string" }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "required": ["containers"]
            },
            "description": "Retrieve list of containers"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          }
        }
      },
      "post": {
        "summary": "Create new container",
        "operationId": "postContainers",
        "description": "containers<br/><br/>createContainers",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "organisationId",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "Display name",
            "name": "displayName",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "Container name",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]+$",
            "name": "containerName",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "Container access",
            "enum": ["public", "private"],
            "name": "containerAccess",
            "in": "formData",
            "required": true
          },
          {
            "type": "array",
            "description": "Array of numbers representing the organisation Ids",
            "x-meta": { "swaggerType": "array" },
            "x-constraint": { "unique": true },
            "items": { "type": "integer", "minimum": 1 },
            "collectionFormat": "multi",
            "name": "sharedOrganisationIds",
            "in": "formData"
          },
          {
            "type": "file",
            "x-meta": { "swaggerType": "file" },
            "in": "formData",
            "name": "image"
          },
          {
            "type": "string",
            "description": "Icon name",
            "enum": [
              "american sign language interpreting",
              "assistive listening systems",
              "audio description",
              "blind",
              "braille",
              "closed captioning",
              "closed captioning outline",
              "deaf",
              "low vision",
              "phone volume",
              "question circle",
              "question circle outline",
              "sign language",
              "tty",
              "universal access",
              "wheelchair",
              "angle double down",
              "angle double left",
              "angle double right",
              "angle double up",
              "angle down",
              "angle left",
              "angle right",
              "angle up",
              "arrow alternate circle down",
              "arrow alternate circle down outline",
              "arrow alternate circle left",
              "arrow alternate circle left outline",
              "arrow alternate circle right",
              "arrow alternate circle right outline",
              "arrow alternate circle up",
              "arrow alternate circle up outline",
              "arrow circle down",
              "arrow circle left",
              "arrow circle right",
              "arrow circle up",
              "arrow down",
              "arrow left",
              "arrow right",
              "arrow up",
              "arrows alternate",
              "arrows alternate horizontal",
              "arrows alternate vertical",
              "caret down",
              "caret left",
              "caret right",
              "caret square down",
              "caret square down outline",
              "caret square left",
              "caret square left outline",
              "caret square right",
              "caret square right outline",
              "caret square up",
              "caret square up outline",
              "caret up",
              "cart arrow down",
              "chart line",
              "chevron circle down",
              "chevron circle left",
              "chevron circle right",
              "chevron circle up",
              "chevron down",
              "chevron left",
              "chevron right",
              "chevron up",
              "cloud download",
              "cloud upload",
              "download",
              "exchange",
              "expand arrows alternate",
              "external alternate",
              "external square alternate",
              "hand point down",
              "hand point down outline",
              "hand point left",
              "hand point left outline",
              "hand point right",
              "hand point right outline",
              "hand point up",
              "hand point up outline",
              "hand pointer",
              "hand pointer outline",
              "history",
              "level down alternate",
              "level up alternate",
              "location arrow",
              "long arrow alternate down",
              "long arrow alternate left",
              "long arrow alternate right",
              "long arrow alternate up",
              "mouse pointer",
              "play",
              "random",
              "recycle",
              "redo",
              "redo alternate",
              "reply",
              "reply all",
              "retweet",
              "share",
              "share square",
              "share square outline",
              "sign-in",
              "sign-out",
              "sign-in alternate",
              "sign-out alternate",
              "sort",
              "sort alphabet down",
              "sort alphabet up",
              "sort amount down",
              "sort amount up",
              "sort down",
              "sort numeric down",
              "sort numeric up",
              "sort up",
              "sync",
              "sync alternate",
              "text height",
              "text width",
              "undo",
              "undo alternate",
              "upload",
              "zoom-in",
              "zoom-out",
              "backward",
              "circle",
              "circle outline",
              "compress",
              "eject",
              "expand",
              "fast backward",
              "fast forward",
              "file audio",
              "file audio outline",
              "file video",
              "file video outline",
              "film",
              "forward",
              "headphones",
              "microphone",
              "microphone slash",
              "music",
              "pause",
              "pause circle",
              "pause circle outline",
              "play circle",
              "play circle outline",
              "podcast",
              "rss",
              "rss square",
              "step backward",
              "step forward",
              "stop",
              "stop circle",
              "stop circle outline",
              "video",
              "volume down",
              "volume off",
              "volume up",
              "address book",
              "address book outline",
              "address card",
              "address card outline",
              "archive",
              "balance scale",
              "birthday cake",
              "book",
              "briefcase",
              "building",
              "building outline",
              "bullhorn",
              "bullseye",
              "calculator",
              "calendar",
              "calendar outline",
              "calendar alternate",
              "calendar alternate outline",
              "certificate",
              "chart area",
              "chart bar",
              "chart bar outline",
              "chart pie",
              "clipboard",
              "clipboard outline",
              "coffee",
              "columns",
              "compass",
              "compass outline",
              "copy",
              "copy outline",
              "copyright",
              "copyright outline",
              "cut",
              "edit",
              "edit outline",
              "envelope",
              "envelope outline",
              "envelope open",
              "envelope open outline",
              "envelope square",
              "eraser",
              "fax",
              "file",
              "file outline",
              "file alternate",
              "file alternate outline",
              "folder",
              "folder outline",
              "folder open",
              "folder open outline",
              "globe",
              "industry",
              "paperclip",
              "paste",
              "pen square",
              "pencil alternate",
              "percent",
              "phone",
              "phone square",
              "registered",
              "registered outline",
              "save",
              "save outline",
              "sitemap",
              "sticky note",
              "sticky note outline",
              "suitcase",
              "table",
              "tag",
              "tags",
              "tasks",
              "thumbtack",
              "trademark",
              "chess",
              "chess bishop",
              "chess board",
              "chess king",
              "chess knight",
              "chess pawn",
              "chess queen",
              "chess rook",
              "square full",
              "barcode",
              "bath",
              "bug",
              "code",
              "code branch",
              "file code",
              "file code outline",
              "filter",
              "fire extinguisher",
              "keyboard",
              "keyboard outline",
              "microchip",
              "qrcode",
              "shield alternate",
              "terminal",
              "user secret",
              "window close",
              "window close outline",
              "window maximize",
              "window maximize outline",
              "window minimize",
              "window minimize outline",
              "window restore",
              "window restore outline",
              "at",
              "bell",
              "bell outline",
              "bell slash",
              "bell slash outline",
              "comment",
              "comment outline",
              "comment alternate",
              "comment alternate outline",
              "comments",
              "comments outline",
              "inbox",
              "language",
              "mobile",
              "mobile alternate",
              "paper plane",
              "paper plane outline",
              "wifi",
              "desktop",
              "hdd",
              "hdd outline",
              "laptop",
              "plug",
              "power off",
              "print",
              "server",
              "tablet",
              "tablet alternate",
              "tv",
              "dollar sign",
              "euro sign",
              "lira sign",
              "money bill alternate",
              "money bill alternate outline",
              "pound sign",
              "ruble sign",
              "rupee sign",
              "shekel sign",
              "won sign",
              "yen sign",
              "calendar check",
              "calendar check outline",
              "calendar minus",
              "calendar minus outline",
              "calendar plus",
              "calendar plus outline",
              "calendar times",
              "calendar times outline",
              "clock",
              "clock outline",
              "hourglass",
              "hourglass outline",
              "hourglass end",
              "hourglass half",
              "hourglass start",
              "stopwatch",
              "adjust",
              "clone",
              "clone outline",
              "crop",
              "crosshairs",
              "eye",
              "eye dropper",
              "eye slash",
              "eye slash outline",
              "object group",
              "object group outline",
              "object ungroup",
              "object ungroup outline",
              "paint brush",
              "tint",
              "align center",
              "align justify",
              "align left",
              "align right",
              "bold",
              "font",
              "heading",
              "i cursor",
              "indent",
              "italic",
              "linkify",
              "list",
              "list alternate",
              "list alternate outline",
              "list ol",
              "list ul",
              "outdent",
              "paragraph",
              "quote left",
              "quote right",
              "strikethrough",
              "subscript",
              "superscript",
              "th",
              "th large",
              "th list",
              "trash",
              "trash alternate",
              "trash alternate outline",
              "underline",
              "unlink",
              "file archive",
              "file archive outline",
              "file excel",
              "file excel outline",
              "file image",
              "file image outline",
              "file pdf",
              "file pdf outline",
              "file powerpoint",
              "file powerpoint outline",
              "file word",
              "file word outline",
              "genderless",
              "mars",
              "mars double",
              "mars stroke",
              "mars stroke horizontal",
              "mars stroke vertical",
              "mercury",
              "neuter",
              "transgender",
              "transgender alternate",
              "venus",
              "venus double",
              "venus mars",
              "hand lizard",
              "hand lizard outline",
              "hand paper",
              "hand paper outline",
              "hand peace",
              "hand peace outline",
              "hand rock",
              "hand rock outline",
              "hand scissors",
              "hand scissors outline",
              "hand spock",
              "hand spock outline",
              "handshake",
              "handshake outline",
              "thumbs down",
              "thumbs down outline",
              "thumbs up",
              "thumbs up outline",
              "ambulance",
              "h square",
              "heart",
              "heart outline",
              "heartbeat",
              "hospital",
              "hospital outline",
              "medkit",
              "plus square",
              "plus square outline",
              "stethoscope",
              "user md",
              "bolt",
              "camera",
              "camera retro",
              "id badge",
              "id badge outline",
              "id card",
              "id card outline",
              "image",
              "image outline",
              "images",
              "images outline",
              "sliders horizontal",
              "ban",
              "bars",
              "beer",
              "check",
              "check circle",
              "check circle outline",
              "check square",
              "check square outline",
              "cloud",
              "cog",
              "cogs",
              "database",
              "dot circle",
              "dot circle outline",
              "ellipsis horizontal",
              "ellipsis vertical",
              "exclamation",
              "exclamation circle",
              "exclamation triangle",
              "flag",
              "flag outline",
              "flag checkered",
              "frown",
              "frown outline",
              "hashtag",
              "home",
              "info",
              "info circle",
              "magic",
              "meh",
              "meh outline",
              "minus",
              "minus circle",
              "minus square",
              "minus square outline",
              "plus",
              "plus circle",
              "question",
              "search",
              "search minus",
              "search plus",
              "share alternate",
              "share alternate square",
              "signal",
              "smile",
              "smile outline",
              "star",
              "star outline",
              "star half",
              "star half outline",
              "times",
              "times circle",
              "times circle outline",
              "toggle off",
              "toggle on",
              "trophy",
              "user",
              "user outline",
              "user circle",
              "user circle outline",
              "box",
              "boxes",
              "clipboard check",
              "clipboard list",
              "dolly",
              "dolly flatbed",
              "pallet",
              "shipping fast",
              "truck",
              "warehouse",
              "anchor",
              "bed",
              "bicycle",
              "binoculars",
              "bomb",
              "bookmark",
              "bookmark outline",
              "car",
              "fighter jet",
              "fire",
              "flask",
              "gamepad",
              "gavel",
              "gift",
              "glass martini",
              "graduation cap",
              "key",
              "leaf",
              "lemon",
              "lemon outline",
              "life ring",
              "life ring outline",
              "lightbulb",
              "lightbulb outline",
              "magnet",
              "male",
              "map",
              "map outline",
              "map marker",
              "map marker alternate",
              "map pin",
              "map signs",
              "motorcycle",
              "newspaper",
              "newspaper outline",
              "paw",
              "plane",
              "road",
              "rocket",
              "ship",
              "shopping bag",
              "shopping basket",
              "shopping cart",
              "shower",
              "street view",
              "subway",
              "taxi",
              "ticket alternate",
              "train",
              "tree",
              "umbrella",
              "university",
              "utensil spoon",
              "utensils",
              "wrench",
              "band aid",
              "dna",
              "first aid",
              "hospital symbol",
              "pills",
              "syringe",
              "thermometer",
              "weight",
              "bus",
              "cube",
              "cubes",
              "futbol",
              "futbol outline",
              "gem",
              "gem outline",
              "lock",
              "lock open",
              "moon",
              "moon outline",
              "puzzle piece",
              "snowflake",
              "snowflake outline",
              "space shuttle",
              "sun",
              "sun outline",
              "tachometer alternate",
              "unlock",
              "unlock alternate",
              "cart plus",
              "credit card",
              "credit card outline",
              "square",
              "square outline",
              "asterisk",
              "circle notch",
              "spinner",
              "baseball ball",
              "basketball ball",
              "bowling ball",
              "football ball",
              "golf ball",
              "hockey puck",
              "quidditch",
              "table tennis",
              "volleyball ball",
              "battery empty",
              "battery full",
              "battery half",
              "battery quarter",
              "battery three quarters",
              "sign in alternate",
              "sign out alternate",
              "thermometer empty",
              "thermometer full",
              "thermometer half",
              "thermometer quarter",
              "thermometer three quarters",
              "child",
              "female",
              "user plus",
              "user times",
              "users",
              "500px",
              "accessible",
              "accusoft",
              "adn",
              "adversal",
              "affiliatetheme",
              "algolia",
              "amazon",
              "amazon pay",
              "amilia",
              "android",
              "angellist",
              "angrycreative",
              "angular",
              "app store",
              "app store ios",
              "apper",
              "apple",
              "apple pay",
              "asymmetrik",
              "audible",
              "autoprefixer",
              "avianex",
              "aviato",
              "aws",
              "bandcamp",
              "behance",
              "behance square",
              "bimobject",
              "bitbucket",
              "bitcoin",
              "bity",
              "black tie",
              "blackberry",
              "blogger",
              "blogger b",
              "bluetooth",
              "bluetooth b",
              "btc",
              "buromobelexperte",
              "buysellads",
              "cc amazon pay",
              "cc amex",
              "cc apple pay",
              "cc diners club",
              "cc discover",
              "cc jcb",
              "cc mastercard",
              "cc paypal",
              "cc stripe",
              "cc visa",
              "centercode",
              "chrome",
              "cloudscale",
              "cloudsmith",
              "cloudversify",
              "codepen",
              "codiepie",
              "connectdevelop",
              "contao",
              "cpanel",
              "creative commons",
              "css3",
              "css3 alternate",
              "cuttlefish",
              "d and d",
              "dashcube",
              "delicious",
              "deploydog",
              "deskpro",
              "deviantart",
              "digg",
              "digital ocean",
              "discord",
              "discourse",
              "dochub",
              "docker",
              "draft2digital",
              "dribbble",
              "dribbble square",
              "dropbox",
              "drupal",
              "dyalog",
              "earlybirds",
              "edge",
              "elementor",
              "ember",
              "empire",
              "envira",
              "erlang",
              "ethereum",
              "etsy",
              "expeditedssl",
              "facebook",
              "facebook f",
              "facebook messenger",
              "facebook square",
              "firefox",
              "first order",
              "firstdraft",
              "flickr",
              "flipboard",
              "fly",
              "font awesome",
              "font awesome alternate",
              "font awesome flag",
              "fonticons",
              "fonticons fi",
              "fort awesome",
              "fort awesome alternate",
              "forumbee",
              "foursquare",
              "free code camp",
              "freebsd",
              "get pocket",
              "gg",
              "gg circle",
              "git",
              "git square",
              "github",
              "github alternate",
              "github square",
              "gitkraken",
              "gitlab",
              "gitter",
              "glide",
              "glide g",
              "gofore",
              "goodreads",
              "goodreads g",
              "google",
              "google drive",
              "google play",
              "google plus",
              "google plus g",
              "google plus square",
              "google wallet",
              "gratipay",
              "grav",
              "gripfire",
              "grunt",
              "gulp",
              "hacker news",
              "hacker news square",
              "hips",
              "hire a helper",
              "hooli",
              "hotjar",
              "houzz",
              "html5",
              "hubspot",
              "imdb",
              "instagram",
              "internet explorer",
              "ioxhost",
              "itunes",
              "itunes note",
              "jenkins",
              "joget",
              "joomla",
              "js",
              "js square",
              "jsfiddle",
              "keycdn",
              "kickstarter",
              "kickstarter k",
              "korvue",
              "laravel",
              "lastfm",
              "lastfm square",
              "leanpub",
              "less",
              "linechat",
              "linkedin",
              "linkedin alternate",
              "linode",
              "linux",
              "lyft",
              "magento",
              "maxcdn",
              "medapps",
              "medium",
              "medium m",
              "medrt",
              "meetup",
              "microsoft",
              "mix",
              "mixcloud",
              "mizuni",
              "modx",
              "monero",
              "napster",
              "nintendo switch",
              "node",
              "node js",
              "npm",
              "ns8",
              "nutritionix",
              "odnoklassniki",
              "odnoklassniki square",
              "opencart",
              "openid",
              "opera",
              "optin monster",
              "osi",
              "page4",
              "pagelines",
              "palfed",
              "patreon",
              "paypal",
              "periscope",
              "phabricator",
              "phoenix framework",
              "php",
              "pied piper",
              "pied piper alternate",
              "pied piper pp",
              "pinterest",
              "pinterest p",
              "pinterest square",
              "playstation",
              "product hunt",
              "pushed",
              "python",
              "qq",
              "quinscape",
              "quora",
              "ravelry",
              "react",
              "rebel",
              "redriver",
              "reddit",
              "reddit alien",
              "reddit square",
              "rendact",
              "renren",
              "replyd",
              "resolving",
              "rocketchat",
              "rockrms",
              "safari",
              "sass",
              "schlix",
              "scribd",
              "searchengin",
              "sellcast",
              "sellsy",
              "servicestack",
              "shirtsinbulk",
              "simplybuilt",
              "sistrix",
              "skyatlas",
              "skype",
              "slack",
              "slack hash",
              "slideshare",
              "snapchat",
              "snapchat ghost",
              "snapchat square",
              "soundcloud",
              "speakap",
              "spotify",
              "stack exchange",
              "stack overflow",
              "staylinked",
              "steam",
              "steam square",
              "steam symbol",
              "sticker mule",
              "strava",
              "stripe",
              "stripe s",
              "studiovinari",
              "stumbleupon",
              "stumbleupon circle",
              "superpowers",
              "supple",
              "telegram",
              "telegram plane",
              "tencent weibo",
              "themeisle",
              "trello",
              "tripadvisor",
              "tumblr",
              "tumblr square",
              "twitch",
              "twitter",
              "twitter square",
              "typo3",
              "uber",
              "uikit",
              "uniregistry",
              "untappd",
              "usb",
              "ussunnah",
              "vaadin",
              "viacoin",
              "viadeo",
              "viadeo square",
              "viber",
              "vimeo",
              "vimeo square",
              "vimeo v",
              "vine",
              "vk",
              "vnv",
              "vuejs",
              "wechat",
              "weibo",
              "weixin",
              "whatsapp",
              "whatsapp square",
              "whmcs",
              "wikipedia w",
              "windows",
              "wordpress",
              "wordpress simple",
              "wpbeginner",
              "wpexplorer",
              "wpforms",
              "xbox",
              "xing",
              "xing square",
              "y combinator",
              "yahoo",
              "yandex",
              "yandex international",
              "yelp",
              "yoast",
              "youtube",
              "youtube square",
              "chess rock",
              "ordered list",
              "unordered list",
              "user doctor",
              "shield",
              "puzzle",
              "add circle",
              "add square",
              "add to calendar",
              "add to cart",
              "add user",
              "add",
              "alarm mute",
              "alarm",
              "ald",
              "als",
              "announcement",
              "area chart",
              "area graph",
              "arrow down cart",
              "asexual",
              "asl interpreting",
              "asl",
              "assistive listening devices",
              "attach",
              "attention",
              "balance",
              "bar",
              "bathtub",
              "battery four",
              "battery high",
              "battery low",
              "battery one",
              "battery three",
              "battery two",
              "battery zero",
              "birthday",
              "block layout",
              "bluetooth alternative",
              "broken chain",
              "browser",
              "call square",
              "call",
              "cancel",
              "cart",
              "cc",
              "chain",
              "chat",
              "checked calendar",
              "checkmark",
              "circle notched",
              "close",
              "cny",
              "cocktail",
              "commenting",
              "computer",
              "configure",
              "content",
              "deafness",
              "delete calendar",
              "delete",
              "detective",
              "discussions",
              "doctor",
              "dollar",
              "dont",
              "drivers license",
              "dropdown",
              "emergency",
              "envira gallery",
              "erase",
              "eur",
              "euro",
              "eyedropper",
              "factory",
              "favorite",
              "feed",
              "female homosexual",
              "file text",
              "file text outline",
              "find",
              "fork",
              "game",
              "gay",
              "gbp",
              "google plus circle",
              "google plus official",
              "grab",
              "graduation",
              "grid layout",
              "group",
              "h",
              "hand victory",
              "handicap",
              "hard of hearing",
              "header",
              "help circle",
              "help",
              "heterosexual",
              "hide",
              "hotel",
              "hourglass four",
              "hourglass full",
              "hourglass one",
              "hourglass three",
              "hourglass two",
              "idea",
              "ils",
              "in cart",
              "inr",
              "intergender",
              "intersex",
              "jpy",
              "krw",
              "lab",
              "law",
              "legal",
              "lesbian",
              "lightning",
              "like",
              "line graph",
              "linkedin square",
              "lira",
              "list layout",
              "magnify",
              "mail forward",
              "mail square",
              "mail",
              "male homosexual",
              "man",
              "marker",
              "mars alternate",
              "mars horizontal",
              "mars vertical",
              "microsoft edge",
              "military",
              "ms edge",
              "mute",
              "new pied piper",
              "non binary transgender",
              "numbered list",
              "options",
              "other gender horizontal",
              "other gender vertical",
              "other gender",
              "payment",
              "paypal card",
              "pencil square",
              "photo",
              "picture",
              "pie chart",
              "pie graph",
              "pied piper hat",
              "pin",
              "plus cart",
              "point",
              "pointing down",
              "pointing left",
              "pointing right",
              "pointing up",
              "pound",
              "power cord",
              "power",
              "privacy",
              "r circle",
              "rain",
              "record",
              "refresh",
              "remove circle",
              "remove from calendar",
              "remove user",
              "remove",
              "repeat",
              "rmb",
              "rouble",
              "rub",
              "ruble",
              "rupee",
              "s15",
              "selected radio",
              "send",
              "setting",
              "settings",
              "shekel",
              "sheqel",
              "shipping",
              "shop",
              "shuffle",
              "shutdown",
              "sidebar",
              "signing",
              "signup",
              "sliders",
              "soccer",
              "sort alphabet ascending",
              "sort alphabet descending",
              "sort ascending",
              "sort content ascending",
              "sort content descending",
              "sort descending",
              "sort numeric ascending",
              "sort numeric descending",
              "sound",
              "spy",
              "stripe card",
              "student",
              "talk",
              "target",
              "teletype",
              "television",
              "text cursor",
              "text telephone",
              "theme",
              "thumb tack",
              "time",
              "tm",
              "toggle down",
              "toggle left",
              "toggle right",
              "toggle up",
              "translate",
              "travel",
              "treatment",
              "triangle down",
              "triangle left",
              "triangle right",
              "triangle up",
              "try",
              "unhide",
              "unlinkify",
              "unmute",
              "usd",
              "user cancel",
              "user close",
              "user delete",
              "user x",
              "vcard",
              "video camera",
              "video play",
              "volume control phone",
              "wait",
              "warning circle",
              "warning sign",
              "warning",
              "wi-fi",
              "winner",
              "wizard",
              "woman",
              "won",
              "wordpress beginner",
              "wordpress forms",
              "world",
              "write square",
              "x",
              "yen",
              "zip",
              "zoom in",
              "zoom out",
              "zoom",
              "bitbucket square",
              "checkmark box",
              "circle thin",
              "compose",
              "conversation",
              "credit card alternative",
              "currency",
              "dashboard",
              "diamond",
              "disk",
              "external share",
              "external square",
              "external",
              "facebook official",
              "food",
              "hourglass zero",
              "level down",
              "level up",
              "log out",
              "meanpath",
              "money",
              "move",
              "pencil",
              "protect",
              "radio",
              "remove bookmark",
              "resize horizontal",
              "resize vertical",
              "sign in",
              "sign out",
              "spoon",
              "star half empty",
              "star half full",
              "ticket",
              "times rectangle",
              "write"
            ],
            "name": "icon",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Container type",
            "default": "docker",
            "name": "type",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Restart policy",
            "enum": ["always", "never", "on-failed", "on-unhealthy"],
            "name": "restartPolicy",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "Desired status",
            "enum": ["stopped", "running"],
            "name": "desiredStatus",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "Registry type",
            "enum": ["public", "private"],
            "name": "registryType",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "credentials",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "Container categories",
            "enum": [
              "Receiver",
              "Connectivity",
              "Data Acquisition",
              "IT/Cloud Connectors",
              "Services",
              "Applications"
            ],
            "name": "category",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Settings page",
            "enum": [
              "gatewayTelemetry",
              "networkTopology",
              "opcuaPublisher",
              "ainConnector",
              "netFieldProxy",
              "netFieldAppPlatformConnector"
            ],
            "name": "settingsPageId",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Short description, max(60)",
            "maxLength": 60,
            "name": "shortDescription",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "Description, max(3000)",
            "maxLength": 3000,
            "name": "description",
            "in": "formData"
          },
          {
            "type": "array",
            "description": "MQTT topics",
            "x-meta": { "swaggerType": "array" },
            "minItems": 1,
            "x-constraint": { "unique": true },
            "items": { "type": "string" },
            "collectionFormat": "multi",
            "name": "mqttTopics",
            "in": "formData"
          },
          {
            "type": "array",
            "x-meta": { "swaggerType": "array" },
            "minItems": 1,
            "items": {
              "type": "string",
              "x-type": "object",
              "x-properties": {
                "version": { "type": "string", "description": "Version name" },
                "imageUri": { "type": "string", "description": "Image URI" },
                "releaseNotes": {
                  "type": "string",
                  "description": "Release notes, max(3000)",
                  "maxLength": 3000
                },
                "useGlobalCredentials": {
                  "type": "boolean",
                  "description": "Use global credentials",
                  "default": true
                },
                "registryType": {
                  "type": "string",
                  "description": "Registry type",
                  "enum": ["public", "private"]
                },
                "credentials": { "type": "string", "default": {} },
                "processorArchitecture": {
                  "type": "string",
                  "description": "Processor architecture",
                  "enum": [
                    "Linux-X86",
                    "Linux-X64",
                    "Linux-ARM32V7",
                    "Linux-ARM64V8",
                    "All"
                  ]
                },
                "containerCreateOptions": {
                  "type": "object",
                  "description": "See latest Docker documentation",
                  "x-meta": { "swaggerType": "object" },
                  "x-properties": {
                    "Hostname": { "type": "string" },
                    "Domainname": { "type": "string" },
                    "User": { "type": "string" },
                    "AttachStdin": { "type": "boolean" },
                    "AttachStdout": { "type": "boolean" },
                    "AttachStderr": { "type": "boolean" },
                    "ExposedPorts": {
                      "type": "object",
                      "x-properties": { "string": { "type": "object" } }
                    },
                    "Tty": { "type": "boolean" },
                    "OpenStdin": { "type": "boolean" },
                    "StdinOnce": { "type": "boolean" },
                    "Env": {
                      "type": "string",
                      "x-alternatives": [
                        { "type": "string" },
                        {
                          "type": "array",
                          "items": { "type": "string" },
                          "collectionFormat": "multi",
                          "name": "Env"
                        }
                      ]
                    },
                    "Cmd": {
                      "type": "string",
                      "x-alternatives": [
                        { "type": "string" },
                        {
                          "type": "array",
                          "items": { "type": "string" },
                          "collectionFormat": "multi",
                          "name": "Cmd"
                        }
                      ]
                    },
                    "Healthcheck": {
                      "type": "object",
                      "x-properties": {
                        "Test": {
                          "type": "array",
                          "items": { "type": "string" },
                          "collectionFormat": "multi",
                          "name": "Test"
                        },
                        "Interval": {
                          "type": "string",
                          "enum": [0],
                          "x-alternatives": [
                            { "type": "string", "enum": [0] },
                            { "type": "integer", "minimum": 1000000 }
                          ]
                        },
                        "Timeout": {
                          "type": "string",
                          "enum": [0],
                          "x-alternatives": [
                            { "type": "string", "enum": [0] },
                            { "type": "integer", "minimum": 1000000 }
                          ]
                        },
                        "Retries": { "type": "integer", "minimum": 0 },
                        "StartPeriod": {
                          "type": "string",
                          "enum": [0],
                          "x-alternatives": [
                            { "type": "string", "enum": [0] },
                            { "type": "integer", "minimum": 1000000 }
                          ]
                        }
                      }
                    },
                    "ArgsEscaped": { "type": "boolean" },
                    "Image": { "type": "string" },
                    "Volumes": {
                      "type": "object",
                      "x-properties": { "string": { "type": "object" } }
                    },
                    "WorkingDir": { "type": "string" },
                    "Entrypoint": {
                      "type": "array",
                      "items": { "type": "string" },
                      "collectionFormat": "multi",
                      "x-alternatives": [
                        {
                          "type": "array",
                          "items": { "type": "string" },
                          "collectionFormat": "multi",
                          "name": "Entrypoint"
                        },
                        { "type": "string" }
                      ]
                    },
                    "NetworkDisabled": { "type": "boolean" },
                    "MacAddress": {
                      "type": "string",
                      "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$"
                    },
                    "OnBuild": {
                      "type": "array",
                      "items": { "type": "string" },
                      "collectionFormat": "multi",
                      "name": "OnBuild"
                    },
                    "Labels": {
                      "type": "object",
                      "x-properties": { "string": { "type": "string" } }
                    },
                    "StopSignal": { "type": "string" },
                    "StopTimeout": { "type": "integer", "minimum": 0 },
                    "Shell": {
                      "type": "array",
                      "items": { "type": "string" },
                      "collectionFormat": "multi",
                      "name": "Shell"
                    },
                    "HostConfig": {
                      "type": "object",
                      "x-properties": {
                        "MaximumIOps": { "type": "integer" },
                        "MaximumIOBps": { "type": "integer" },
                        "CpuShares": { "type": "integer" },
                        "Memory": { "type": "integer" },
                        "CgroupParent": { "type": "string" },
                        "BlkioWeight": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 1000
                        },
                        "BlkioWeightDevice": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-properties": {
                              "Path": { "type": "string" },
                              "Weight": { "type": "integer", "minimum": 0 }
                            }
                          },
                          "collectionFormat": "multi",
                          "name": "BlkioWeightDevice"
                        },
                        "BlkioDeviceReadBps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          },
                          "collectionFormat": "multi",
                          "name": "BlkioDeviceReadBps"
                        },
                        "BlkioDeviceWriteBps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          },
                          "collectionFormat": "multi",
                          "name": "BlkioDeviceWriteBps"
                        },
                        "BlkioDeviceReadIOps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          },
                          "collectionFormat": "multi",
                          "name": "BlkioDeviceReadIOps"
                        },
                        "BlkioDeviceWriteIOps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          },
                          "collectionFormat": "multi",
                          "name": "BlkioDeviceWriteIOps"
                        },
                        "CpuPeriod": { "type": "integer" },
                        "CpuQuota": { "type": "integer" },
                        "CpuRealtimePeriod": { "type": "integer" },
                        "CpuRealtimeRuntime": { "type": "integer" },
                        "CpusetCpus": { "type": "string" },
                        "CpusetMems": { "type": "string" },
                        "Devices": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-properties": {
                              "PathOnHost": { "type": "string" },
                              "PathInContainer": { "type": "string" },
                              "CgroupPermissions": { "type": "string" }
                            }
                          },
                          "collectionFormat": "multi",
                          "name": "Devices"
                        },
                        "DeviceCgroupRules": {
                          "type": "array",
                          "items": { "type": "string" },
                          "collectionFormat": "multi",
                          "name": "DeviceCgroupRules"
                        },
                        "DiskQuota": { "type": "integer" },
                        "KernelMemory": { "type": "integer" },
                        "MemoryReservation": { "type": "integer" },
                        "MemorySwap": { "type": "integer" },
                        "MemorySwappiness": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 100
                        },
                        "NanoCPUs": { "type": "integer" },
                        "OomKillDisable": { "type": "boolean" },
                        "PidsLimit": { "type": "integer" },
                        "Ulimits": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-properties": {
                              "Name": { "type": "string" },
                              "Soft": { "type": "integer" },
                              "Hard": { "type": "integer" }
                            }
                          },
                          "collectionFormat": "multi",
                          "name": "Ulimits"
                        },
                        "CpuCount": { "type": "integer" },
                        "CpuPercent": { "type": "integer" },
                        "IOMaximumIOps": { "type": "integer" },
                        "IOMaximumBandwidth": { "type": "integer" },
                        "Binds": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "pattern": ".+:.+(:.+)?"
                          },
                          "collectionFormat": "multi",
                          "name": "Binds"
                        },
                        "ContainerIDFile": { "type": "string" },
                        "LogConfig": {
                          "type": "object",
                          "x-properties": {
                            "Type": {
                              "type": "string",
                              "enum": [
                                "json-file",
                                "syslog",
                                "journald",
                                "gelf",
                                "fluentd",
                                "awslogs",
                                "splunk",
                                "etwlogs",
                                "none"
                              ]
                            },
                            "Config": {
                              "type": "object",
                              "x-properties": { "string": { "type": "string" } }
                            }
                          }
                        },
                        "NetworkMode": {
                          "type": "string",
                          "enum": ["bridge", "host", "none"],
                          "x-alternatives": [
                            {
                              "type": "string",
                              "enum": ["bridge", "host", "none"]
                            },
                            { "type": "string", "pattern": "^container:.*$" }
                          ]
                        },
                        "PortBindings": {
                          "type": "object",
                          "x-properties": {
                            "string": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "x-properties": {
                                  "HostIp": { "type": "string" },
                                  "HostPort": { "type": "string" }
                                }
                              },
                              "collectionFormat": "multi",
                              "name": "string"
                            }
                          }
                        },
                        "RestartPolicy": {
                          "type": "object",
                          "x-properties": {
                            "Name": {
                              "type": "string",
                              "enum": ["always", "unless-stopped", "on-failure"]
                            },
                            "MaximumRetryCount": { "type": "integer" }
                          }
                        },
                        "AutoRemove": { "type": "boolean" },
                        "VolumeDriver": { "type": "string" },
                        "VolumesFrom": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "pattern": "^.+(:(ro|rw))?$"
                          },
                          "collectionFormat": "multi",
                          "name": "VolumesFrom"
                        },
                        "Mounts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "x-properties": {
                              "Target": { "type": "string" },
                              "Source": { "type": "string" },
                              "Type": {
                                "type": "string",
                                "enum": ["bind", "volume", "tmpfs"]
                              },
                              "ReadOnly": { "type": "boolean" },
                              "Consistency": { "type": "string" },
                              "BindOptions": {
                                "type": "object",
                                "x-properties": {
                                  "Propagation": {
                                    "type": "string",
                                    "enum": [
                                      "private",
                                      "rprivate",
                                      "shared",
                                      "rshared",
                                      "slave",
                                      "rslave"
                                    ]
                                  }
                                }
                              },
                              "VolumeOptions": {
                                "type": "object",
                                "x-properties": {
                                  "NoCopy": { "type": "boolean" },
                                  "Labels": {
                                    "type": "object",
                                    "x-properties": {
                                      "string": { "type": "string" }
                                    }
                                  },
                                  "DriverConfig": {
                                    "type": "object",
                                    "x-properties": {
                                      "Name": { "type": "string" },
                                      "Options": {
                                        "type": "object",
                                        "x-properties": {
                                          "string": { "type": "string" }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "TmpfsOptions": {
                                "type": "object",
                                "x-properties": {
                                  "SizeBytes": { "type": "integer" },
                                  "Mode": { "type": "integer" }
                                }
                              }
                            }
                          },
                          "collectionFormat": "multi",
                          "name": "Mounts"
                        },
                        "CapAdd": {
                          "type": "array",
                          "items": { "type": "string" },
                          "collectionFormat": "multi",
                          "name": "CapAdd"
                        },
                        "CapDrop": {
                          "type": "array",
                          "items": { "type": "string" },
                          "collectionFormat": "multi",
                          "name": "CapDrop"
                        },
                        "Dns": {
                          "type": "array",
                          "items": { "type": "string" },
                          "collectionFormat": "multi",
                          "name": "Dns"
                        },
                        "DnsOptions": {
                          "type": "array",
                          "items": { "type": "string" },
                          "collectionFormat": "multi",
                          "name": "DnsOptions"
                        },
                        "DnsSearch": {
                          "type": "array",
                          "items": { "type": "string" },
                          "collectionFormat": "multi",
                          "name": "DnsSearch"
                        },
                        "ExtraHosts": {
                          "type": "array",
                          "items": { "type": "string", "pattern": "^.+:.+$" },
                          "collectionFormat": "multi",
                          "name": "ExtraHosts"
                        },
                        "GroupAdd": {
                          "type": "array",
                          "items": { "type": "string" },
                          "collectionFormat": "multi",
                          "name": "GroupAdd"
                        },
                        "IpcMode": { "type": "string" },
                        "Cgroup": { "type": "string" },
                        "Links": {
                          "type": "array",
                          "items": { "type": "string", "pattern": "^.+:.+$" },
                          "collectionFormat": "multi",
                          "name": "Links"
                        },
                        "OomScoreAdj": { "type": "integer" },
                        "PidMode": {
                          "type": "string",
                          "pattern": "^.+(:.+)?$"
                        },
                        "Privileged": { "type": "boolean" },
                        "PublishAllPorts": { "type": "boolean" },
                        "ReadonlyRootfs": { "type": "boolean" },
                        "SecurityOpt": {
                          "type": "array",
                          "items": { "type": "string" },
                          "collectionFormat": "multi",
                          "name": "SecurityOpt"
                        },
                        "StorageOpt": {
                          "type": "object",
                          "x-properties": { "string": { "type": "string" } }
                        },
                        "Tmpfs": {
                          "type": "object",
                          "x-properties": { "string": { "type": "string" } }
                        },
                        "UTSMode": { "type": "string" },
                        "UsernsMode": { "type": "string" },
                        "ShmSize": { "type": "integer", "minimum": 0 },
                        "Sysctls": {
                          "type": "object",
                          "x-properties": { "string": { "type": "string" } }
                        },
                        "Runtime": { "type": "string" },
                        "ConsoleSize": {
                          "type": "array",
                          "x-constraint": { "length": 2 },
                          "items": { "type": "integer", "minimum": 0 },
                          "collectionFormat": "multi",
                          "name": "ConsoleSize"
                        },
                        "Isolation": {
                          "type": "string",
                          "enum": ["default", "process", "hyperv"]
                        }
                      }
                    },
                    "NetworkingConfig": {
                      "type": "object",
                      "x-properties": {
                        "EndpointsConfig": {
                          "type": "object",
                          "x-properties": {
                            "string": {
                              "type": "object",
                              "x-properties": {
                                "IPAMConfig": {
                                  "type": "object",
                                  "x-properties": {
                                    "IPv4Address": {
                                      "type": "string",
                                      "x-format": {
                                        "ip": {
                                          "cidr": "optional",
                                          "version": ["ipv4"]
                                        }
                                      }
                                    },
                                    "IPv6Address": {
                                      "type": "string",
                                      "x-format": {
                                        "ip": {
                                          "cidr": "optional",
                                          "version": ["ipv6"]
                                        }
                                      }
                                    },
                                    "LinkLocalIPs": {
                                      "type": "array",
                                      "items": { "type": "string" },
                                      "collectionFormat": "multi",
                                      "name": "LinkLocalIPs"
                                    }
                                  }
                                },
                                "Links": {
                                  "type": "array",
                                  "items": { "type": "string" },
                                  "collectionFormat": "multi",
                                  "name": "Links"
                                },
                                "Aliases": {
                                  "type": "array",
                                  "items": { "type": "string" },
                                  "collectionFormat": "multi",
                                  "name": "Aliases"
                                },
                                "NetworkId": { "type": "string" },
                                "EndpointId": { "type": "string" },
                                "Gateway": { "type": "string" },
                                "IPAddress": {
                                  "type": "string",
                                  "x-format": {
                                    "ip": {
                                      "cidr": "optional",
                                      "version": ["ipv4"]
                                    }
                                  }
                                },
                                "IPPrefixLen": { "type": "integer" },
                                "IPv6Gateway": { "type": "string" },
                                "GlobalIPv6Address": {
                                  "type": "string",
                                  "x-format": {
                                    "ip": {
                                      "cidr": "optional",
                                      "version": ["ipv6"]
                                    }
                                  }
                                },
                                "GlobalIPv6PrefixLen": { "type": "integer" },
                                "MacAddress": { "type": "string" }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "containerTwinDesiredOptions": {
                  "type": "object",
                  "description": "JSON / See Azure documentation",
                  "x-meta": { "swaggerType": "object" }
                },
                "environmentVariables": {
                  "type": "array",
                  "description": "An array of object containing environment variables",
                  "x-meta": { "swaggerType": "array" },
                  "x-constraint": { "unique": "key" },
                  "items": {
                    "type": "object",
                    "required": ["key", "value"],
                    "x-properties": {
                      "key": { "type": "string" },
                      "value": { "type": "string" }
                    }
                  },
                  "collectionFormat": "multi",
                  "name": "environmentVariables"
                }
              }
            },
            "collectionFormat": "multi",
            "name": "versions",
            "in": "formData",
            "required": true
          }
        ],
        "consumes": ["multipart/form-data"],
        "tags": ["containers"],
        "security": [{ "jwt": [] }],
        "responses": {
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Random uuid v4.",
                  "default": "7adb258e-3ee7-4299-bcb9-513fab03f7d4",
                  "x-format": { "guid": { "version": "uuidv4" } }
                },
                "image": { "type": "string" },
                "organisationId": { "type": "number" },
                "organisation": { "type": "string" },
                "containerAccess": {
                  "type": "string",
                  "description": "Container access",
                  "enum": ["public", "private"]
                },
                "status": { "type": "string" },
                "displayName": {
                  "type": "string",
                  "description": "Display name"
                },
                "containerName": {
                  "type": "string",
                  "description": "Container name"
                },
                "icon": {
                  "type": "string",
                  "description": "Icon name",
                  "enum": [
                    "american sign language interpreting",
                    "assistive listening systems",
                    "audio description",
                    "blind",
                    "braille",
                    "closed captioning",
                    "closed captioning outline",
                    "deaf",
                    "low vision",
                    "phone volume",
                    "question circle",
                    "question circle outline",
                    "sign language",
                    "tty",
                    "universal access",
                    "wheelchair",
                    "angle double down",
                    "angle double left",
                    "angle double right",
                    "angle double up",
                    "angle down",
                    "angle left",
                    "angle right",
                    "angle up",
                    "arrow alternate circle down",
                    "arrow alternate circle down outline",
                    "arrow alternate circle left",
                    "arrow alternate circle left outline",
                    "arrow alternate circle right",
                    "arrow alternate circle right outline",
                    "arrow alternate circle up",
                    "arrow alternate circle up outline",
                    "arrow circle down",
                    "arrow circle left",
                    "arrow circle right",
                    "arrow circle up",
                    "arrow down",
                    "arrow left",
                    "arrow right",
                    "arrow up",
                    "arrows alternate",
                    "arrows alternate horizontal",
                    "arrows alternate vertical",
                    "caret down",
                    "caret left",
                    "caret right",
                    "caret square down",
                    "caret square down outline",
                    "caret square left",
                    "caret square left outline",
                    "caret square right",
                    "caret square right outline",
                    "caret square up",
                    "caret square up outline",
                    "caret up",
                    "cart arrow down",
                    "chart line",
                    "chevron circle down",
                    "chevron circle left",
                    "chevron circle right",
                    "chevron circle up",
                    "chevron down",
                    "chevron left",
                    "chevron right",
                    "chevron up",
                    "cloud download",
                    "cloud upload",
                    "download",
                    "exchange",
                    "expand arrows alternate",
                    "external alternate",
                    "external square alternate",
                    "hand point down",
                    "hand point down outline",
                    "hand point left",
                    "hand point left outline",
                    "hand point right",
                    "hand point right outline",
                    "hand point up",
                    "hand point up outline",
                    "hand pointer",
                    "hand pointer outline",
                    "history",
                    "level down alternate",
                    "level up alternate",
                    "location arrow",
                    "long arrow alternate down",
                    "long arrow alternate left",
                    "long arrow alternate right",
                    "long arrow alternate up",
                    "mouse pointer",
                    "play",
                    "random",
                    "recycle",
                    "redo",
                    "redo alternate",
                    "reply",
                    "reply all",
                    "retweet",
                    "share",
                    "share square",
                    "share square outline",
                    "sign-in",
                    "sign-out",
                    "sign-in alternate",
                    "sign-out alternate",
                    "sort",
                    "sort alphabet down",
                    "sort alphabet up",
                    "sort amount down",
                    "sort amount up",
                    "sort down",
                    "sort numeric down",
                    "sort numeric up",
                    "sort up",
                    "sync",
                    "sync alternate",
                    "text height",
                    "text width",
                    "undo",
                    "undo alternate",
                    "upload",
                    "zoom-in",
                    "zoom-out",
                    "backward",
                    "circle",
                    "circle outline",
                    "compress",
                    "eject",
                    "expand",
                    "fast backward",
                    "fast forward",
                    "file audio",
                    "file audio outline",
                    "file video",
                    "file video outline",
                    "film",
                    "forward",
                    "headphones",
                    "microphone",
                    "microphone slash",
                    "music",
                    "pause",
                    "pause circle",
                    "pause circle outline",
                    "play circle",
                    "play circle outline",
                    "podcast",
                    "rss",
                    "rss square",
                    "step backward",
                    "step forward",
                    "stop",
                    "stop circle",
                    "stop circle outline",
                    "video",
                    "volume down",
                    "volume off",
                    "volume up",
                    "address book",
                    "address book outline",
                    "address card",
                    "address card outline",
                    "archive",
                    "balance scale",
                    "birthday cake",
                    "book",
                    "briefcase",
                    "building",
                    "building outline",
                    "bullhorn",
                    "bullseye",
                    "calculator",
                    "calendar",
                    "calendar outline",
                    "calendar alternate",
                    "calendar alternate outline",
                    "certificate",
                    "chart area",
                    "chart bar",
                    "chart bar outline",
                    "chart pie",
                    "clipboard",
                    "clipboard outline",
                    "coffee",
                    "columns",
                    "compass",
                    "compass outline",
                    "copy",
                    "copy outline",
                    "copyright",
                    "copyright outline",
                    "cut",
                    "edit",
                    "edit outline",
                    "envelope",
                    "envelope outline",
                    "envelope open",
                    "envelope open outline",
                    "envelope square",
                    "eraser",
                    "fax",
                    "file",
                    "file outline",
                    "file alternate",
                    "file alternate outline",
                    "folder",
                    "folder outline",
                    "folder open",
                    "folder open outline",
                    "globe",
                    "industry",
                    "paperclip",
                    "paste",
                    "pen square",
                    "pencil alternate",
                    "percent",
                    "phone",
                    "phone square",
                    "registered",
                    "registered outline",
                    "save",
                    "save outline",
                    "sitemap",
                    "sticky note",
                    "sticky note outline",
                    "suitcase",
                    "table",
                    "tag",
                    "tags",
                    "tasks",
                    "thumbtack",
                    "trademark",
                    "chess",
                    "chess bishop",
                    "chess board",
                    "chess king",
                    "chess knight",
                    "chess pawn",
                    "chess queen",
                    "chess rook",
                    "square full",
                    "barcode",
                    "bath",
                    "bug",
                    "code",
                    "code branch",
                    "file code",
                    "file code outline",
                    "filter",
                    "fire extinguisher",
                    "keyboard",
                    "keyboard outline",
                    "microchip",
                    "qrcode",
                    "shield alternate",
                    "terminal",
                    "user secret",
                    "window close",
                    "window close outline",
                    "window maximize",
                    "window maximize outline",
                    "window minimize",
                    "window minimize outline",
                    "window restore",
                    "window restore outline",
                    "at",
                    "bell",
                    "bell outline",
                    "bell slash",
                    "bell slash outline",
                    "comment",
                    "comment outline",
                    "comment alternate",
                    "comment alternate outline",
                    "comments",
                    "comments outline",
                    "inbox",
                    "language",
                    "mobile",
                    "mobile alternate",
                    "paper plane",
                    "paper plane outline",
                    "wifi",
                    "desktop",
                    "hdd",
                    "hdd outline",
                    "laptop",
                    "plug",
                    "power off",
                    "print",
                    "server",
                    "tablet",
                    "tablet alternate",
                    "tv",
                    "dollar sign",
                    "euro sign",
                    "lira sign",
                    "money bill alternate",
                    "money bill alternate outline",
                    "pound sign",
                    "ruble sign",
                    "rupee sign",
                    "shekel sign",
                    "won sign",
                    "yen sign",
                    "calendar check",
                    "calendar check outline",
                    "calendar minus",
                    "calendar minus outline",
                    "calendar plus",
                    "calendar plus outline",
                    "calendar times",
                    "calendar times outline",
                    "clock",
                    "clock outline",
                    "hourglass",
                    "hourglass outline",
                    "hourglass end",
                    "hourglass half",
                    "hourglass start",
                    "stopwatch",
                    "adjust",
                    "clone",
                    "clone outline",
                    "crop",
                    "crosshairs",
                    "eye",
                    "eye dropper",
                    "eye slash",
                    "eye slash outline",
                    "object group",
                    "object group outline",
                    "object ungroup",
                    "object ungroup outline",
                    "paint brush",
                    "tint",
                    "align center",
                    "align justify",
                    "align left",
                    "align right",
                    "bold",
                    "font",
                    "heading",
                    "i cursor",
                    "indent",
                    "italic",
                    "linkify",
                    "list",
                    "list alternate",
                    "list alternate outline",
                    "list ol",
                    "list ul",
                    "outdent",
                    "paragraph",
                    "quote left",
                    "quote right",
                    "strikethrough",
                    "subscript",
                    "superscript",
                    "th",
                    "th large",
                    "th list",
                    "trash",
                    "trash alternate",
                    "trash alternate outline",
                    "underline",
                    "unlink",
                    "file archive",
                    "file archive outline",
                    "file excel",
                    "file excel outline",
                    "file image",
                    "file image outline",
                    "file pdf",
                    "file pdf outline",
                    "file powerpoint",
                    "file powerpoint outline",
                    "file word",
                    "file word outline",
                    "genderless",
                    "mars",
                    "mars double",
                    "mars stroke",
                    "mars stroke horizontal",
                    "mars stroke vertical",
                    "mercury",
                    "neuter",
                    "transgender",
                    "transgender alternate",
                    "venus",
                    "venus double",
                    "venus mars",
                    "hand lizard",
                    "hand lizard outline",
                    "hand paper",
                    "hand paper outline",
                    "hand peace",
                    "hand peace outline",
                    "hand rock",
                    "hand rock outline",
                    "hand scissors",
                    "hand scissors outline",
                    "hand spock",
                    "hand spock outline",
                    "handshake",
                    "handshake outline",
                    "thumbs down",
                    "thumbs down outline",
                    "thumbs up",
                    "thumbs up outline",
                    "ambulance",
                    "h square",
                    "heart",
                    "heart outline",
                    "heartbeat",
                    "hospital",
                    "hospital outline",
                    "medkit",
                    "plus square",
                    "plus square outline",
                    "stethoscope",
                    "user md",
                    "bolt",
                    "camera",
                    "camera retro",
                    "id badge",
                    "id badge outline",
                    "id card",
                    "id card outline",
                    "image",
                    "image outline",
                    "images",
                    "images outline",
                    "sliders horizontal",
                    "ban",
                    "bars",
                    "beer",
                    "check",
                    "check circle",
                    "check circle outline",
                    "check square",
                    "check square outline",
                    "cloud",
                    "cog",
                    "cogs",
                    "database",
                    "dot circle",
                    "dot circle outline",
                    "ellipsis horizontal",
                    "ellipsis vertical",
                    "exclamation",
                    "exclamation circle",
                    "exclamation triangle",
                    "flag",
                    "flag outline",
                    "flag checkered",
                    "frown",
                    "frown outline",
                    "hashtag",
                    "home",
                    "info",
                    "info circle",
                    "magic",
                    "meh",
                    "meh outline",
                    "minus",
                    "minus circle",
                    "minus square",
                    "minus square outline",
                    "plus",
                    "plus circle",
                    "question",
                    "search",
                    "search minus",
                    "search plus",
                    "share alternate",
                    "share alternate square",
                    "signal",
                    "smile",
                    "smile outline",
                    "star",
                    "star outline",
                    "star half",
                    "star half outline",
                    "times",
                    "times circle",
                    "times circle outline",
                    "toggle off",
                    "toggle on",
                    "trophy",
                    "user",
                    "user outline",
                    "user circle",
                    "user circle outline",
                    "box",
                    "boxes",
                    "clipboard check",
                    "clipboard list",
                    "dolly",
                    "dolly flatbed",
                    "pallet",
                    "shipping fast",
                    "truck",
                    "warehouse",
                    "anchor",
                    "bed",
                    "bicycle",
                    "binoculars",
                    "bomb",
                    "bookmark",
                    "bookmark outline",
                    "car",
                    "fighter jet",
                    "fire",
                    "flask",
                    "gamepad",
                    "gavel",
                    "gift",
                    "glass martini",
                    "graduation cap",
                    "key",
                    "leaf",
                    "lemon",
                    "lemon outline",
                    "life ring",
                    "life ring outline",
                    "lightbulb",
                    "lightbulb outline",
                    "magnet",
                    "male",
                    "map",
                    "map outline",
                    "map marker",
                    "map marker alternate",
                    "map pin",
                    "map signs",
                    "motorcycle",
                    "newspaper",
                    "newspaper outline",
                    "paw",
                    "plane",
                    "road",
                    "rocket",
                    "ship",
                    "shopping bag",
                    "shopping basket",
                    "shopping cart",
                    "shower",
                    "street view",
                    "subway",
                    "taxi",
                    "ticket alternate",
                    "train",
                    "tree",
                    "umbrella",
                    "university",
                    "utensil spoon",
                    "utensils",
                    "wrench",
                    "band aid",
                    "dna",
                    "first aid",
                    "hospital symbol",
                    "pills",
                    "syringe",
                    "thermometer",
                    "weight",
                    "bus",
                    "cube",
                    "cubes",
                    "futbol",
                    "futbol outline",
                    "gem",
                    "gem outline",
                    "lock",
                    "lock open",
                    "moon",
                    "moon outline",
                    "puzzle piece",
                    "snowflake",
                    "snowflake outline",
                    "space shuttle",
                    "sun",
                    "sun outline",
                    "tachometer alternate",
                    "unlock",
                    "unlock alternate",
                    "cart plus",
                    "credit card",
                    "credit card outline",
                    "square",
                    "square outline",
                    "asterisk",
                    "circle notch",
                    "spinner",
                    "baseball ball",
                    "basketball ball",
                    "bowling ball",
                    "football ball",
                    "golf ball",
                    "hockey puck",
                    "quidditch",
                    "table tennis",
                    "volleyball ball",
                    "battery empty",
                    "battery full",
                    "battery half",
                    "battery quarter",
                    "battery three quarters",
                    "sign in alternate",
                    "sign out alternate",
                    "thermometer empty",
                    "thermometer full",
                    "thermometer half",
                    "thermometer quarter",
                    "thermometer three quarters",
                    "child",
                    "female",
                    "user plus",
                    "user times",
                    "users",
                    "500px",
                    "accessible",
                    "accusoft",
                    "adn",
                    "adversal",
                    "affiliatetheme",
                    "algolia",
                    "amazon",
                    "amazon pay",
                    "amilia",
                    "android",
                    "angellist",
                    "angrycreative",
                    "angular",
                    "app store",
                    "app store ios",
                    "apper",
                    "apple",
                    "apple pay",
                    "asymmetrik",
                    "audible",
                    "autoprefixer",
                    "avianex",
                    "aviato",
                    "aws",
                    "bandcamp",
                    "behance",
                    "behance square",
                    "bimobject",
                    "bitbucket",
                    "bitcoin",
                    "bity",
                    "black tie",
                    "blackberry",
                    "blogger",
                    "blogger b",
                    "bluetooth",
                    "bluetooth b",
                    "btc",
                    "buromobelexperte",
                    "buysellads",
                    "cc amazon pay",
                    "cc amex",
                    "cc apple pay",
                    "cc diners club",
                    "cc discover",
                    "cc jcb",
                    "cc mastercard",
                    "cc paypal",
                    "cc stripe",
                    "cc visa",
                    "centercode",
                    "chrome",
                    "cloudscale",
                    "cloudsmith",
                    "cloudversify",
                    "codepen",
                    "codiepie",
                    "connectdevelop",
                    "contao",
                    "cpanel",
                    "creative commons",
                    "css3",
                    "css3 alternate",
                    "cuttlefish",
                    "d and d",
                    "dashcube",
                    "delicious",
                    "deploydog",
                    "deskpro",
                    "deviantart",
                    "digg",
                    "digital ocean",
                    "discord",
                    "discourse",
                    "dochub",
                    "docker",
                    "draft2digital",
                    "dribbble",
                    "dribbble square",
                    "dropbox",
                    "drupal",
                    "dyalog",
                    "earlybirds",
                    "edge",
                    "elementor",
                    "ember",
                    "empire",
                    "envira",
                    "erlang",
                    "ethereum",
                    "etsy",
                    "expeditedssl",
                    "facebook",
                    "facebook f",
                    "facebook messenger",
                    "facebook square",
                    "firefox",
                    "first order",
                    "firstdraft",
                    "flickr",
                    "flipboard",
                    "fly",
                    "font awesome",
                    "font awesome alternate",
                    "font awesome flag",
                    "fonticons",
                    "fonticons fi",
                    "fort awesome",
                    "fort awesome alternate",
                    "forumbee",
                    "foursquare",
                    "free code camp",
                    "freebsd",
                    "get pocket",
                    "gg",
                    "gg circle",
                    "git",
                    "git square",
                    "github",
                    "github alternate",
                    "github square",
                    "gitkraken",
                    "gitlab",
                    "gitter",
                    "glide",
                    "glide g",
                    "gofore",
                    "goodreads",
                    "goodreads g",
                    "google",
                    "google drive",
                    "google play",
                    "google plus",
                    "google plus g",
                    "google plus square",
                    "google wallet",
                    "gratipay",
                    "grav",
                    "gripfire",
                    "grunt",
                    "gulp",
                    "hacker news",
                    "hacker news square",
                    "hips",
                    "hire a helper",
                    "hooli",
                    "hotjar",
                    "houzz",
                    "html5",
                    "hubspot",
                    "imdb",
                    "instagram",
                    "internet explorer",
                    "ioxhost",
                    "itunes",
                    "itunes note",
                    "jenkins",
                    "joget",
                    "joomla",
                    "js",
                    "js square",
                    "jsfiddle",
                    "keycdn",
                    "kickstarter",
                    "kickstarter k",
                    "korvue",
                    "laravel",
                    "lastfm",
                    "lastfm square",
                    "leanpub",
                    "less",
                    "linechat",
                    "linkedin",
                    "linkedin alternate",
                    "linode",
                    "linux",
                    "lyft",
                    "magento",
                    "maxcdn",
                    "medapps",
                    "medium",
                    "medium m",
                    "medrt",
                    "meetup",
                    "microsoft",
                    "mix",
                    "mixcloud",
                    "mizuni",
                    "modx",
                    "monero",
                    "napster",
                    "nintendo switch",
                    "node",
                    "node js",
                    "npm",
                    "ns8",
                    "nutritionix",
                    "odnoklassniki",
                    "odnoklassniki square",
                    "opencart",
                    "openid",
                    "opera",
                    "optin monster",
                    "osi",
                    "page4",
                    "pagelines",
                    "palfed",
                    "patreon",
                    "paypal",
                    "periscope",
                    "phabricator",
                    "phoenix framework",
                    "php",
                    "pied piper",
                    "pied piper alternate",
                    "pied piper pp",
                    "pinterest",
                    "pinterest p",
                    "pinterest square",
                    "playstation",
                    "product hunt",
                    "pushed",
                    "python",
                    "qq",
                    "quinscape",
                    "quora",
                    "ravelry",
                    "react",
                    "rebel",
                    "redriver",
                    "reddit",
                    "reddit alien",
                    "reddit square",
                    "rendact",
                    "renren",
                    "replyd",
                    "resolving",
                    "rocketchat",
                    "rockrms",
                    "safari",
                    "sass",
                    "schlix",
                    "scribd",
                    "searchengin",
                    "sellcast",
                    "sellsy",
                    "servicestack",
                    "shirtsinbulk",
                    "simplybuilt",
                    "sistrix",
                    "skyatlas",
                    "skype",
                    "slack",
                    "slack hash",
                    "slideshare",
                    "snapchat",
                    "snapchat ghost",
                    "snapchat square",
                    "soundcloud",
                    "speakap",
                    "spotify",
                    "stack exchange",
                    "stack overflow",
                    "staylinked",
                    "steam",
                    "steam square",
                    "steam symbol",
                    "sticker mule",
                    "strava",
                    "stripe",
                    "stripe s",
                    "studiovinari",
                    "stumbleupon",
                    "stumbleupon circle",
                    "superpowers",
                    "supple",
                    "telegram",
                    "telegram plane",
                    "tencent weibo",
                    "themeisle",
                    "trello",
                    "tripadvisor",
                    "tumblr",
                    "tumblr square",
                    "twitch",
                    "twitter",
                    "twitter square",
                    "typo3",
                    "uber",
                    "uikit",
                    "uniregistry",
                    "untappd",
                    "usb",
                    "ussunnah",
                    "vaadin",
                    "viacoin",
                    "viadeo",
                    "viadeo square",
                    "viber",
                    "vimeo",
                    "vimeo square",
                    "vimeo v",
                    "vine",
                    "vk",
                    "vnv",
                    "vuejs",
                    "wechat",
                    "weibo",
                    "weixin",
                    "whatsapp",
                    "whatsapp square",
                    "whmcs",
                    "wikipedia w",
                    "windows",
                    "wordpress",
                    "wordpress simple",
                    "wpbeginner",
                    "wpexplorer",
                    "wpforms",
                    "xbox",
                    "xing",
                    "xing square",
                    "y combinator",
                    "yahoo",
                    "yandex",
                    "yandex international",
                    "yelp",
                    "yoast",
                    "youtube",
                    "youtube square",
                    "chess rock",
                    "ordered list",
                    "unordered list",
                    "user doctor",
                    "shield",
                    "puzzle",
                    "add circle",
                    "add square",
                    "add to calendar",
                    "add to cart",
                    "add user",
                    "add",
                    "alarm mute",
                    "alarm",
                    "ald",
                    "als",
                    "announcement",
                    "area chart",
                    "area graph",
                    "arrow down cart",
                    "asexual",
                    "asl interpreting",
                    "asl",
                    "assistive listening devices",
                    "attach",
                    "attention",
                    "balance",
                    "bar",
                    "bathtub",
                    "battery four",
                    "battery high",
                    "battery low",
                    "battery one",
                    "battery three",
                    "battery two",
                    "battery zero",
                    "birthday",
                    "block layout",
                    "bluetooth alternative",
                    "broken chain",
                    "browser",
                    "call square",
                    "call",
                    "cancel",
                    "cart",
                    "cc",
                    "chain",
                    "chat",
                    "checked calendar",
                    "checkmark",
                    "circle notched",
                    "close",
                    "cny",
                    "cocktail",
                    "commenting",
                    "computer",
                    "configure",
                    "content",
                    "deafness",
                    "delete calendar",
                    "delete",
                    "detective",
                    "discussions",
                    "doctor",
                    "dollar",
                    "dont",
                    "drivers license",
                    "dropdown",
                    "emergency",
                    "envira gallery",
                    "erase",
                    "eur",
                    "euro",
                    "eyedropper",
                    "factory",
                    "favorite",
                    "feed",
                    "female homosexual",
                    "file text",
                    "file text outline",
                    "find",
                    "fork",
                    "game",
                    "gay",
                    "gbp",
                    "google plus circle",
                    "google plus official",
                    "grab",
                    "graduation",
                    "grid layout",
                    "group",
                    "h",
                    "hand victory",
                    "handicap",
                    "hard of hearing",
                    "header",
                    "help circle",
                    "help",
                    "heterosexual",
                    "hide",
                    "hotel",
                    "hourglass four",
                    "hourglass full",
                    "hourglass one",
                    "hourglass three",
                    "hourglass two",
                    "idea",
                    "ils",
                    "in cart",
                    "inr",
                    "intergender",
                    "intersex",
                    "jpy",
                    "krw",
                    "lab",
                    "law",
                    "legal",
                    "lesbian",
                    "lightning",
                    "like",
                    "line graph",
                    "linkedin square",
                    "lira",
                    "list layout",
                    "magnify",
                    "mail forward",
                    "mail square",
                    "mail",
                    "male homosexual",
                    "man",
                    "marker",
                    "mars alternate",
                    "mars horizontal",
                    "mars vertical",
                    "microsoft edge",
                    "military",
                    "ms edge",
                    "mute",
                    "new pied piper",
                    "non binary transgender",
                    "numbered list",
                    "options",
                    "other gender horizontal",
                    "other gender vertical",
                    "other gender",
                    "payment",
                    "paypal card",
                    "pencil square",
                    "photo",
                    "picture",
                    "pie chart",
                    "pie graph",
                    "pied piper hat",
                    "pin",
                    "plus cart",
                    "point",
                    "pointing down",
                    "pointing left",
                    "pointing right",
                    "pointing up",
                    "pound",
                    "power cord",
                    "power",
                    "privacy",
                    "r circle",
                    "rain",
                    "record",
                    "refresh",
                    "remove circle",
                    "remove from calendar",
                    "remove user",
                    "remove",
                    "repeat",
                    "rmb",
                    "rouble",
                    "rub",
                    "ruble",
                    "rupee",
                    "s15",
                    "selected radio",
                    "send",
                    "setting",
                    "settings",
                    "shekel",
                    "sheqel",
                    "shipping",
                    "shop",
                    "shuffle",
                    "shutdown",
                    "sidebar",
                    "signing",
                    "signup",
                    "sliders",
                    "soccer",
                    "sort alphabet ascending",
                    "sort alphabet descending",
                    "sort ascending",
                    "sort content ascending",
                    "sort content descending",
                    "sort descending",
                    "sort numeric ascending",
                    "sort numeric descending",
                    "sound",
                    "spy",
                    "stripe card",
                    "student",
                    "talk",
                    "target",
                    "teletype",
                    "television",
                    "text cursor",
                    "text telephone",
                    "theme",
                    "thumb tack",
                    "time",
                    "tm",
                    "toggle down",
                    "toggle left",
                    "toggle right",
                    "toggle up",
                    "translate",
                    "travel",
                    "treatment",
                    "triangle down",
                    "triangle left",
                    "triangle right",
                    "triangle up",
                    "try",
                    "unhide",
                    "unlinkify",
                    "unmute",
                    "usd",
                    "user cancel",
                    "user close",
                    "user delete",
                    "user x",
                    "vcard",
                    "video camera",
                    "video play",
                    "volume control phone",
                    "wait",
                    "warning circle",
                    "warning sign",
                    "warning",
                    "wi-fi",
                    "winner",
                    "wizard",
                    "woman",
                    "won",
                    "wordpress beginner",
                    "wordpress forms",
                    "world",
                    "write square",
                    "x",
                    "yen",
                    "zip",
                    "zoom in",
                    "zoom out",
                    "zoom",
                    "bitbucket square",
                    "checkmark box",
                    "circle thin",
                    "compose",
                    "conversation",
                    "credit card alternative",
                    "currency",
                    "dashboard",
                    "diamond",
                    "disk",
                    "external share",
                    "external square",
                    "external",
                    "facebook official",
                    "food",
                    "hourglass zero",
                    "level down",
                    "level up",
                    "log out",
                    "meanpath",
                    "money",
                    "move",
                    "pencil",
                    "protect",
                    "radio",
                    "remove bookmark",
                    "resize horizontal",
                    "resize vertical",
                    "sign in",
                    "sign out",
                    "spoon",
                    "star half empty",
                    "star half full",
                    "ticket",
                    "times rectangle",
                    "write"
                  ]
                },
                "type": { "type": "string" },
                "restartPolicy": {
                  "type": "string",
                  "description": "Restart policy"
                },
                "desiredStatus": {
                  "type": "string",
                  "description": "Desired status",
                  "enum": ["stopped", "running"]
                },
                "registryType": {
                  "type": "string",
                  "description": "Registry type",
                  "enum": ["public", "private"]
                },
                "category": {
                  "type": "string",
                  "description": "Container categories",
                  "enum": [
                    "Receiver",
                    "Connectivity",
                    "Data Acquisition",
                    "IT/Cloud Connectors",
                    "Services",
                    "Applications"
                  ]
                },
                "settingsPageId": {
                  "type": "string",
                  "description": "Settings page",
                  "enum": [
                    "gatewayTelemetry",
                    "networkTopology",
                    "opcuaPublisher",
                    "ainConnector",
                    "netFieldProxy",
                    "netFieldAppPlatformConnector"
                  ]
                },
                "shortDescription": {
                  "type": "string",
                  "description": "Short description, max(60)",
                  "maxLength": 60
                },
                "description": {
                  "type": "string",
                  "description": "Description, max(3000)",
                  "maxLength": 3000
                },
                "credentials": {
                  "type": "object",
                  "properties": {
                    "address": { "type": "string" },
                    "username": { "type": "string" }
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.500Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.500Z"
                },
                "sharedWithOrganisations": {
                  "type": "array",
                  "x-constraint": { "unique": "id" },
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "number" },
                      "name": { "type": "string" }
                    }
                  }
                },
                "versions": {
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Random uuid v4.",
                        "default": "7adb258e-3ee7-4299-bcb9-513fab03f7d4",
                        "x-format": { "guid": { "version": "uuidv4" } }
                      },
                      "version": {
                        "type": "string",
                        "description": "Version name"
                      },
                      "useGlobalCredentials": {
                        "type": "boolean",
                        "description": "Use global credentials"
                      },
                      "releaseNotes": {
                        "type": "string",
                        "description": "Release notes"
                      },
                      "imageUri": {
                        "type": "string",
                        "description": "Image URI"
                      },
                      "registryType": {
                        "type": "string",
                        "description": "Registry type",
                        "enum": ["public", "private"]
                      },
                      "credentials": {
                        "type": "object",
                        "properties": {
                          "address": { "type": "string" },
                          "username": { "type": "string" }
                        }
                      },
                      "processorArchitecture": {
                        "type": "string",
                        "description": "Processor architecture",
                        "enum": [
                          "Linux-X86",
                          "Linux-X64",
                          "Linux-ARM32V7",
                          "Linux-ARM64V8",
                          "All"
                        ]
                      },
                      "containerCreateOptions": {
                        "type": "object",
                        "description": "See latest Docker documentation",
                        "x-meta": { "swaggerType": "object" },
                        "properties": {
                          "Hostname": { "type": "string" },
                          "Domainname": { "type": "string" },
                          "User": { "type": "string" },
                          "AttachStdin": { "type": "boolean" },
                          "AttachStdout": { "type": "boolean" },
                          "AttachStderr": { "type": "boolean" },
                          "ExposedPorts": {
                            "type": "object",
                            "properties": { "string": { "type": "object" } }
                          },
                          "Tty": { "type": "boolean" },
                          "OpenStdin": { "type": "boolean" },
                          "StdinOnce": { "type": "boolean" },
                          "Env": {
                            "type": "string",
                            "x-alternatives": [
                              { "type": "string" },
                              { "type": "array", "items": { "type": "string" } }
                            ]
                          },
                          "Cmd": {
                            "type": "string",
                            "x-alternatives": [
                              { "type": "string" },
                              { "type": "array", "items": { "type": "string" } }
                            ]
                          },
                          "Healthcheck": {
                            "type": "object",
                            "properties": {
                              "Test": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "Interval": {
                                "type": "string",
                                "enum": [0],
                                "x-alternatives": [
                                  { "type": "string", "enum": [0] },
                                  { "type": "integer", "minimum": 1000000 }
                                ]
                              },
                              "Timeout": {
                                "type": "string",
                                "enum": [0],
                                "x-alternatives": [
                                  { "type": "string", "enum": [0] },
                                  { "type": "integer", "minimum": 1000000 }
                                ]
                              },
                              "Retries": { "type": "integer", "minimum": 0 },
                              "StartPeriod": {
                                "type": "string",
                                "enum": [0],
                                "x-alternatives": [
                                  { "type": "string", "enum": [0] },
                                  { "type": "integer", "minimum": 1000000 }
                                ]
                              }
                            }
                          },
                          "ArgsEscaped": { "type": "boolean" },
                          "Image": { "type": "string" },
                          "Volumes": {
                            "type": "object",
                            "properties": { "string": { "type": "object" } }
                          },
                          "WorkingDir": { "type": "string" },
                          "Entrypoint": {
                            "x-alternatives": [
                              {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              { "type": "string" }
                            ],
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "NetworkDisabled": { "type": "boolean" },
                          "MacAddress": {
                            "type": "string",
                            "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$"
                          },
                          "OnBuild": {
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "Labels": {
                            "type": "object",
                            "properties": { "string": { "type": "string" } }
                          },
                          "StopSignal": { "type": "string" },
                          "StopTimeout": { "type": "integer", "minimum": 0 },
                          "Shell": {
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "HostConfig": {
                            "type": "object",
                            "properties": {
                              "MaximumIOps": { "type": "integer" },
                              "MaximumIOBps": { "type": "integer" },
                              "CpuShares": { "type": "integer" },
                              "Memory": { "type": "integer" },
                              "CgroupParent": { "type": "string" },
                              "BlkioWeight": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 1000
                              },
                              "BlkioWeightDevice": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Weight": {
                                      "type": "integer",
                                      "minimum": 0
                                    }
                                  }
                                }
                              },
                              "BlkioDeviceReadBps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Rate": { "type": "integer", "minimum": 0 }
                                  }
                                }
                              },
                              "BlkioDeviceWriteBps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Rate": { "type": "integer", "minimum": 0 }
                                  }
                                }
                              },
                              "BlkioDeviceReadIOps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Rate": { "type": "integer", "minimum": 0 }
                                  }
                                }
                              },
                              "BlkioDeviceWriteIOps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Rate": { "type": "integer", "minimum": 0 }
                                  }
                                }
                              },
                              "CpuPeriod": { "type": "integer" },
                              "CpuQuota": { "type": "integer" },
                              "CpuRealtimePeriod": { "type": "integer" },
                              "CpuRealtimeRuntime": { "type": "integer" },
                              "CpusetCpus": { "type": "string" },
                              "CpusetMems": { "type": "string" },
                              "Devices": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "PathOnHost": { "type": "string" },
                                    "PathInContainer": { "type": "string" },
                                    "CgroupPermissions": { "type": "string" }
                                  }
                                }
                              },
                              "DeviceCgroupRules": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "DiskQuota": { "type": "integer" },
                              "KernelMemory": { "type": "integer" },
                              "MemoryReservation": { "type": "integer" },
                              "MemorySwap": { "type": "integer" },
                              "MemorySwappiness": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 100
                              },
                              "NanoCPUs": { "type": "integer" },
                              "OomKillDisable": { "type": "boolean" },
                              "PidsLimit": { "type": "integer" },
                              "Ulimits": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Name": { "type": "string" },
                                    "Soft": { "type": "integer" },
                                    "Hard": { "type": "integer" }
                                  }
                                }
                              },
                              "CpuCount": { "type": "integer" },
                              "CpuPercent": { "type": "integer" },
                              "IOMaximumIOps": { "type": "integer" },
                              "IOMaximumBandwidth": { "type": "integer" },
                              "Binds": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": ".+:.+(:.+)?"
                                }
                              },
                              "ContainerIDFile": { "type": "string" },
                              "LogConfig": {
                                "type": "object",
                                "properties": {
                                  "Type": {
                                    "type": "string",
                                    "enum": [
                                      "json-file",
                                      "syslog",
                                      "journald",
                                      "gelf",
                                      "fluentd",
                                      "awslogs",
                                      "splunk",
                                      "etwlogs",
                                      "none"
                                    ]
                                  },
                                  "Config": {
                                    "type": "object",
                                    "properties": {
                                      "string": { "type": "string" }
                                    }
                                  }
                                }
                              },
                              "NetworkMode": {
                                "type": "string",
                                "enum": ["bridge", "host", "none"],
                                "x-alternatives": [
                                  {
                                    "type": "string",
                                    "enum": ["bridge", "host", "none"]
                                  },
                                  {
                                    "type": "string",
                                    "pattern": "^container:.*$"
                                  }
                                ]
                              },
                              "PortBindings": {
                                "type": "object",
                                "properties": {
                                  "string": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "HostIp": { "type": "string" },
                                        "HostPort": { "type": "string" }
                                      }
                                    }
                                  }
                                }
                              },
                              "RestartPolicy": {
                                "type": "object",
                                "properties": {
                                  "Name": {
                                    "type": "string",
                                    "enum": [
                                      "always",
                                      "unless-stopped",
                                      "on-failure"
                                    ]
                                  },
                                  "MaximumRetryCount": { "type": "integer" }
                                }
                              },
                              "AutoRemove": { "type": "boolean" },
                              "VolumeDriver": { "type": "string" },
                              "VolumesFrom": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": "^.+(:(ro|rw))?$"
                                }
                              },
                              "Mounts": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Target": { "type": "string" },
                                    "Source": { "type": "string" },
                                    "Type": {
                                      "type": "string",
                                      "enum": ["bind", "volume", "tmpfs"]
                                    },
                                    "ReadOnly": { "type": "boolean" },
                                    "Consistency": { "type": "string" },
                                    "BindOptions": {
                                      "type": "object",
                                      "properties": {
                                        "Propagation": {
                                          "type": "string",
                                          "enum": [
                                            "private",
                                            "rprivate",
                                            "shared",
                                            "rshared",
                                            "slave",
                                            "rslave"
                                          ]
                                        }
                                      }
                                    },
                                    "VolumeOptions": {
                                      "type": "object",
                                      "properties": {
                                        "NoCopy": { "type": "boolean" },
                                        "Labels": {
                                          "type": "object",
                                          "properties": {
                                            "string": { "type": "string" }
                                          }
                                        },
                                        "DriverConfig": {
                                          "type": "object",
                                          "properties": {
                                            "Name": { "type": "string" },
                                            "Options": {
                                              "type": "object",
                                              "properties": {
                                                "string": { "type": "string" }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "TmpfsOptions": {
                                      "type": "object",
                                      "properties": {
                                        "SizeBytes": { "type": "integer" },
                                        "Mode": { "type": "integer" }
                                      }
                                    }
                                  }
                                }
                              },
                              "CapAdd": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "CapDrop": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "Dns": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "DnsOptions": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "DnsSearch": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "ExtraHosts": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": "^.+:.+$"
                                }
                              },
                              "GroupAdd": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "IpcMode": { "type": "string" },
                              "Cgroup": { "type": "string" },
                              "Links": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": "^.+:.+$"
                                }
                              },
                              "OomScoreAdj": { "type": "integer" },
                              "PidMode": {
                                "type": "string",
                                "pattern": "^.+(:.+)?$"
                              },
                              "Privileged": { "type": "boolean" },
                              "PublishAllPorts": { "type": "boolean" },
                              "ReadonlyRootfs": { "type": "boolean" },
                              "SecurityOpt": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "StorageOpt": {
                                "type": "object",
                                "properties": { "string": { "type": "string" } }
                              },
                              "Tmpfs": {
                                "type": "object",
                                "properties": { "string": { "type": "string" } }
                              },
                              "UTSMode": { "type": "string" },
                              "UsernsMode": { "type": "string" },
                              "ShmSize": { "type": "integer", "minimum": 0 },
                              "Sysctls": {
                                "type": "object",
                                "properties": { "string": { "type": "string" } }
                              },
                              "Runtime": { "type": "string" },
                              "ConsoleSize": {
                                "type": "array",
                                "x-constraint": { "length": 2 },
                                "items": { "type": "integer", "minimum": 0 }
                              },
                              "Isolation": {
                                "type": "string",
                                "enum": ["default", "process", "hyperv"]
                              }
                            }
                          },
                          "NetworkingConfig": {
                            "type": "object",
                            "properties": {
                              "EndpointsConfig": {
                                "type": "object",
                                "properties": {
                                  "string": {
                                    "type": "object",
                                    "properties": {
                                      "IPAMConfig": {
                                        "type": "object",
                                        "properties": {
                                          "IPv4Address": {
                                            "type": "string",
                                            "x-format": {
                                              "ip": {
                                                "cidr": "optional",
                                                "version": ["ipv4"]
                                              }
                                            }
                                          },
                                          "IPv6Address": {
                                            "type": "string",
                                            "x-format": {
                                              "ip": {
                                                "cidr": "optional",
                                                "version": ["ipv6"]
                                              }
                                            }
                                          },
                                          "LinkLocalIPs": {
                                            "type": "array",
                                            "items": { "type": "string" }
                                          }
                                        }
                                      },
                                      "Links": {
                                        "type": "array",
                                        "items": { "type": "string" }
                                      },
                                      "Aliases": {
                                        "type": "array",
                                        "items": { "type": "string" }
                                      },
                                      "NetworkId": { "type": "string" },
                                      "EndpointId": { "type": "string" },
                                      "Gateway": { "type": "string" },
                                      "IPAddress": {
                                        "type": "string",
                                        "x-format": {
                                          "ip": {
                                            "cidr": "optional",
                                            "version": ["ipv4"]
                                          }
                                        }
                                      },
                                      "IPPrefixLen": { "type": "integer" },
                                      "IPv6Gateway": { "type": "string" },
                                      "GlobalIPv6Address": {
                                        "type": "string",
                                        "x-format": {
                                          "ip": {
                                            "cidr": "optional",
                                            "version": ["ipv6"]
                                          }
                                        }
                                      },
                                      "GlobalIPv6PrefixLen": {
                                        "type": "integer"
                                      },
                                      "MacAddress": { "type": "string" }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "containerTwinDesiredOptions": { "type": "object" },
                      "environmentVariables": {
                        "type": "array",
                        "description": "An array of object containing environment variables",
                        "x-meta": { "swaggerType": "array" },
                        "x-constraint": { "unique": "key" },
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": { "type": "string" },
                            "value": { "type": "string" }
                          },
                          "required": ["key", "value"]
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "createdAt",
                        "default": "2021-05-21T06:02:07.766Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "updatedAt",
                        "default": "2021-05-21T06:02:07.766Z"
                      }
                    }
                  }
                },
                "mqttTopics": {
                  "type": "array",
                  "description": "MQTT topics",
                  "x-constraint": { "unique": true },
                  "items": { "type": "string" }
                }
              }
            },
            "description": "Container created"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found"
          }
        }
      }
    },
    "/dashboards": {
      "get": {
        "summary": "Get all dashboards for a given organisation",
        "operationId": "getDashboards",
        "description": "dashboards<br/><br/>viewDashboards",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "organisationId",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "min(1), null and empty values are not allowed",
            "default": 1,
            "minimum": 1,
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "min(1) / max is set by config pageEntries, null and empty values are not allowed",
            "default": 10,
            "minimum": 1,
            "maximum": 5000,
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sort by \"name\" or other resource property, null not allowed",
            "default": "id",
            "name": "sortBy",
            "in": "query"
          },
          {
            "type": "string",
            "description": "valid - \"asc\" and \"desc\", null and empty string not allowed",
            "default": "asc",
            "enum": ["asc", "desc"],
            "name": "sortOrder",
            "in": "query"
          }
        ],
        "tags": ["dashboards"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "type": "object",
                  "properties": {
                    "offset": { "type": "integer" },
                    "limit": { "type": "integer" },
                    "total": { "type": "integer" }
                  },
                  "required": ["offset", "limit", "total"]
                },
                "dashboards": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The id property defines the unique id / objectId",
                        "pattern": "^[0-9a-fA-F]{24}$"
                      },
                      "organisationId": { "type": "number", "minimum": 1 },
                      "name": { "type": "string" },
                      "description": { "type": "string", "maxLength": 255 },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "createdAt",
                        "default": "2021-05-21T06:02:07.172Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "updatedAt",
                        "default": "2021-05-21T06:02:07.172Z"
                      }
                    },
                    "required": ["id", "organisationId", "name"]
                  }
                }
              },
              "required": ["dashboards"]
            },
            "description": "Return dashboard list"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found"
          }
        }
      },
      "post": {
        "summary": "Create a dashboard",
        "operationId": "postDashboards",
        "description": "dashboards<br/><br/>createDashboards",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "organisationId": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer",
                  "minimum": 1
                },
                "name": { "type": "string", "maxLength": 255 },
                "description": { "type": "string", "maxLength": 255 }
              },
              "required": ["organisationId", "name"]
            }
          }
        ],
        "tags": ["dashboards"],
        "security": [{ "jwt": [] }],
        "responses": {
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "organisationId": { "type": "number", "minimum": 1 },
                "name": { "type": "string" },
                "description": { "type": "string", "maxLength": 255 },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.172Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.172Z"
                }
              },
              "required": ["id", "organisationId", "name"]
            },
            "description": "Dashboard created"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found"
          }
        }
      }
    },
    "/devices": {
      "get": {
        "summary": "Get all devices for a given organisation",
        "operationId": "getDevices",
        "description": "devices<br/><br/>viewDeviceDetails",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "organisationId",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Device types",
            "enum": ["standard", "sensorEDGE"],
            "name": "deviceType",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "min(1), null and empty values are not allowed",
            "default": 1,
            "minimum": 1,
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "min(1) / max is set by config pageEntries, null and empty values are not allowed",
            "default": 10,
            "minimum": 1,
            "maximum": 5000,
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sort by \"name\" or other resource property, null not allowed",
            "default": "id",
            "name": "sortBy",
            "in": "query"
          },
          {
            "type": "string",
            "description": "valid - \"asc\" and \"desc\", null and empty string not allowed",
            "default": "asc",
            "enum": ["asc", "desc"],
            "name": "sortOrder",
            "in": "query"
          }
        ],
        "tags": ["devices"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "type": "object",
                  "properties": {
                    "offset": { "type": "integer" },
                    "limit": { "type": "integer" },
                    "total": { "type": "integer" }
                  },
                  "required": ["offset", "limit", "total"]
                },
                "devices": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string" },
                      "organisationId": { "type": "number" },
                      "organisationName": { "type": "string" },
                      "deviceType": {
                        "type": "string",
                        "description": "Device types",
                        "enum": ["standard", "sensorEDGE"]
                      },
                      "serialNumber": { "type": "string" },
                      "activationCode": { "type": "string" },
                      "enabled": { "type": "boolean" },
                      "onBoarded": { "type": "boolean" },
                      "name": { "type": "string" },
                      "firmwareVersion": { "type": "string" },
                      "modelName": { "type": "string" },
                      "status": {
                        "type": "object",
                        "properties": {
                          "color": { "type": "string" },
                          "description": { "type": "string" }
                        },
                        "required": ["color", "description"]
                      },
                      "geolocation": {
                        "type": "object",
                        "description": "Geolocation",
                        "properties": {
                          "longitude": { "type": "string" },
                          "latitude": { "type": "string" }
                        },
                        "required": ["longitude", "latitude"]
                      },
                      "timeToLiveSecs": { "type": "number", "default": 120 },
                      "proxySettings": {
                        "type": "object",
                        "properties": {
                          "useHttpsProxySettings": {
                            "type": "boolean",
                            "default": false
                          },
                          "noProxy": { "type": "string" },
                          "httpsProxy": {
                            "type": "object",
                            "properties": { "uri": { "type": "string" } }
                          },
                          "useHttpProxySettings": {
                            "type": "boolean",
                            "default": false
                          },
                          "httpProxy": {
                            "type": "object",
                            "properties": { "uri": { "type": "string" } }
                          }
                        }
                      },
                      "remoteSettings": {
                        "type": "object",
                        "properties": {
                          "host": {
                            "type": "string",
                            "description": "Host where the webserver is runnign"
                          },
                          "httpPort": {
                            "type": "number",
                            "description": "Port where the webserver is listening to"
                          },
                          "services": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "service": {
                                  "type": "string",
                                  "enum": ["ssh", "rdp", "vnc", "http"]
                                },
                                "edgePort": { "type": "number" },
                                "localPort": { "type": "number" },
                                "forward": {
                                  "type": "boolean",
                                  "default": false
                                },
                                "destinationIp": {
                                  "type": "string",
                                  "x-format": {
                                    "ip": {
                                      "cidr": "forbidden",
                                      "version": ["ipv4"]
                                    }
                                  }
                                },
                                "destinationPort": { "type": "number" }
                              }
                            }
                          }
                        }
                      },
                      "description": { "type": "string" },
                      "tags": { "type": "string" },
                      "properties": {
                        "type": "array",
                        "description": "Device properties",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Property name"
                            },
                            "value": {
                              "type": "string",
                              "description": "Property value"
                            }
                          },
                          "required": ["name", "value"]
                        }
                      },
                      "desiredProperties": {
                        "type": "object",
                        "properties": {
                          "string": {
                            "type": "number",
                            "x-alternatives": [
                              { "type": "number" },
                              {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              { "type": "string" },
                              { "type": "boolean" },
                              { "type": "string" }
                            ]
                          }
                        }
                      },
                      "reportedProperties": {
                        "type": "object",
                        "properties": {
                          "string": {
                            "type": "number",
                            "x-alternatives": [
                              { "type": "number" },
                              {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              { "type": "string" },
                              { "type": "boolean" },
                              { "type": "string" }
                            ]
                          }
                        }
                      },
                      "equipmentId": { "type": "string" },
                      "hardwareInfo": { "type": "object" },
                      "upstreamProtocol": {
                        "type": "string",
                        "enum": ["MQTT", "AMQP", "MQTTWS", "AMQPWS"]
                      },
                      "onBoardedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "onBoardedAt",
                        "default": "2021-05-21T06:02:07.219Z"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "createdAt",
                        "default": "2021-05-21T06:02:07.219Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "updatedAt",
                        "default": "2021-05-21T06:02:07.219Z"
                      }
                    },
                    "required": [
                      "id",
                      "organisationId",
                      "serialNumber",
                      "enabled",
                      "onBoarded",
                      "status"
                    ]
                  }
                }
              },
              "required": ["devices"]
            },
            "description": "Return device"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found"
          }
        }
      },
      "post": {
        "summary": "Create a device",
        "operationId": "postDevices",
        "description": "devices<br/><br/>createDevices",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "onboardingType": {
                  "type": "string",
                  "description": "Onboarding types",
                  "enum": ["zeroTouch", "manual"]
                },
                "organisationId": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer",
                  "minimum": 1
                },
                "deviceType": {
                  "type": "string",
                  "description": "Device types",
                  "enum": ["standard", "sensorEDGE"]
                },
                "serialNumber": {
                  "type": "string",
                  "description": "Serial number"
                },
                "name": { "type": "string", "description": "Device name" },
                "firmwareVersion": {
                  "type": "string",
                  "description": "Firmware version"
                },
                "modelName": { "type": "string", "description": "Model name" },
                "geolocation": {
                  "type": "object",
                  "description": "Geolocation",
                  "properties": {
                    "longitude": { "type": "string" },
                    "latitude": { "type": "string" }
                  },
                  "required": ["longitude", "latitude"]
                },
                "timeToLiveSecs": {
                  "type": "number",
                  "description": "Time to live in seconds",
                  "minimum": 1
                },
                "proxySettings": {
                  "type": "object",
                  "description": "Device proxy settings",
                  "properties": {
                    "useHttpsProxySettings": {
                      "type": "boolean",
                      "default": false
                    },
                    "noProxy": { "type": "string" },
                    "httpsProxy": {
                      "type": "object",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "pattern": "^(http(s)?):(?:\\/\\/(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(\\/(?:[a-z0-9-._~!$&'()*+,;=:@\\/]|%[0-9A-F]{2})*)?|(\\/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@\\/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:\\/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:\\/?@]|%[0-9A-F]{2})*))?$"
                        },
                        "username": { "type": "string" },
                        "password": { "type": "string" }
                      },
                      "required": ["uri"]
                    },
                    "useHttpProxySettings": {
                      "type": "boolean",
                      "default": false
                    },
                    "httpProxy": {
                      "type": "object",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "pattern": "^(http):(?:\\/\\/(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(\\/(?:[a-z0-9-._~!$&'()*+,;=:@\\/]|%[0-9A-F]{2})*)?|(\\/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@\\/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:\\/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:\\/?@]|%[0-9A-F]{2})*))?$"
                        },
                        "username": { "type": "string" },
                        "password": { "type": "string" }
                      },
                      "required": ["uri"]
                    }
                  },
                  "required": ["httpsProxy", "httpProxy"]
                },
                "remoteSettings": {
                  "type": "object",
                  "properties": {
                    "host": {
                      "type": "string",
                      "description": "Host where the webserver is runnign"
                    },
                    "httpPort": {
                      "type": "number",
                      "description": "Port where the webserver is listening to"
                    },
                    "services": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "service": {
                            "type": "string",
                            "enum": ["ssh", "rdp", "vnc", "http"]
                          },
                          "edgePort": { "type": "number" },
                          "localPort": { "type": "number" },
                          "forward": { "type": "boolean", "default": false },
                          "destinationIp": {
                            "type": "string",
                            "x-format": {
                              "ip": { "cidr": "forbidden", "version": ["ipv4"] }
                            }
                          },
                          "destinationPort": { "type": "number" }
                        }
                      }
                    }
                  }
                },
                "description": {
                  "type": "string",
                  "description": "Description"
                },
                "tags": { "type": "string", "description": "Tags" },
                "properties": {
                  "type": "array",
                  "description": "Device properties",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Property name"
                      },
                      "value": {
                        "type": "string",
                        "description": "Property value"
                      }
                    },
                    "required": ["name", "value"]
                  }
                },
                "equipmentId": { "type": "string" },
                "hardwareInfo": { "type": "object" },
                "upstreamProtocol": {
                  "type": "string",
                  "enum": ["MQTT", "AMQP", "MQTTWS", "AMQPWS"]
                }
              },
              "required": ["organisationId", "serialNumber"]
            }
          }
        ],
        "tags": ["devices"],
        "security": [{ "jwt": [] }],
        "responses": {
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "organisationId": { "type": "number" },
                "organisationName": { "type": "string" },
                "deviceType": {
                  "type": "string",
                  "description": "Device types",
                  "enum": ["standard", "sensorEDGE"]
                },
                "serialNumber": { "type": "string" },
                "activationCode": { "type": "string" },
                "enabled": { "type": "boolean" },
                "onBoarded": { "type": "boolean" },
                "name": { "type": "string" },
                "firmwareVersion": { "type": "string" },
                "modelName": { "type": "string" },
                "status": {
                  "type": "object",
                  "properties": {
                    "color": { "type": "string" },
                    "description": { "type": "string" }
                  },
                  "required": ["color", "description"]
                },
                "geolocation": {
                  "type": "object",
                  "description": "Geolocation",
                  "properties": {
                    "longitude": { "type": "string" },
                    "latitude": { "type": "string" }
                  },
                  "required": ["longitude", "latitude"]
                },
                "timeToLiveSecs": { "type": "number", "default": 120 },
                "proxySettings": {
                  "type": "object",
                  "properties": {
                    "useHttpsProxySettings": {
                      "type": "boolean",
                      "default": false
                    },
                    "noProxy": { "type": "string" },
                    "httpsProxy": {
                      "type": "object",
                      "properties": { "uri": { "type": "string" } }
                    },
                    "useHttpProxySettings": {
                      "type": "boolean",
                      "default": false
                    },
                    "httpProxy": {
                      "type": "object",
                      "properties": { "uri": { "type": "string" } }
                    }
                  }
                },
                "remoteSettings": {
                  "type": "object",
                  "properties": {
                    "host": {
                      "type": "string",
                      "description": "Host where the webserver is runnign"
                    },
                    "httpPort": {
                      "type": "number",
                      "description": "Port where the webserver is listening to"
                    },
                    "services": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "service": {
                            "type": "string",
                            "enum": ["ssh", "rdp", "vnc", "http"]
                          },
                          "edgePort": { "type": "number" },
                          "localPort": { "type": "number" },
                          "forward": { "type": "boolean", "default": false },
                          "destinationIp": {
                            "type": "string",
                            "x-format": {
                              "ip": { "cidr": "forbidden", "version": ["ipv4"] }
                            }
                          },
                          "destinationPort": { "type": "number" }
                        }
                      }
                    }
                  }
                },
                "description": { "type": "string" },
                "tags": { "type": "string" },
                "properties": {
                  "type": "array",
                  "description": "Device properties",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Property name"
                      },
                      "value": {
                        "type": "string",
                        "description": "Property value"
                      }
                    },
                    "required": ["name", "value"]
                  }
                },
                "desiredProperties": {
                  "type": "object",
                  "properties": {
                    "string": {
                      "type": "number",
                      "x-alternatives": [
                        { "type": "number" },
                        { "type": "array", "items": { "type": "string" } },
                        { "type": "string" },
                        { "type": "boolean" },
                        { "type": "string" }
                      ]
                    }
                  }
                },
                "reportedProperties": {
                  "type": "object",
                  "properties": {
                    "string": {
                      "type": "number",
                      "x-alternatives": [
                        { "type": "number" },
                        { "type": "array", "items": { "type": "string" } },
                        { "type": "string" },
                        { "type": "boolean" },
                        { "type": "string" }
                      ]
                    }
                  }
                },
                "equipmentId": { "type": "string" },
                "hardwareInfo": { "type": "object" },
                "upstreamProtocol": {
                  "type": "string",
                  "enum": ["MQTT", "AMQP", "MQTTWS", "AMQPWS"]
                },
                "onBoardedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "onBoardedAt",
                  "default": "2021-05-21T06:02:07.219Z"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.219Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.219Z"
                }
              },
              "required": [
                "id",
                "organisationId",
                "serialNumber",
                "enabled",
                "onBoarded",
                "status"
              ]
            },
            "description": "Device created"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found"
          }
        }
      }
    },
    "/edgeos": {
      "get": {
        "summary": "Get a list of all uploaded EdgeOS",
        "operationId": "getEdgeos",
        "description": "edgeos<br/><br/>viewEdgeos",
        "parameters": [
          {
            "type": "string",
            "description": "Access token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "min(1), null and empty values are not allowed",
            "default": 1,
            "minimum": 1,
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "min(1) / max is set by config pageEntries, null and empty values are not allowed",
            "default": 10,
            "minimum": 1,
            "maximum": 5000,
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sort by \"name\" or other resource property, null not allowed",
            "default": "id",
            "name": "sortBy",
            "in": "query"
          },
          {
            "type": "string",
            "description": "valid - \"asc\" and \"desc\", null and empty string not allowed",
            "default": "asc",
            "enum": ["asc", "desc"],
            "name": "sortOrder",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Select platform",
            "enum": [
              "NFS-M8-QM-D1-N4",
              "NIOT-E-TIJCX-GB-RE",
              "NIOT-E-TPI51-EN-RE",
              "NIOT-E-VM-EN",
              "NFS-M8-QM-D2-N16",
              "NFS-M8-QM-D2-N16/NFLD"
            ],
            "name": "platform",
            "in": "query"
          }
        ],
        "consumes": ["application/x-www-form-urlencoded"],
        "tags": ["edgeos"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "type": "object",
                  "properties": {
                    "offset": { "type": "integer" },
                    "limit": { "type": "integer" },
                    "total": { "type": "integer" }
                  },
                  "required": ["offset", "limit", "total"]
                },
                "edgeosList": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The id property defines the unique id / objectId",
                        "pattern": "^[0-9a-fA-F]{24}$"
                      },
                      "version": {
                        "type": "string",
                        "description": "Version number"
                      },
                      "name": {
                        "type": "string",
                        "description": "EdgeOS name"
                      },
                      "platform": {
                        "type": "string",
                        "description": "Platform",
                        "enum": [
                          "NFS-M8-QM-D1-N4",
                          "NIOT-E-TIJCX-GB-RE",
                          "NIOT-E-TPI51-EN-RE",
                          "NIOT-E-VM-EN",
                          "NFS-M8-QM-D2-N16",
                          "NFS-M8-QM-D2-N16/NFLD"
                        ]
                      },
                      "type": {
                        "type": "string",
                        "description": "Type",
                        "enum": ["update", "recovery"]
                      },
                      "metadata": {
                        "type": "object",
                        "properties": {
                          "container": { "type": "string" },
                          "fileName": { "type": "string" },
                          "size": { "type": "number" }
                        },
                        "required": ["container", "fileName", "size"]
                      },
                      "notes": { "type": "string" },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "createdAt",
                        "default": "2021-05-21T06:02:07.250Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "updatedAt",
                        "default": "2021-05-21T06:02:07.250Z"
                      }
                    },
                    "required": ["id", "version", "name", "platform", "type"]
                  }
                }
              }
            },
            "description": "EdgeOS"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid token"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Requesting user has invalid permissions"
          }
        }
      },
      "post": {
        "summary": "Upload new EdgeOS",
        "operationId": "postEdgeos",
        "description": "edgeos<br/><br/>createEdgeos",
        "parameters": [
          {
            "type": "string",
            "description": "Access token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Version number",
            "name": "version",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "EdgeOS name",
            "name": "name",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "Select platform",
            "enum": [
              "NFS-M8-QM-D1-N4",
              "NIOT-E-TIJCX-GB-RE",
              "NIOT-E-TPI51-EN-RE",
              "NIOT-E-VM-EN",
              "NFS-M8-QM-D2-N16",
              "NFS-M8-QM-D2-N16/NFLD"
            ],
            "name": "platform",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "Type",
            "enum": ["update", "recovery"],
            "name": "type",
            "in": "formData",
            "required": true
          },
          {
            "type": "file",
            "x-meta": { "swaggerType": "file" },
            "in": "formData",
            "name": "file",
            "required": true
          },
          {
            "type": "string",
            "description": "Notes",
            "name": "notes",
            "in": "formData",
            "required": false
          }
        ],
        "consumes": ["multipart/form-data"],
        "tags": ["edgeos"],
        "security": [{ "jwt": [] }],
        "responses": {
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "version": {
                  "type": "string",
                  "description": "Version number"
                },
                "name": { "type": "string", "description": "EdgeOS name" },
                "platform": {
                  "type": "string",
                  "description": "Platform",
                  "enum": [
                    "NFS-M8-QM-D1-N4",
                    "NIOT-E-TIJCX-GB-RE",
                    "NIOT-E-TPI51-EN-RE",
                    "NIOT-E-VM-EN",
                    "NFS-M8-QM-D2-N16",
                    "NFS-M8-QM-D2-N16/NFLD"
                  ]
                },
                "type": {
                  "type": "string",
                  "description": "Type",
                  "enum": ["update", "recovery"]
                },
                "metadata": {
                  "type": "object",
                  "properties": {
                    "container": { "type": "string" },
                    "fileName": { "type": "string" },
                    "size": { "type": "number" }
                  },
                  "required": ["container", "fileName", "size"]
                },
                "notes": { "type": "string" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.250Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.250Z"
                }
              },
              "required": ["id", "version", "name", "platform", "type"]
            },
            "description": "Upload EdgeOS"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          }
        }
      }
    },
    "/keys": {
      "get": {
        "summary": "Get all keys for End-point usage with key authentication strategy and specific scope of usage according organisation",
        "operationId": "getKeys",
        "description": "keys<br/><br/>getKeys",
        "parameters": [
          {
            "type": "string",
            "description": "Access token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "organisationId",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "min(1), null and empty values are not allowed",
            "default": 1,
            "minimum": 1,
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "min(1) / max is set by config pageEntries, null and empty values are not allowed",
            "default": 10,
            "minimum": 1,
            "maximum": 5000,
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sort by \"name\" or other resource property, null not allowed",
            "default": "id",
            "name": "sortBy",
            "in": "query"
          },
          {
            "type": "string",
            "description": "valid - \"asc\" and \"desc\", null and empty string not allowed",
            "default": "asc",
            "enum": ["asc", "desc"],
            "name": "sortOrder",
            "in": "query"
          }
        ],
        "tags": ["keys"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "type": "object",
                  "properties": {
                    "offset": { "type": "integer" },
                    "limit": { "type": "integer" },
                    "total": { "type": "integer" }
                  },
                  "required": ["offset", "limit", "total"]
                },
                "keys": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The id property defines the unique id / objectId",
                        "pattern": "^[0-9a-fA-F]{24}$"
                      },
                      "owner": {
                        "type": "object",
                        "properties": {
                          "organisation": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The id property defines the unique id of type integer",
                                "minimum": 1
                              },
                              "name": { "type": "string" }
                            },
                            "required": ["id", "name"]
                          },
                          "user": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The id property defines the unique id of type integer",
                                "minimum": 1
                              },
                              "fullName": { "type": "string" }
                            },
                            "required": ["id", "fullName"]
                          }
                        }
                      },
                      "name": { "type": "string" },
                      "type": {
                        "type": "string",
                        "default": "server-side",
                        "enum": ["server-side", "client-side"]
                      },
                      "key": {
                        "type": "string",
                        "description": "The id property defines the unique id / objectId",
                        "pattern": "^[0-9a-fA-F]{24}$"
                      },
                      "resources": {
                        "type": "array",
                        "description": "Resources and permissions",
                        "minItems": 1,
                        "items": {
                          "type": "object",
                          "properties": {
                            "resource": {
                              "type": "string",
                              "description": "Resource name",
                              "enum": [
                                "roles",
                                "usersAndOrganisations",
                                "devices",
                                "containers",
                                "tenants",
                                "edgeos",
                                "webhooks",
                                "groups",
                                "thirdpartyAppsPts",
                                "dashboards",
                                "keys"
                              ]
                            },
                            "permissions": {
                              "type": "array",
                              "description": "List of resource permissions, min(1), null or empty values are not allowed",
                              "minItems": 1,
                              "items": {
                                "type": "string",
                                "default": "permission.securityLevel"
                              }
                            }
                          },
                          "required": ["resource"]
                        }
                      },
                      "requestMonthlyLimit": {
                        "type": "number",
                        "minimum": 1,
                        "maximum": 10000
                      },
                      "totalRequestCount": { "type": "number" },
                      "requestCount": { "type": "number" },
                      "expiresAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Expiration Date",
                        "default": "2021-05-21T06:02:07.281Z"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "createdAt",
                        "default": "2021-05-21T06:02:07.281Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "updatedAt",
                        "default": "2021-05-21T06:02:07.281Z"
                      },
                      "requests": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "type": "object",
                          "properties": {
                            "resource": {
                              "type": "string",
                              "default": "devices"
                            },
                            "permission": {
                              "type": "string",
                              "default": "onboardedDevices"
                            },
                            "sendAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "sendAt",
                              "default": "2021-05-21T06:02:07.281Z"
                            }
                          },
                          "required": ["resource", "permission"]
                        }
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "type",
                      "key",
                      "resources",
                      "requestCount",
                      "requests"
                    ]
                  }
                }
              }
            },
            "description": "Return key"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found"
          }
        }
      },
      "post": {
        "summary": "Create a key for End-point usage with key authentication strategy and specific scope of usage",
        "operationId": "postKeys",
        "description": "keys<br/><br/>createKeys",
        "parameters": [
          {
            "type": "string",
            "description": "Access token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "organisationId": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer",
                  "minimum": 1
                },
                "name": {
                  "type": "string",
                  "description": "Key name, null or empty not allowed"
                },
                "type": {
                  "type": "string",
                  "description": "Key type",
                  "default": "server-side",
                  "enum": ["server-side", "client-side"]
                },
                "resources": {
                  "type": "array",
                  "description": "Array of objects, representing the key resources and their permissions",
                  "minItems": 1,
                  "items": {
                    "type": "object",
                    "properties": {
                      "resource": {
                        "type": "string",
                        "description": "Resource name",
                        "enum": [
                          "roles",
                          "usersAndOrganisations",
                          "devices",
                          "containers",
                          "tenants",
                          "edgeos",
                          "webhooks",
                          "groups",
                          "thirdpartyAppsPts",
                          "dashboards",
                          "keys"
                        ]
                      },
                      "permissions": {
                        "type": "array",
                        "description": "List of resource permissions, min(1), null or empty values are not allowed",
                        "minItems": 1,
                        "items": {
                          "type": "string",
                          "default": "permission.securityLevel"
                        }
                      }
                    },
                    "required": ["resource"]
                  }
                },
                "expiresAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Key expiration date (ISO 8601), valid payload format \"YYYY-MM-DD HH (2020-09-16 18)\""
                }
              },
              "required": ["organisationId", "name", "type", "resources"]
            }
          }
        ],
        "tags": ["keys"],
        "security": [{ "jwt": [] }],
        "responses": {
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "owner": {
                  "type": "object",
                  "properties": {
                    "organisation": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The id property defines the unique id of type integer",
                          "minimum": 1
                        },
                        "name": { "type": "string" }
                      },
                      "required": ["id", "name"]
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The id property defines the unique id of type integer",
                          "minimum": 1
                        },
                        "fullName": { "type": "string" }
                      },
                      "required": ["id", "fullName"]
                    }
                  }
                },
                "name": { "type": "string" },
                "type": {
                  "type": "string",
                  "default": "server-side",
                  "enum": ["server-side", "client-side"]
                },
                "key": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "resources": {
                  "type": "array",
                  "description": "Resources and permissions",
                  "minItems": 1,
                  "items": {
                    "type": "object",
                    "properties": {
                      "resource": {
                        "type": "string",
                        "description": "Resource name",
                        "enum": [
                          "roles",
                          "usersAndOrganisations",
                          "devices",
                          "containers",
                          "tenants",
                          "edgeos",
                          "webhooks",
                          "groups",
                          "thirdpartyAppsPts",
                          "dashboards",
                          "keys"
                        ]
                      },
                      "permissions": {
                        "type": "array",
                        "description": "List of resource permissions, min(1), null or empty values are not allowed",
                        "minItems": 1,
                        "items": {
                          "type": "string",
                          "default": "permission.securityLevel"
                        }
                      }
                    },
                    "required": ["resource"]
                  }
                },
                "requestMonthlyLimit": {
                  "type": "number",
                  "minimum": 1,
                  "maximum": 10000
                },
                "totalRequestCount": { "type": "number" },
                "requestCount": { "type": "number" },
                "expiresAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Expiration Date",
                  "default": "2021-05-21T06:02:07.281Z"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.281Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.281Z"
                },
                "requests": {
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "type": "object",
                    "properties": {
                      "resource": { "type": "string", "default": "devices" },
                      "permission": {
                        "type": "string",
                        "default": "onboardedDevices"
                      },
                      "sendAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "sendAt",
                        "default": "2021-05-21T06:02:07.281Z"
                      }
                    },
                    "required": ["resource", "permission"]
                  }
                }
              },
              "required": [
                "id",
                "name",
                "type",
                "key",
                "resources",
                "requestCount",
                "requests"
              ]
            },
            "description": "Key Created"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found"
          }
        }
      }
    },
    "/organisations": {
      "get": {
        "summary": "Get all organisations according user permissions",
        "operationId": "getOrganisations",
        "description": "usersAndOrganisations<br/><br/>viewOrganisations",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "min(1), null and empty values are not allowed",
            "default": 1,
            "minimum": 1,
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "min(1) / max is set by config pageEntries, null and empty values are not allowed",
            "default": 10,
            "minimum": 1,
            "maximum": 5000,
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sort by \"name\" or other resource property, null not allowed",
            "default": "id",
            "name": "sortBy",
            "in": "query"
          },
          {
            "type": "string",
            "description": "valid - \"asc\" and \"desc\", null and empty string not allowed",
            "default": "asc",
            "enum": ["asc", "desc"],
            "name": "sortOrder",
            "in": "query"
          }
        ],
        "tags": ["organisations"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "type": "object",
                  "properties": {
                    "offset": { "type": "integer" },
                    "limit": { "type": "integer" },
                    "total": { "type": "integer" }
                  },
                  "required": ["offset", "limit", "total"]
                },
                "organisations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "The id property defines the unique id of type integer",
                        "minimum": 1
                      },
                      "admin": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The id property defines the unique id of type integer",
                            "minimum": 1
                          },
                          "fullName": { "type": "string" },
                          "email": {
                            "type": "string",
                            "x-format": { "email": true }
                          }
                        },
                        "required": ["id", "fullName", "email"]
                      },
                      "parentId": { "type": "number" },
                      "name": { "type": "string" },
                      "phoneNumber": { "type": "string" },
                      "street": { "type": "string" },
                      "houseNumber": { "type": "string" },
                      "addressSupplement": { "type": "string" },
                      "zipCode": { "type": "string" },
                      "state": { "type": "string" },
                      "city": { "type": "string" },
                      "country": { "type": "string" },
                      "notes": { "type": "string" },
                      "defaultDeviceGroupId": {
                        "type": "number",
                        "minimum": 1
                      },
                      "childrenInheritManifest": { "type": "boolean" },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "createdAt",
                        "default": "2021-05-21T06:02:07.312Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "updatedAt",
                        "default": "2021-05-21T06:02:07.312Z"
                      }
                    },
                    "required": [
                      "id",
                      "parentId",
                      "name",
                      "phoneNumber",
                      "street",
                      "houseNumber",
                      "zipCode",
                      "city",
                      "country",
                      "defaultDeviceGroupId",
                      "childrenInheritManifest",
                      "createdAt",
                      "updatedAt"
                    ]
                  }
                }
              },
              "required": ["organisations"]
            },
            "description": "Returns an organizations list"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          }
        }
      }
    },
    "/permissions": {
      "get": {
        "summary": "Get permissions and security levels per resource",
        "operationId": "getPermissions",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "enum": [
              "roles",
              "usersAndOrganisations",
              "devices",
              "containers",
              "tenants",
              "edgeos",
              "keys",
              "webhooks",
              "groups",
              "thirdpartyAppsPts",
              "dashboards"
            ],
            "name": "resource",
            "in": "query"
          }
        ],
        "tags": ["permissions"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "resource": { "type": "string", "default": "roles" },
                  "permissions": {
                    "type": "array",
                    "default": [
                      "viewRoles",
                      "createRoles",
                      "updateRoles",
                      "deleteRoles",
                      "addUserRoles",
                      "viewUserRoles",
                      "deleteUserRoles"
                    ],
                    "minItems": 1,
                    "items": { "type": "string" }
                  },
                  "securitylevel": {
                    "type": "array",
                    "default": ["all", "org+ch", "org"],
                    "minItems": 1,
                    "items": { "type": "string" }
                  },
                  "containerResource": { "type": "boolean" }
                },
                "required": ["resource"]
              }
            },
            "description": "Permissions and security levels retrieved"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Not found."
          }
        }
      }
    },
    "/roles": {
      "get": {
        "summary": "Get all roles for a given organisation",
        "operationId": "getRoles",
        "description": "roles<br/><br/>viewRoles",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "organisationId",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "min(1), null and empty values are not allowed",
            "default": 1,
            "minimum": 1,
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "min(1) / max is set by config pageEntries, null and empty values are not allowed",
            "default": 10,
            "minimum": 1,
            "maximum": 5000,
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sort by \"name\" or other resource property, null not allowed",
            "default": "id",
            "name": "sortBy",
            "in": "query"
          },
          {
            "type": "string",
            "description": "valid - \"asc\" and \"desc\", null and empty string not allowed",
            "default": "asc",
            "enum": ["asc", "desc"],
            "name": "sortOrder",
            "in": "query"
          }
        ],
        "tags": ["roles"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "type": "object",
                  "properties": {
                    "offset": { "type": "integer" },
                    "limit": { "type": "integer" },
                    "total": { "type": "integer" }
                  },
                  "required": ["offset", "limit", "total"]
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "role": { "type": "string" },
                      "editable": { "type": "boolean" },
                      "deletable": { "type": "boolean" },
                      "organisationId": { "type": "number", "minimum": 1 },
                      "resources": {
                        "type": "array",
                        "description": "Resources and permissions",
                        "items": {
                          "type": "object",
                          "properties": {
                            "resource": {
                              "type": "string",
                              "description": "Resource name",
                              "enum": [
                                "roles",
                                "usersAndOrganisations",
                                "devices",
                                "containers",
                                "tenants",
                                "edgeos",
                                "webhooks",
                                "groups",
                                "thirdpartyAppsPts",
                                "dashboards",
                                "keys"
                              ]
                            },
                            "permissions": {
                              "type": "array",
                              "description": "List of resource permissions, min(1), null or empty values are not allowed",
                              "minItems": 1,
                              "items": {
                                "type": "string",
                                "default": "permission.securityLevel"
                              }
                            }
                          },
                          "required": ["resource"]
                        }
                      }
                    },
                    "required": ["role", "organisationId", "resources"]
                  }
                }
              },
              "required": ["roles"]
            },
            "description": "Return list of roles"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found"
          }
        }
      },
      "post": {
        "summary": "Create a role",
        "operationId": "postRoles",
        "description": "roles<br/><br/>createRoles",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "organisationId",
            "in": "query",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "role": { "type": "string", "description": "Role name" },
                "resources": {
                  "type": "array",
                  "description": "Resources and permissions",
                  "minItems": 1,
                  "items": {
                    "type": "object",
                    "properties": {
                      "resource": {
                        "type": "string",
                        "description": "Resource name",
                        "enum": [
                          "roles",
                          "usersAndOrganisations",
                          "devices",
                          "containers",
                          "tenants",
                          "edgeos",
                          "webhooks",
                          "groups",
                          "thirdpartyAppsPts",
                          "dashboards",
                          "keys"
                        ]
                      },
                      "permissions": {
                        "type": "array",
                        "description": "List of resource permissions, min(1), null or empty values are not allowed",
                        "minItems": 1,
                        "items": {
                          "type": "string",
                          "default": "permission.securityLevel"
                        }
                      }
                    },
                    "required": ["resource"]
                  }
                }
              },
              "required": ["role"]
            }
          }
        ],
        "tags": ["roles"],
        "security": [{ "jwt": [] }],
        "responses": {
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "role": { "type": "string" },
                "editable": { "type": "boolean" },
                "deletable": { "type": "boolean" },
                "organisationId": { "type": "number", "minimum": 1 },
                "resources": {
                  "type": "array",
                  "description": "Resources and permissions",
                  "items": {
                    "type": "object",
                    "properties": {
                      "resource": {
                        "type": "string",
                        "description": "Resource name",
                        "enum": [
                          "roles",
                          "usersAndOrganisations",
                          "devices",
                          "containers",
                          "tenants",
                          "edgeos",
                          "webhooks",
                          "groups",
                          "thirdpartyAppsPts",
                          "dashboards",
                          "keys"
                        ]
                      },
                      "permissions": {
                        "type": "array",
                        "description": "List of resource permissions, min(1), null or empty values are not allowed",
                        "minItems": 1,
                        "items": {
                          "type": "string",
                          "default": "permission.securityLevel"
                        }
                      }
                    },
                    "required": ["resource"]
                  }
                }
              },
              "required": ["role", "organisationId", "resources"]
            },
            "description": "Role created"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found"
          }
        }
      },
      "put": {
        "summary": "Update a role",
        "operationId": "putRoles",
        "description": "roles<br/><br/>updateRoles",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "organisationId",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Role name",
            "name": "role",
            "in": "query",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "resources": {
                  "type": "array",
                  "description": "Resources and permissions",
                  "minItems": 1,
                  "items": {
                    "type": "object",
                    "properties": {
                      "resource": {
                        "type": "string",
                        "description": "Resource name",
                        "enum": [
                          "roles",
                          "usersAndOrganisations",
                          "devices",
                          "containers",
                          "tenants",
                          "edgeos",
                          "webhooks",
                          "groups",
                          "thirdpartyAppsPts",
                          "dashboards",
                          "keys"
                        ]
                      },
                      "permissions": {
                        "type": "array",
                        "description": "List of resource permissions, min(1), null or empty values are not allowed",
                        "minItems": 1,
                        "items": {
                          "type": "string",
                          "default": "permission.securityLevel"
                        }
                      }
                    },
                    "required": ["resource"]
                  }
                }
              }
            }
          }
        ],
        "tags": ["roles"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "role": { "type": "string" },
                "editable": { "type": "boolean" },
                "deletable": { "type": "boolean" },
                "organisationId": { "type": "number", "minimum": 1 },
                "resources": {
                  "type": "array",
                  "description": "Resources and permissions",
                  "items": {
                    "type": "object",
                    "properties": {
                      "resource": {
                        "type": "string",
                        "description": "Resource name",
                        "enum": [
                          "roles",
                          "usersAndOrganisations",
                          "devices",
                          "containers",
                          "tenants",
                          "edgeos",
                          "webhooks",
                          "groups",
                          "thirdpartyAppsPts",
                          "dashboards",
                          "keys"
                        ]
                      },
                      "permissions": {
                        "type": "array",
                        "description": "List of resource permissions, min(1), null or empty values are not allowed",
                        "minItems": 1,
                        "items": {
                          "type": "string",
                          "default": "permission.securityLevel"
                        }
                      }
                    },
                    "required": ["resource"]
                  }
                }
              },
              "required": ["role", "organisationId", "resources"]
            },
            "description": "Role updated"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found / Role(s) not found"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get users by organisation id",
        "operationId": "getUsers",
        "description": "usersAndOrganisations<br/><br/>viewUsers",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "organisationId",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "min(1), null and empty values are not allowed",
            "default": 1,
            "minimum": 1,
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "min(1) / max is set by config pageEntries, null and empty values are not allowed",
            "default": 10,
            "minimum": 1,
            "maximum": 5000,
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sort by \"name\" or other resource property, null not allowed",
            "default": "id",
            "name": "sortBy",
            "in": "query"
          },
          {
            "type": "string",
            "description": "valid - \"asc\" and \"desc\", null and empty string not allowed",
            "default": "asc",
            "enum": ["asc", "desc"],
            "name": "sortOrder",
            "in": "query"
          }
        ],
        "tags": ["users"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "type": "object",
                  "properties": {
                    "offset": { "type": "integer" },
                    "limit": { "type": "integer" },
                    "total": { "type": "integer" }
                  },
                  "required": ["offset", "limit", "total"]
                },
                "users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "The id property defines the unique id of type integer",
                        "minimum": 1
                      },
                      "organisationId": {
                        "type": "integer",
                        "description": "The id property defines the unique id of type integer",
                        "minimum": 1
                      },
                      "firstName": { "type": "string" },
                      "lastName": { "type": "string" },
                      "mobilePhone": { "type": "string" },
                      "email": {
                        "type": "string",
                        "x-format": { "email": true }
                      },
                      "addressSupplement": { "type": "string" },
                      "editable": { "type": "boolean" },
                      "deletable": { "type": "boolean" },
                      "status": {
                        "type": "object",
                        "properties": {
                          "statusId": { "type": "number" },
                          "description": { "type": "string" }
                        },
                        "required": ["statusId", "description"]
                      }
                    },
                    "required": [
                      "id",
                      "organisationId",
                      "firstName",
                      "lastName",
                      "email",
                      "addressSupplement",
                      "editable",
                      "deletable"
                    ]
                  }
                }
              },
              "required": ["users"]
            },
            "description": "Return users"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found"
          }
        }
      },
      "post": {
        "summary": "Create a user",
        "operationId": "postUsers",
        "description": "usersAndOrganisations<br/><br/>createUsers",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "organisationId": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer",
                  "minimum": 1
                },
                "password": {
                  "type": "string",
                  "description": "Password",
                  "x-convert": { "trim": true }
                },
                "firstName": { "type": "string", "description": "First name" },
                "lastName": { "type": "string", "description": "Last name" },
                "email": {
                  "type": "string",
                  "description": "valid email / null and empty values are not allowed",
                  "x-format": { "email": true }
                },
                "jobTitle": { "type": "string", "description": "Job title" },
                "department": { "type": "string", "description": "Department" },
                "mobilePhone": {
                  "type": "string",
                  "description": "Mobile phone"
                },
                "telephone": { "type": "string", "description": "Telephone" },
                "street": { "type": "string", "description": "Street" },
                "houseNumber": {
                  "type": "string",
                  "description": "House number"
                },
                "addressSupplement": {
                  "type": "string",
                  "description": "Address supplement"
                },
                "zipCode": { "type": "string", "description": "Zip code" },
                "state": { "type": "string", "description": "State" },
                "city": { "type": "string", "description": "City" },
                "country": { "type": "string", "description": "Country" },
                "statusId": {
                  "type": "number",
                  "description": "Status Id, min(1) max(3), nll or empty not allowed",
                  "minimum": 1,
                  "maximum": 3
                },
                "editable": { "type": "boolean" },
                "deletable": { "type": "boolean" }
              },
              "required": [
                "organisationId",
                "password",
                "firstName",
                "lastName",
                "email",
                "street",
                "houseNumber",
                "zipCode",
                "city",
                "country"
              ]
            }
          }
        ],
        "tags": ["users"],
        "responses": {
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer",
                  "minimum": 1
                },
                "organisationId": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer",
                  "minimum": 1
                },
                "firstName": { "type": "string" },
                "lastName": { "type": "string" },
                "email": {
                  "type": "string",
                  "description": "valid email / null and empty values are not allowed",
                  "x-format": { "email": true }
                },
                "jobTitle": { "type": "string" },
                "department": { "type": "string" },
                "mobilePhone": { "type": "string" },
                "telephone": { "type": "string" },
                "street": { "type": "string" },
                "houseNumber": { "type": "string" },
                "addressSupplement": { "type": "string" },
                "zipCode": { "type": "string" },
                "city": { "type": "string" },
                "state": { "type": "string" },
                "country": { "type": "string" },
                "status": {
                  "type": "object",
                  "properties": {
                    "statusId": { "type": "number" },
                    "description": { "type": "string" }
                  },
                  "required": ["statusId", "description"]
                },
                "editable": { "type": "boolean" },
                "deletable": { "type": "boolean" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:09.406Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:09.406Z"
                }
              },
              "required": [
                "id",
                "organisationId",
                "firstName",
                "lastName",
                "email",
                "street",
                "houseNumber",
                "zipCode",
                "city",
                "country",
                "editable",
                "deletable",
                "createdAt",
                "updatedAt"
              ]
            },
            "description": "User created"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found"
          }
        }
      }
    },
    "/webhooks": {
      "get": {
        "summary": "Retrieve webhooks for an organisation.",
        "operationId": "getWebhooks",
        "description": "webhooks<br/><br/>viewWebhooks",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "organisationId",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "min(1), null and empty values are not allowed",
            "default": 1,
            "minimum": 1,
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "min(1) / max is set by config pageEntries, null and empty values are not allowed",
            "default": 10,
            "minimum": 1,
            "maximum": 5000,
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sort by \"name\" or other resource property, null not allowed",
            "default": "id",
            "name": "sortBy",
            "in": "query"
          },
          {
            "type": "string",
            "description": "valid - \"asc\" and \"desc\", null and empty string not allowed",
            "default": "asc",
            "enum": ["asc", "desc"],
            "name": "sortOrder",
            "in": "query"
          }
        ],
        "tags": ["webhooks"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "type": "object",
                  "properties": {
                    "offset": { "type": "integer" },
                    "limit": { "type": "integer" },
                    "total": { "type": "integer" }
                  },
                  "required": ["offset", "limit", "total"]
                },
                "webhooks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string" },
                      "organisationId": {
                        "type": "integer",
                        "description": "The id property defines the unique id of type integer",
                        "minimum": 1
                      },
                      "url": { "type": "string" },
                      "description": { "type": "string" },
                      "requestType": {
                        "type": "string",
                        "description": "Request type",
                        "enum": [
                          "GET",
                          "POST",
                          "PUT",
                          "DELETE",
                          "HEAD",
                          "CONNECT",
                          "OPTIONS",
                          "TRACE"
                        ]
                      },
                      "actionType": {
                        "type": "string",
                        "description": "Action type",
                        "enum": ["onboarded", "offboarded"]
                      },
                      "headers": {
                        "type": "array",
                        "description": "Headers",
                        "x-constraint": { "unique": "name" },
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Header name"
                            },
                            "value": {
                              "type": "string",
                              "description": "Header value"
                            }
                          },
                          "required": ["name", "value"]
                        }
                      },
                      "queries": {
                        "type": "array",
                        "description": "Queries",
                        "x-constraint": { "unique": "name" },
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Query name"
                            },
                            "value": {
                              "type": "string",
                              "description": "Query value"
                            }
                          },
                          "required": ["name", "value"]
                        }
                      },
                      "payload": {
                        "type": "string",
                        "description": "Payload object"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "createdAt",
                        "default": "2021-05-21T06:02:07.391Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "updatedAt",
                        "default": "2021-05-21T06:02:07.391Z"
                      }
                    },
                    "required": [
                      "id",
                      "organisationId",
                      "url",
                      "requestType",
                      "actionType"
                    ]
                  }
                }
              }
            },
            "description": "Webhooks retrieved"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found"
          }
        }
      },
      "post": {
        "summary": "Create a webhook for an organisation.",
        "operationId": "postWebhooks",
        "description": "webhooks<br/><br/>createWebhooks",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "organisationId": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer",
                  "minimum": 1
                },
                "url": {
                  "type": "string",
                  "description": "URL",
                  "pattern": "^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$"
                },
                "description": {
                  "type": "string",
                  "description": "Description"
                },
                "requestType": {
                  "type": "string",
                  "description": "Request type",
                  "enum": [
                    "GET",
                    "POST",
                    "PUT",
                    "DELETE",
                    "HEAD",
                    "CONNECT",
                    "OPTIONS",
                    "TRACE"
                  ]
                },
                "actionType": {
                  "type": "string",
                  "description": "Action type",
                  "enum": ["onboarded", "offboarded"]
                },
                "headers": {
                  "type": "array",
                  "description": "Headers",
                  "x-constraint": { "unique": "name" },
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Header name"
                      },
                      "value": {
                        "type": "string",
                        "description": "Header value"
                      }
                    },
                    "required": ["name", "value"]
                  }
                },
                "queries": {
                  "type": "array",
                  "description": "Queries",
                  "x-constraint": { "unique": "name" },
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": { "type": "string", "description": "Query name" },
                      "value": {
                        "type": "string",
                        "description": "Query value"
                      }
                    },
                    "required": ["name", "value"]
                  }
                },
                "payload": { "type": "string", "description": "Payload object" }
              },
              "required": ["organisationId", "url", "requestType", "actionType"]
            }
          }
        ],
        "tags": ["webhooks"],
        "security": [{ "jwt": [] }],
        "responses": {
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "organisationId": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer",
                  "minimum": 1
                },
                "url": { "type": "string" },
                "description": { "type": "string" },
                "requestType": {
                  "type": "string",
                  "description": "Request type",
                  "enum": [
                    "GET",
                    "POST",
                    "PUT",
                    "DELETE",
                    "HEAD",
                    "CONNECT",
                    "OPTIONS",
                    "TRACE"
                  ]
                },
                "actionType": {
                  "type": "string",
                  "description": "Action type",
                  "enum": ["onboarded", "offboarded"]
                },
                "headers": {
                  "type": "array",
                  "description": "Headers",
                  "x-constraint": { "unique": "name" },
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Header name"
                      },
                      "value": {
                        "type": "string",
                        "description": "Header value"
                      }
                    },
                    "required": ["name", "value"]
                  }
                },
                "queries": {
                  "type": "array",
                  "description": "Queries",
                  "x-constraint": { "unique": "name" },
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": { "type": "string", "description": "Query name" },
                      "value": {
                        "type": "string",
                        "description": "Query value"
                      }
                    },
                    "required": ["name", "value"]
                  }
                },
                "payload": {
                  "type": "string",
                  "description": "Payload object"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.391Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.391Z"
                }
              },
              "required": [
                "id",
                "organisationId",
                "url",
                "requestType",
                "actionType"
              ]
            },
            "description": "Webhook created"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found"
          }
        }
      }
    },
    "/auth/verify": {
      "get": {
        "summary": "Verify token",
        "operationId": "getAuthVerify",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          }
        ],
        "tags": ["auth"],
        "security": [{ "oauth": [] }],
        "responses": {
          "204": { "description": "Token verified" },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid token"
          }
        }
      }
    },
    "/containers/{containerId}": {
      "get": {
        "summary": "Get a container",
        "operationId": "getContainersContainerid",
        "description": "containers<br/><br/>viewContainers",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / uuid_v4",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "name": "containerId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["containers"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Random uuid v4.",
                  "default": "7adb258e-3ee7-4299-bcb9-513fab03f7d4",
                  "x-format": { "guid": { "version": "uuidv4" } }
                },
                "image": { "type": "string" },
                "organisationId": { "type": "number" },
                "organisation": { "type": "string" },
                "containerAccess": {
                  "type": "string",
                  "description": "Container access",
                  "enum": ["public", "private"]
                },
                "status": { "type": "string" },
                "displayName": {
                  "type": "string",
                  "description": "Display name"
                },
                "containerName": {
                  "type": "string",
                  "description": "Container name"
                },
                "icon": {
                  "type": "string",
                  "description": "Icon name",
                  "enum": [
                    "american sign language interpreting",
                    "assistive listening systems",
                    "audio description",
                    "blind",
                    "braille",
                    "closed captioning",
                    "closed captioning outline",
                    "deaf",
                    "low vision",
                    "phone volume",
                    "question circle",
                    "question circle outline",
                    "sign language",
                    "tty",
                    "universal access",
                    "wheelchair",
                    "angle double down",
                    "angle double left",
                    "angle double right",
                    "angle double up",
                    "angle down",
                    "angle left",
                    "angle right",
                    "angle up",
                    "arrow alternate circle down",
                    "arrow alternate circle down outline",
                    "arrow alternate circle left",
                    "arrow alternate circle left outline",
                    "arrow alternate circle right",
                    "arrow alternate circle right outline",
                    "arrow alternate circle up",
                    "arrow alternate circle up outline",
                    "arrow circle down",
                    "arrow circle left",
                    "arrow circle right",
                    "arrow circle up",
                    "arrow down",
                    "arrow left",
                    "arrow right",
                    "arrow up",
                    "arrows alternate",
                    "arrows alternate horizontal",
                    "arrows alternate vertical",
                    "caret down",
                    "caret left",
                    "caret right",
                    "caret square down",
                    "caret square down outline",
                    "caret square left",
                    "caret square left outline",
                    "caret square right",
                    "caret square right outline",
                    "caret square up",
                    "caret square up outline",
                    "caret up",
                    "cart arrow down",
                    "chart line",
                    "chevron circle down",
                    "chevron circle left",
                    "chevron circle right",
                    "chevron circle up",
                    "chevron down",
                    "chevron left",
                    "chevron right",
                    "chevron up",
                    "cloud download",
                    "cloud upload",
                    "download",
                    "exchange",
                    "expand arrows alternate",
                    "external alternate",
                    "external square alternate",
                    "hand point down",
                    "hand point down outline",
                    "hand point left",
                    "hand point left outline",
                    "hand point right",
                    "hand point right outline",
                    "hand point up",
                    "hand point up outline",
                    "hand pointer",
                    "hand pointer outline",
                    "history",
                    "level down alternate",
                    "level up alternate",
                    "location arrow",
                    "long arrow alternate down",
                    "long arrow alternate left",
                    "long arrow alternate right",
                    "long arrow alternate up",
                    "mouse pointer",
                    "play",
                    "random",
                    "recycle",
                    "redo",
                    "redo alternate",
                    "reply",
                    "reply all",
                    "retweet",
                    "share",
                    "share square",
                    "share square outline",
                    "sign-in",
                    "sign-out",
                    "sign-in alternate",
                    "sign-out alternate",
                    "sort",
                    "sort alphabet down",
                    "sort alphabet up",
                    "sort amount down",
                    "sort amount up",
                    "sort down",
                    "sort numeric down",
                    "sort numeric up",
                    "sort up",
                    "sync",
                    "sync alternate",
                    "text height",
                    "text width",
                    "undo",
                    "undo alternate",
                    "upload",
                    "zoom-in",
                    "zoom-out",
                    "backward",
                    "circle",
                    "circle outline",
                    "compress",
                    "eject",
                    "expand",
                    "fast backward",
                    "fast forward",
                    "file audio",
                    "file audio outline",
                    "file video",
                    "file video outline",
                    "film",
                    "forward",
                    "headphones",
                    "microphone",
                    "microphone slash",
                    "music",
                    "pause",
                    "pause circle",
                    "pause circle outline",
                    "play circle",
                    "play circle outline",
                    "podcast",
                    "rss",
                    "rss square",
                    "step backward",
                    "step forward",
                    "stop",
                    "stop circle",
                    "stop circle outline",
                    "video",
                    "volume down",
                    "volume off",
                    "volume up",
                    "address book",
                    "address book outline",
                    "address card",
                    "address card outline",
                    "archive",
                    "balance scale",
                    "birthday cake",
                    "book",
                    "briefcase",
                    "building",
                    "building outline",
                    "bullhorn",
                    "bullseye",
                    "calculator",
                    "calendar",
                    "calendar outline",
                    "calendar alternate",
                    "calendar alternate outline",
                    "certificate",
                    "chart area",
                    "chart bar",
                    "chart bar outline",
                    "chart pie",
                    "clipboard",
                    "clipboard outline",
                    "coffee",
                    "columns",
                    "compass",
                    "compass outline",
                    "copy",
                    "copy outline",
                    "copyright",
                    "copyright outline",
                    "cut",
                    "edit",
                    "edit outline",
                    "envelope",
                    "envelope outline",
                    "envelope open",
                    "envelope open outline",
                    "envelope square",
                    "eraser",
                    "fax",
                    "file",
                    "file outline",
                    "file alternate",
                    "file alternate outline",
                    "folder",
                    "folder outline",
                    "folder open",
                    "folder open outline",
                    "globe",
                    "industry",
                    "paperclip",
                    "paste",
                    "pen square",
                    "pencil alternate",
                    "percent",
                    "phone",
                    "phone square",
                    "registered",
                    "registered outline",
                    "save",
                    "save outline",
                    "sitemap",
                    "sticky note",
                    "sticky note outline",
                    "suitcase",
                    "table",
                    "tag",
                    "tags",
                    "tasks",
                    "thumbtack",
                    "trademark",
                    "chess",
                    "chess bishop",
                    "chess board",
                    "chess king",
                    "chess knight",
                    "chess pawn",
                    "chess queen",
                    "chess rook",
                    "square full",
                    "barcode",
                    "bath",
                    "bug",
                    "code",
                    "code branch",
                    "file code",
                    "file code outline",
                    "filter",
                    "fire extinguisher",
                    "keyboard",
                    "keyboard outline",
                    "microchip",
                    "qrcode",
                    "shield alternate",
                    "terminal",
                    "user secret",
                    "window close",
                    "window close outline",
                    "window maximize",
                    "window maximize outline",
                    "window minimize",
                    "window minimize outline",
                    "window restore",
                    "window restore outline",
                    "at",
                    "bell",
                    "bell outline",
                    "bell slash",
                    "bell slash outline",
                    "comment",
                    "comment outline",
                    "comment alternate",
                    "comment alternate outline",
                    "comments",
                    "comments outline",
                    "inbox",
                    "language",
                    "mobile",
                    "mobile alternate",
                    "paper plane",
                    "paper plane outline",
                    "wifi",
                    "desktop",
                    "hdd",
                    "hdd outline",
                    "laptop",
                    "plug",
                    "power off",
                    "print",
                    "server",
                    "tablet",
                    "tablet alternate",
                    "tv",
                    "dollar sign",
                    "euro sign",
                    "lira sign",
                    "money bill alternate",
                    "money bill alternate outline",
                    "pound sign",
                    "ruble sign",
                    "rupee sign",
                    "shekel sign",
                    "won sign",
                    "yen sign",
                    "calendar check",
                    "calendar check outline",
                    "calendar minus",
                    "calendar minus outline",
                    "calendar plus",
                    "calendar plus outline",
                    "calendar times",
                    "calendar times outline",
                    "clock",
                    "clock outline",
                    "hourglass",
                    "hourglass outline",
                    "hourglass end",
                    "hourglass half",
                    "hourglass start",
                    "stopwatch",
                    "adjust",
                    "clone",
                    "clone outline",
                    "crop",
                    "crosshairs",
                    "eye",
                    "eye dropper",
                    "eye slash",
                    "eye slash outline",
                    "object group",
                    "object group outline",
                    "object ungroup",
                    "object ungroup outline",
                    "paint brush",
                    "tint",
                    "align center",
                    "align justify",
                    "align left",
                    "align right",
                    "bold",
                    "font",
                    "heading",
                    "i cursor",
                    "indent",
                    "italic",
                    "linkify",
                    "list",
                    "list alternate",
                    "list alternate outline",
                    "list ol",
                    "list ul",
                    "outdent",
                    "paragraph",
                    "quote left",
                    "quote right",
                    "strikethrough",
                    "subscript",
                    "superscript",
                    "th",
                    "th large",
                    "th list",
                    "trash",
                    "trash alternate",
                    "trash alternate outline",
                    "underline",
                    "unlink",
                    "file archive",
                    "file archive outline",
                    "file excel",
                    "file excel outline",
                    "file image",
                    "file image outline",
                    "file pdf",
                    "file pdf outline",
                    "file powerpoint",
                    "file powerpoint outline",
                    "file word",
                    "file word outline",
                    "genderless",
                    "mars",
                    "mars double",
                    "mars stroke",
                    "mars stroke horizontal",
                    "mars stroke vertical",
                    "mercury",
                    "neuter",
                    "transgender",
                    "transgender alternate",
                    "venus",
                    "venus double",
                    "venus mars",
                    "hand lizard",
                    "hand lizard outline",
                    "hand paper",
                    "hand paper outline",
                    "hand peace",
                    "hand peace outline",
                    "hand rock",
                    "hand rock outline",
                    "hand scissors",
                    "hand scissors outline",
                    "hand spock",
                    "hand spock outline",
                    "handshake",
                    "handshake outline",
                    "thumbs down",
                    "thumbs down outline",
                    "thumbs up",
                    "thumbs up outline",
                    "ambulance",
                    "h square",
                    "heart",
                    "heart outline",
                    "heartbeat",
                    "hospital",
                    "hospital outline",
                    "medkit",
                    "plus square",
                    "plus square outline",
                    "stethoscope",
                    "user md",
                    "bolt",
                    "camera",
                    "camera retro",
                    "id badge",
                    "id badge outline",
                    "id card",
                    "id card outline",
                    "image",
                    "image outline",
                    "images",
                    "images outline",
                    "sliders horizontal",
                    "ban",
                    "bars",
                    "beer",
                    "check",
                    "check circle",
                    "check circle outline",
                    "check square",
                    "check square outline",
                    "cloud",
                    "cog",
                    "cogs",
                    "database",
                    "dot circle",
                    "dot circle outline",
                    "ellipsis horizontal",
                    "ellipsis vertical",
                    "exclamation",
                    "exclamation circle",
                    "exclamation triangle",
                    "flag",
                    "flag outline",
                    "flag checkered",
                    "frown",
                    "frown outline",
                    "hashtag",
                    "home",
                    "info",
                    "info circle",
                    "magic",
                    "meh",
                    "meh outline",
                    "minus",
                    "minus circle",
                    "minus square",
                    "minus square outline",
                    "plus",
                    "plus circle",
                    "question",
                    "search",
                    "search minus",
                    "search plus",
                    "share alternate",
                    "share alternate square",
                    "signal",
                    "smile",
                    "smile outline",
                    "star",
                    "star outline",
                    "star half",
                    "star half outline",
                    "times",
                    "times circle",
                    "times circle outline",
                    "toggle off",
                    "toggle on",
                    "trophy",
                    "user",
                    "user outline",
                    "user circle",
                    "user circle outline",
                    "box",
                    "boxes",
                    "clipboard check",
                    "clipboard list",
                    "dolly",
                    "dolly flatbed",
                    "pallet",
                    "shipping fast",
                    "truck",
                    "warehouse",
                    "anchor",
                    "bed",
                    "bicycle",
                    "binoculars",
                    "bomb",
                    "bookmark",
                    "bookmark outline",
                    "car",
                    "fighter jet",
                    "fire",
                    "flask",
                    "gamepad",
                    "gavel",
                    "gift",
                    "glass martini",
                    "graduation cap",
                    "key",
                    "leaf",
                    "lemon",
                    "lemon outline",
                    "life ring",
                    "life ring outline",
                    "lightbulb",
                    "lightbulb outline",
                    "magnet",
                    "male",
                    "map",
                    "map outline",
                    "map marker",
                    "map marker alternate",
                    "map pin",
                    "map signs",
                    "motorcycle",
                    "newspaper",
                    "newspaper outline",
                    "paw",
                    "plane",
                    "road",
                    "rocket",
                    "ship",
                    "shopping bag",
                    "shopping basket",
                    "shopping cart",
                    "shower",
                    "street view",
                    "subway",
                    "taxi",
                    "ticket alternate",
                    "train",
                    "tree",
                    "umbrella",
                    "university",
                    "utensil spoon",
                    "utensils",
                    "wrench",
                    "band aid",
                    "dna",
                    "first aid",
                    "hospital symbol",
                    "pills",
                    "syringe",
                    "thermometer",
                    "weight",
                    "bus",
                    "cube",
                    "cubes",
                    "futbol",
                    "futbol outline",
                    "gem",
                    "gem outline",
                    "lock",
                    "lock open",
                    "moon",
                    "moon outline",
                    "puzzle piece",
                    "snowflake",
                    "snowflake outline",
                    "space shuttle",
                    "sun",
                    "sun outline",
                    "tachometer alternate",
                    "unlock",
                    "unlock alternate",
                    "cart plus",
                    "credit card",
                    "credit card outline",
                    "square",
                    "square outline",
                    "asterisk",
                    "circle notch",
                    "spinner",
                    "baseball ball",
                    "basketball ball",
                    "bowling ball",
                    "football ball",
                    "golf ball",
                    "hockey puck",
                    "quidditch",
                    "table tennis",
                    "volleyball ball",
                    "battery empty",
                    "battery full",
                    "battery half",
                    "battery quarter",
                    "battery three quarters",
                    "sign in alternate",
                    "sign out alternate",
                    "thermometer empty",
                    "thermometer full",
                    "thermometer half",
                    "thermometer quarter",
                    "thermometer three quarters",
                    "child",
                    "female",
                    "user plus",
                    "user times",
                    "users",
                    "500px",
                    "accessible",
                    "accusoft",
                    "adn",
                    "adversal",
                    "affiliatetheme",
                    "algolia",
                    "amazon",
                    "amazon pay",
                    "amilia",
                    "android",
                    "angellist",
                    "angrycreative",
                    "angular",
                    "app store",
                    "app store ios",
                    "apper",
                    "apple",
                    "apple pay",
                    "asymmetrik",
                    "audible",
                    "autoprefixer",
                    "avianex",
                    "aviato",
                    "aws",
                    "bandcamp",
                    "behance",
                    "behance square",
                    "bimobject",
                    "bitbucket",
                    "bitcoin",
                    "bity",
                    "black tie",
                    "blackberry",
                    "blogger",
                    "blogger b",
                    "bluetooth",
                    "bluetooth b",
                    "btc",
                    "buromobelexperte",
                    "buysellads",
                    "cc amazon pay",
                    "cc amex",
                    "cc apple pay",
                    "cc diners club",
                    "cc discover",
                    "cc jcb",
                    "cc mastercard",
                    "cc paypal",
                    "cc stripe",
                    "cc visa",
                    "centercode",
                    "chrome",
                    "cloudscale",
                    "cloudsmith",
                    "cloudversify",
                    "codepen",
                    "codiepie",
                    "connectdevelop",
                    "contao",
                    "cpanel",
                    "creative commons",
                    "css3",
                    "css3 alternate",
                    "cuttlefish",
                    "d and d",
                    "dashcube",
                    "delicious",
                    "deploydog",
                    "deskpro",
                    "deviantart",
                    "digg",
                    "digital ocean",
                    "discord",
                    "discourse",
                    "dochub",
                    "docker",
                    "draft2digital",
                    "dribbble",
                    "dribbble square",
                    "dropbox",
                    "drupal",
                    "dyalog",
                    "earlybirds",
                    "edge",
                    "elementor",
                    "ember",
                    "empire",
                    "envira",
                    "erlang",
                    "ethereum",
                    "etsy",
                    "expeditedssl",
                    "facebook",
                    "facebook f",
                    "facebook messenger",
                    "facebook square",
                    "firefox",
                    "first order",
                    "firstdraft",
                    "flickr",
                    "flipboard",
                    "fly",
                    "font awesome",
                    "font awesome alternate",
                    "font awesome flag",
                    "fonticons",
                    "fonticons fi",
                    "fort awesome",
                    "fort awesome alternate",
                    "forumbee",
                    "foursquare",
                    "free code camp",
                    "freebsd",
                    "get pocket",
                    "gg",
                    "gg circle",
                    "git",
                    "git square",
                    "github",
                    "github alternate",
                    "github square",
                    "gitkraken",
                    "gitlab",
                    "gitter",
                    "glide",
                    "glide g",
                    "gofore",
                    "goodreads",
                    "goodreads g",
                    "google",
                    "google drive",
                    "google play",
                    "google plus",
                    "google plus g",
                    "google plus square",
                    "google wallet",
                    "gratipay",
                    "grav",
                    "gripfire",
                    "grunt",
                    "gulp",
                    "hacker news",
                    "hacker news square",
                    "hips",
                    "hire a helper",
                    "hooli",
                    "hotjar",
                    "houzz",
                    "html5",
                    "hubspot",
                    "imdb",
                    "instagram",
                    "internet explorer",
                    "ioxhost",
                    "itunes",
                    "itunes note",
                    "jenkins",
                    "joget",
                    "joomla",
                    "js",
                    "js square",
                    "jsfiddle",
                    "keycdn",
                    "kickstarter",
                    "kickstarter k",
                    "korvue",
                    "laravel",
                    "lastfm",
                    "lastfm square",
                    "leanpub",
                    "less",
                    "linechat",
                    "linkedin",
                    "linkedin alternate",
                    "linode",
                    "linux",
                    "lyft",
                    "magento",
                    "maxcdn",
                    "medapps",
                    "medium",
                    "medium m",
                    "medrt",
                    "meetup",
                    "microsoft",
                    "mix",
                    "mixcloud",
                    "mizuni",
                    "modx",
                    "monero",
                    "napster",
                    "nintendo switch",
                    "node",
                    "node js",
                    "npm",
                    "ns8",
                    "nutritionix",
                    "odnoklassniki",
                    "odnoklassniki square",
                    "opencart",
                    "openid",
                    "opera",
                    "optin monster",
                    "osi",
                    "page4",
                    "pagelines",
                    "palfed",
                    "patreon",
                    "paypal",
                    "periscope",
                    "phabricator",
                    "phoenix framework",
                    "php",
                    "pied piper",
                    "pied piper alternate",
                    "pied piper pp",
                    "pinterest",
                    "pinterest p",
                    "pinterest square",
                    "playstation",
                    "product hunt",
                    "pushed",
                    "python",
                    "qq",
                    "quinscape",
                    "quora",
                    "ravelry",
                    "react",
                    "rebel",
                    "redriver",
                    "reddit",
                    "reddit alien",
                    "reddit square",
                    "rendact",
                    "renren",
                    "replyd",
                    "resolving",
                    "rocketchat",
                    "rockrms",
                    "safari",
                    "sass",
                    "schlix",
                    "scribd",
                    "searchengin",
                    "sellcast",
                    "sellsy",
                    "servicestack",
                    "shirtsinbulk",
                    "simplybuilt",
                    "sistrix",
                    "skyatlas",
                    "skype",
                    "slack",
                    "slack hash",
                    "slideshare",
                    "snapchat",
                    "snapchat ghost",
                    "snapchat square",
                    "soundcloud",
                    "speakap",
                    "spotify",
                    "stack exchange",
                    "stack overflow",
                    "staylinked",
                    "steam",
                    "steam square",
                    "steam symbol",
                    "sticker mule",
                    "strava",
                    "stripe",
                    "stripe s",
                    "studiovinari",
                    "stumbleupon",
                    "stumbleupon circle",
                    "superpowers",
                    "supple",
                    "telegram",
                    "telegram plane",
                    "tencent weibo",
                    "themeisle",
                    "trello",
                    "tripadvisor",
                    "tumblr",
                    "tumblr square",
                    "twitch",
                    "twitter",
                    "twitter square",
                    "typo3",
                    "uber",
                    "uikit",
                    "uniregistry",
                    "untappd",
                    "usb",
                    "ussunnah",
                    "vaadin",
                    "viacoin",
                    "viadeo",
                    "viadeo square",
                    "viber",
                    "vimeo",
                    "vimeo square",
                    "vimeo v",
                    "vine",
                    "vk",
                    "vnv",
                    "vuejs",
                    "wechat",
                    "weibo",
                    "weixin",
                    "whatsapp",
                    "whatsapp square",
                    "whmcs",
                    "wikipedia w",
                    "windows",
                    "wordpress",
                    "wordpress simple",
                    "wpbeginner",
                    "wpexplorer",
                    "wpforms",
                    "xbox",
                    "xing",
                    "xing square",
                    "y combinator",
                    "yahoo",
                    "yandex",
                    "yandex international",
                    "yelp",
                    "yoast",
                    "youtube",
                    "youtube square",
                    "chess rock",
                    "ordered list",
                    "unordered list",
                    "user doctor",
                    "shield",
                    "puzzle",
                    "add circle",
                    "add square",
                    "add to calendar",
                    "add to cart",
                    "add user",
                    "add",
                    "alarm mute",
                    "alarm",
                    "ald",
                    "als",
                    "announcement",
                    "area chart",
                    "area graph",
                    "arrow down cart",
                    "asexual",
                    "asl interpreting",
                    "asl",
                    "assistive listening devices",
                    "attach",
                    "attention",
                    "balance",
                    "bar",
                    "bathtub",
                    "battery four",
                    "battery high",
                    "battery low",
                    "battery one",
                    "battery three",
                    "battery two",
                    "battery zero",
                    "birthday",
                    "block layout",
                    "bluetooth alternative",
                    "broken chain",
                    "browser",
                    "call square",
                    "call",
                    "cancel",
                    "cart",
                    "cc",
                    "chain",
                    "chat",
                    "checked calendar",
                    "checkmark",
                    "circle notched",
                    "close",
                    "cny",
                    "cocktail",
                    "commenting",
                    "computer",
                    "configure",
                    "content",
                    "deafness",
                    "delete calendar",
                    "delete",
                    "detective",
                    "discussions",
                    "doctor",
                    "dollar",
                    "dont",
                    "drivers license",
                    "dropdown",
                    "emergency",
                    "envira gallery",
                    "erase",
                    "eur",
                    "euro",
                    "eyedropper",
                    "factory",
                    "favorite",
                    "feed",
                    "female homosexual",
                    "file text",
                    "file text outline",
                    "find",
                    "fork",
                    "game",
                    "gay",
                    "gbp",
                    "google plus circle",
                    "google plus official",
                    "grab",
                    "graduation",
                    "grid layout",
                    "group",
                    "h",
                    "hand victory",
                    "handicap",
                    "hard of hearing",
                    "header",
                    "help circle",
                    "help",
                    "heterosexual",
                    "hide",
                    "hotel",
                    "hourglass four",
                    "hourglass full",
                    "hourglass one",
                    "hourglass three",
                    "hourglass two",
                    "idea",
                    "ils",
                    "in cart",
                    "inr",
                    "intergender",
                    "intersex",
                    "jpy",
                    "krw",
                    "lab",
                    "law",
                    "legal",
                    "lesbian",
                    "lightning",
                    "like",
                    "line graph",
                    "linkedin square",
                    "lira",
                    "list layout",
                    "magnify",
                    "mail forward",
                    "mail square",
                    "mail",
                    "male homosexual",
                    "man",
                    "marker",
                    "mars alternate",
                    "mars horizontal",
                    "mars vertical",
                    "microsoft edge",
                    "military",
                    "ms edge",
                    "mute",
                    "new pied piper",
                    "non binary transgender",
                    "numbered list",
                    "options",
                    "other gender horizontal",
                    "other gender vertical",
                    "other gender",
                    "payment",
                    "paypal card",
                    "pencil square",
                    "photo",
                    "picture",
                    "pie chart",
                    "pie graph",
                    "pied piper hat",
                    "pin",
                    "plus cart",
                    "point",
                    "pointing down",
                    "pointing left",
                    "pointing right",
                    "pointing up",
                    "pound",
                    "power cord",
                    "power",
                    "privacy",
                    "r circle",
                    "rain",
                    "record",
                    "refresh",
                    "remove circle",
                    "remove from calendar",
                    "remove user",
                    "remove",
                    "repeat",
                    "rmb",
                    "rouble",
                    "rub",
                    "ruble",
                    "rupee",
                    "s15",
                    "selected radio",
                    "send",
                    "setting",
                    "settings",
                    "shekel",
                    "sheqel",
                    "shipping",
                    "shop",
                    "shuffle",
                    "shutdown",
                    "sidebar",
                    "signing",
                    "signup",
                    "sliders",
                    "soccer",
                    "sort alphabet ascending",
                    "sort alphabet descending",
                    "sort ascending",
                    "sort content ascending",
                    "sort content descending",
                    "sort descending",
                    "sort numeric ascending",
                    "sort numeric descending",
                    "sound",
                    "spy",
                    "stripe card",
                    "student",
                    "talk",
                    "target",
                    "teletype",
                    "television",
                    "text cursor",
                    "text telephone",
                    "theme",
                    "thumb tack",
                    "time",
                    "tm",
                    "toggle down",
                    "toggle left",
                    "toggle right",
                    "toggle up",
                    "translate",
                    "travel",
                    "treatment",
                    "triangle down",
                    "triangle left",
                    "triangle right",
                    "triangle up",
                    "try",
                    "unhide",
                    "unlinkify",
                    "unmute",
                    "usd",
                    "user cancel",
                    "user close",
                    "user delete",
                    "user x",
                    "vcard",
                    "video camera",
                    "video play",
                    "volume control phone",
                    "wait",
                    "warning circle",
                    "warning sign",
                    "warning",
                    "wi-fi",
                    "winner",
                    "wizard",
                    "woman",
                    "won",
                    "wordpress beginner",
                    "wordpress forms",
                    "world",
                    "write square",
                    "x",
                    "yen",
                    "zip",
                    "zoom in",
                    "zoom out",
                    "zoom",
                    "bitbucket square",
                    "checkmark box",
                    "circle thin",
                    "compose",
                    "conversation",
                    "credit card alternative",
                    "currency",
                    "dashboard",
                    "diamond",
                    "disk",
                    "external share",
                    "external square",
                    "external",
                    "facebook official",
                    "food",
                    "hourglass zero",
                    "level down",
                    "level up",
                    "log out",
                    "meanpath",
                    "money",
                    "move",
                    "pencil",
                    "protect",
                    "radio",
                    "remove bookmark",
                    "resize horizontal",
                    "resize vertical",
                    "sign in",
                    "sign out",
                    "spoon",
                    "star half empty",
                    "star half full",
                    "ticket",
                    "times rectangle",
                    "write"
                  ]
                },
                "type": { "type": "string" },
                "restartPolicy": {
                  "type": "string",
                  "description": "Restart policy"
                },
                "desiredStatus": {
                  "type": "string",
                  "description": "Desired status",
                  "enum": ["stopped", "running"]
                },
                "registryType": {
                  "type": "string",
                  "description": "Registry type",
                  "enum": ["public", "private"]
                },
                "category": {
                  "type": "string",
                  "description": "Container categories",
                  "enum": [
                    "Receiver",
                    "Connectivity",
                    "Data Acquisition",
                    "IT/Cloud Connectors",
                    "Services",
                    "Applications"
                  ]
                },
                "settingsPageId": {
                  "type": "string",
                  "description": "Settings page",
                  "enum": [
                    "gatewayTelemetry",
                    "networkTopology",
                    "opcuaPublisher",
                    "ainConnector",
                    "netFieldProxy",
                    "netFieldAppPlatformConnector"
                  ]
                },
                "shortDescription": {
                  "type": "string",
                  "description": "Short description, max(60)",
                  "maxLength": 60
                },
                "description": {
                  "type": "string",
                  "description": "Description, max(3000)",
                  "maxLength": 3000
                },
                "credentials": {
                  "type": "object",
                  "properties": {
                    "address": { "type": "string" },
                    "username": { "type": "string" }
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.500Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.500Z"
                },
                "sharedWithOrganisations": {
                  "type": "array",
                  "x-constraint": { "unique": "id" },
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "number" },
                      "name": { "type": "string" }
                    }
                  }
                },
                "versions": {
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Random uuid v4.",
                        "default": "7adb258e-3ee7-4299-bcb9-513fab03f7d4",
                        "x-format": { "guid": { "version": "uuidv4" } }
                      },
                      "version": {
                        "type": "string",
                        "description": "Version name"
                      },
                      "useGlobalCredentials": {
                        "type": "boolean",
                        "description": "Use global credentials"
                      },
                      "releaseNotes": {
                        "type": "string",
                        "description": "Release notes"
                      },
                      "imageUri": {
                        "type": "string",
                        "description": "Image URI"
                      },
                      "registryType": {
                        "type": "string",
                        "description": "Registry type",
                        "enum": ["public", "private"]
                      },
                      "credentials": {
                        "type": "object",
                        "properties": {
                          "address": { "type": "string" },
                          "username": { "type": "string" }
                        }
                      },
                      "processorArchitecture": {
                        "type": "string",
                        "description": "Processor architecture",
                        "enum": [
                          "Linux-X86",
                          "Linux-X64",
                          "Linux-ARM32V7",
                          "Linux-ARM64V8",
                          "All"
                        ]
                      },
                      "containerCreateOptions": {
                        "type": "object",
                        "description": "See latest Docker documentation",
                        "x-meta": { "swaggerType": "object" },
                        "properties": {
                          "Hostname": { "type": "string" },
                          "Domainname": { "type": "string" },
                          "User": { "type": "string" },
                          "AttachStdin": { "type": "boolean" },
                          "AttachStdout": { "type": "boolean" },
                          "AttachStderr": { "type": "boolean" },
                          "ExposedPorts": {
                            "type": "object",
                            "properties": { "string": { "type": "object" } }
                          },
                          "Tty": { "type": "boolean" },
                          "OpenStdin": { "type": "boolean" },
                          "StdinOnce": { "type": "boolean" },
                          "Env": {
                            "type": "string",
                            "x-alternatives": [
                              { "type": "string" },
                              { "type": "array", "items": { "type": "string" } }
                            ]
                          },
                          "Cmd": {
                            "type": "string",
                            "x-alternatives": [
                              { "type": "string" },
                              { "type": "array", "items": { "type": "string" } }
                            ]
                          },
                          "Healthcheck": {
                            "type": "object",
                            "properties": {
                              "Test": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "Interval": {
                                "type": "string",
                                "enum": [0],
                                "x-alternatives": [
                                  { "type": "string", "enum": [0] },
                                  { "type": "integer", "minimum": 1000000 }
                                ]
                              },
                              "Timeout": {
                                "type": "string",
                                "enum": [0],
                                "x-alternatives": [
                                  { "type": "string", "enum": [0] },
                                  { "type": "integer", "minimum": 1000000 }
                                ]
                              },
                              "Retries": { "type": "integer", "minimum": 0 },
                              "StartPeriod": {
                                "type": "string",
                                "enum": [0],
                                "x-alternatives": [
                                  { "type": "string", "enum": [0] },
                                  { "type": "integer", "minimum": 1000000 }
                                ]
                              }
                            }
                          },
                          "ArgsEscaped": { "type": "boolean" },
                          "Image": { "type": "string" },
                          "Volumes": {
                            "type": "object",
                            "properties": { "string": { "type": "object" } }
                          },
                          "WorkingDir": { "type": "string" },
                          "Entrypoint": {
                            "x-alternatives": [
                              {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              { "type": "string" }
                            ],
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "NetworkDisabled": { "type": "boolean" },
                          "MacAddress": {
                            "type": "string",
                            "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$"
                          },
                          "OnBuild": {
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "Labels": {
                            "type": "object",
                            "properties": { "string": { "type": "string" } }
                          },
                          "StopSignal": { "type": "string" },
                          "StopTimeout": { "type": "integer", "minimum": 0 },
                          "Shell": {
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "HostConfig": {
                            "type": "object",
                            "properties": {
                              "MaximumIOps": { "type": "integer" },
                              "MaximumIOBps": { "type": "integer" },
                              "CpuShares": { "type": "integer" },
                              "Memory": { "type": "integer" },
                              "CgroupParent": { "type": "string" },
                              "BlkioWeight": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 1000
                              },
                              "BlkioWeightDevice": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Weight": {
                                      "type": "integer",
                                      "minimum": 0
                                    }
                                  }
                                }
                              },
                              "BlkioDeviceReadBps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Rate": { "type": "integer", "minimum": 0 }
                                  }
                                }
                              },
                              "BlkioDeviceWriteBps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Rate": { "type": "integer", "minimum": 0 }
                                  }
                                }
                              },
                              "BlkioDeviceReadIOps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Rate": { "type": "integer", "minimum": 0 }
                                  }
                                }
                              },
                              "BlkioDeviceWriteIOps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Rate": { "type": "integer", "minimum": 0 }
                                  }
                                }
                              },
                              "CpuPeriod": { "type": "integer" },
                              "CpuQuota": { "type": "integer" },
                              "CpuRealtimePeriod": { "type": "integer" },
                              "CpuRealtimeRuntime": { "type": "integer" },
                              "CpusetCpus": { "type": "string" },
                              "CpusetMems": { "type": "string" },
                              "Devices": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "PathOnHost": { "type": "string" },
                                    "PathInContainer": { "type": "string" },
                                    "CgroupPermissions": { "type": "string" }
                                  }
                                }
                              },
                              "DeviceCgroupRules": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "DiskQuota": { "type": "integer" },
                              "KernelMemory": { "type": "integer" },
                              "MemoryReservation": { "type": "integer" },
                              "MemorySwap": { "type": "integer" },
                              "MemorySwappiness": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 100
                              },
                              "NanoCPUs": { "type": "integer" },
                              "OomKillDisable": { "type": "boolean" },
                              "PidsLimit": { "type": "integer" },
                              "Ulimits": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Name": { "type": "string" },
                                    "Soft": { "type": "integer" },
                                    "Hard": { "type": "integer" }
                                  }
                                }
                              },
                              "CpuCount": { "type": "integer" },
                              "CpuPercent": { "type": "integer" },
                              "IOMaximumIOps": { "type": "integer" },
                              "IOMaximumBandwidth": { "type": "integer" },
                              "Binds": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": ".+:.+(:.+)?"
                                }
                              },
                              "ContainerIDFile": { "type": "string" },
                              "LogConfig": {
                                "type": "object",
                                "properties": {
                                  "Type": {
                                    "type": "string",
                                    "enum": [
                                      "json-file",
                                      "syslog",
                                      "journald",
                                      "gelf",
                                      "fluentd",
                                      "awslogs",
                                      "splunk",
                                      "etwlogs",
                                      "none"
                                    ]
                                  },
                                  "Config": {
                                    "type": "object",
                                    "properties": {
                                      "string": { "type": "string" }
                                    }
                                  }
                                }
                              },
                              "NetworkMode": {
                                "type": "string",
                                "enum": ["bridge", "host", "none"],
                                "x-alternatives": [
                                  {
                                    "type": "string",
                                    "enum": ["bridge", "host", "none"]
                                  },
                                  {
                                    "type": "string",
                                    "pattern": "^container:.*$"
                                  }
                                ]
                              },
                              "PortBindings": {
                                "type": "object",
                                "properties": {
                                  "string": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "HostIp": { "type": "string" },
                                        "HostPort": { "type": "string" }
                                      }
                                    }
                                  }
                                }
                              },
                              "RestartPolicy": {
                                "type": "object",
                                "properties": {
                                  "Name": {
                                    "type": "string",
                                    "enum": [
                                      "always",
                                      "unless-stopped",
                                      "on-failure"
                                    ]
                                  },
                                  "MaximumRetryCount": { "type": "integer" }
                                }
                              },
                              "AutoRemove": { "type": "boolean" },
                              "VolumeDriver": { "type": "string" },
                              "VolumesFrom": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": "^.+(:(ro|rw))?$"
                                }
                              },
                              "Mounts": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Target": { "type": "string" },
                                    "Source": { "type": "string" },
                                    "Type": {
                                      "type": "string",
                                      "enum": ["bind", "volume", "tmpfs"]
                                    },
                                    "ReadOnly": { "type": "boolean" },
                                    "Consistency": { "type": "string" },
                                    "BindOptions": {
                                      "type": "object",
                                      "properties": {
                                        "Propagation": {
                                          "type": "string",
                                          "enum": [
                                            "private",
                                            "rprivate",
                                            "shared",
                                            "rshared",
                                            "slave",
                                            "rslave"
                                          ]
                                        }
                                      }
                                    },
                                    "VolumeOptions": {
                                      "type": "object",
                                      "properties": {
                                        "NoCopy": { "type": "boolean" },
                                        "Labels": {
                                          "type": "object",
                                          "properties": {
                                            "string": { "type": "string" }
                                          }
                                        },
                                        "DriverConfig": {
                                          "type": "object",
                                          "properties": {
                                            "Name": { "type": "string" },
                                            "Options": {
                                              "type": "object",
                                              "properties": {
                                                "string": { "type": "string" }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "TmpfsOptions": {
                                      "type": "object",
                                      "properties": {
                                        "SizeBytes": { "type": "integer" },
                                        "Mode": { "type": "integer" }
                                      }
                                    }
                                  }
                                }
                              },
                              "CapAdd": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "CapDrop": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "Dns": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "DnsOptions": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "DnsSearch": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "ExtraHosts": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": "^.+:.+$"
                                }
                              },
                              "GroupAdd": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "IpcMode": { "type": "string" },
                              "Cgroup": { "type": "string" },
                              "Links": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": "^.+:.+$"
                                }
                              },
                              "OomScoreAdj": { "type": "integer" },
                              "PidMode": {
                                "type": "string",
                                "pattern": "^.+(:.+)?$"
                              },
                              "Privileged": { "type": "boolean" },
                              "PublishAllPorts": { "type": "boolean" },
                              "ReadonlyRootfs": { "type": "boolean" },
                              "SecurityOpt": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "StorageOpt": {
                                "type": "object",
                                "properties": { "string": { "type": "string" } }
                              },
                              "Tmpfs": {
                                "type": "object",
                                "properties": { "string": { "type": "string" } }
                              },
                              "UTSMode": { "type": "string" },
                              "UsernsMode": { "type": "string" },
                              "ShmSize": { "type": "integer", "minimum": 0 },
                              "Sysctls": {
                                "type": "object",
                                "properties": { "string": { "type": "string" } }
                              },
                              "Runtime": { "type": "string" },
                              "ConsoleSize": {
                                "type": "array",
                                "x-constraint": { "length": 2 },
                                "items": { "type": "integer", "minimum": 0 }
                              },
                              "Isolation": {
                                "type": "string",
                                "enum": ["default", "process", "hyperv"]
                              }
                            }
                          },
                          "NetworkingConfig": {
                            "type": "object",
                            "properties": {
                              "EndpointsConfig": {
                                "type": "object",
                                "properties": {
                                  "string": {
                                    "type": "object",
                                    "properties": {
                                      "IPAMConfig": {
                                        "type": "object",
                                        "properties": {
                                          "IPv4Address": {
                                            "type": "string",
                                            "x-format": {
                                              "ip": {
                                                "cidr": "optional",
                                                "version": ["ipv4"]
                                              }
                                            }
                                          },
                                          "IPv6Address": {
                                            "type": "string",
                                            "x-format": {
                                              "ip": {
                                                "cidr": "optional",
                                                "version": ["ipv6"]
                                              }
                                            }
                                          },
                                          "LinkLocalIPs": {
                                            "type": "array",
                                            "items": { "type": "string" }
                                          }
                                        }
                                      },
                                      "Links": {
                                        "type": "array",
                                        "items": { "type": "string" }
                                      },
                                      "Aliases": {
                                        "type": "array",
                                        "items": { "type": "string" }
                                      },
                                      "NetworkId": { "type": "string" },
                                      "EndpointId": { "type": "string" },
                                      "Gateway": { "type": "string" },
                                      "IPAddress": {
                                        "type": "string",
                                        "x-format": {
                                          "ip": {
                                            "cidr": "optional",
                                            "version": ["ipv4"]
                                          }
                                        }
                                      },
                                      "IPPrefixLen": { "type": "integer" },
                                      "IPv6Gateway": { "type": "string" },
                                      "GlobalIPv6Address": {
                                        "type": "string",
                                        "x-format": {
                                          "ip": {
                                            "cidr": "optional",
                                            "version": ["ipv6"]
                                          }
                                        }
                                      },
                                      "GlobalIPv6PrefixLen": {
                                        "type": "integer"
                                      },
                                      "MacAddress": { "type": "string" }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "containerTwinDesiredOptions": { "type": "object" },
                      "environmentVariables": {
                        "type": "array",
                        "description": "An array of object containing environment variables",
                        "x-meta": { "swaggerType": "array" },
                        "x-constraint": { "unique": "key" },
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": { "type": "string" },
                            "value": { "type": "string" }
                          },
                          "required": ["key", "value"]
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "createdAt",
                        "default": "2021-05-21T06:02:07.766Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "updatedAt",
                        "default": "2021-05-21T06:02:07.766Z"
                      }
                    }
                  }
                },
                "mqttTopics": {
                  "type": "array",
                  "description": "MQTT topics",
                  "x-constraint": { "unique": true },
                  "items": { "type": "string" }
                }
              }
            },
            "description": "Retrieve container"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Container(s) not found"
          }
        }
      },
      "put": {
        "summary": "Update a container",
        "operationId": "putContainersContainerid",
        "description": "containers<br/><br/>updateContainers",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / uuid_v4",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "name": "containerId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer, optional",
            "minimum": 1,
            "name": "organisationId",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Display name",
            "name": "displayName",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Container name",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_.-]+$",
            "name": "containerName",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Container access",
            "enum": ["public", "private"],
            "name": "containerAccess",
            "in": "formData"
          },
          {
            "type": "array",
            "description": "Array of numbers representing the organisation Ids",
            "x-meta": { "swaggerType": "array" },
            "x-constraint": { "unique": true },
            "items": { "type": "integer", "minimum": 1 },
            "collectionFormat": "multi",
            "name": "sharedOrganisationIds",
            "in": "formData"
          },
          {
            "type": "file",
            "x-meta": { "swaggerType": "file" },
            "in": "formData",
            "name": "image"
          },
          {
            "type": "string",
            "description": "Icon name",
            "enum": [
              "american sign language interpreting",
              "assistive listening systems",
              "audio description",
              "blind",
              "braille",
              "closed captioning",
              "closed captioning outline",
              "deaf",
              "low vision",
              "phone volume",
              "question circle",
              "question circle outline",
              "sign language",
              "tty",
              "universal access",
              "wheelchair",
              "angle double down",
              "angle double left",
              "angle double right",
              "angle double up",
              "angle down",
              "angle left",
              "angle right",
              "angle up",
              "arrow alternate circle down",
              "arrow alternate circle down outline",
              "arrow alternate circle left",
              "arrow alternate circle left outline",
              "arrow alternate circle right",
              "arrow alternate circle right outline",
              "arrow alternate circle up",
              "arrow alternate circle up outline",
              "arrow circle down",
              "arrow circle left",
              "arrow circle right",
              "arrow circle up",
              "arrow down",
              "arrow left",
              "arrow right",
              "arrow up",
              "arrows alternate",
              "arrows alternate horizontal",
              "arrows alternate vertical",
              "caret down",
              "caret left",
              "caret right",
              "caret square down",
              "caret square down outline",
              "caret square left",
              "caret square left outline",
              "caret square right",
              "caret square right outline",
              "caret square up",
              "caret square up outline",
              "caret up",
              "cart arrow down",
              "chart line",
              "chevron circle down",
              "chevron circle left",
              "chevron circle right",
              "chevron circle up",
              "chevron down",
              "chevron left",
              "chevron right",
              "chevron up",
              "cloud download",
              "cloud upload",
              "download",
              "exchange",
              "expand arrows alternate",
              "external alternate",
              "external square alternate",
              "hand point down",
              "hand point down outline",
              "hand point left",
              "hand point left outline",
              "hand point right",
              "hand point right outline",
              "hand point up",
              "hand point up outline",
              "hand pointer",
              "hand pointer outline",
              "history",
              "level down alternate",
              "level up alternate",
              "location arrow",
              "long arrow alternate down",
              "long arrow alternate left",
              "long arrow alternate right",
              "long arrow alternate up",
              "mouse pointer",
              "play",
              "random",
              "recycle",
              "redo",
              "redo alternate",
              "reply",
              "reply all",
              "retweet",
              "share",
              "share square",
              "share square outline",
              "sign-in",
              "sign-out",
              "sign-in alternate",
              "sign-out alternate",
              "sort",
              "sort alphabet down",
              "sort alphabet up",
              "sort amount down",
              "sort amount up",
              "sort down",
              "sort numeric down",
              "sort numeric up",
              "sort up",
              "sync",
              "sync alternate",
              "text height",
              "text width",
              "undo",
              "undo alternate",
              "upload",
              "zoom-in",
              "zoom-out",
              "backward",
              "circle",
              "circle outline",
              "compress",
              "eject",
              "expand",
              "fast backward",
              "fast forward",
              "file audio",
              "file audio outline",
              "file video",
              "file video outline",
              "film",
              "forward",
              "headphones",
              "microphone",
              "microphone slash",
              "music",
              "pause",
              "pause circle",
              "pause circle outline",
              "play circle",
              "play circle outline",
              "podcast",
              "rss",
              "rss square",
              "step backward",
              "step forward",
              "stop",
              "stop circle",
              "stop circle outline",
              "video",
              "volume down",
              "volume off",
              "volume up",
              "address book",
              "address book outline",
              "address card",
              "address card outline",
              "archive",
              "balance scale",
              "birthday cake",
              "book",
              "briefcase",
              "building",
              "building outline",
              "bullhorn",
              "bullseye",
              "calculator",
              "calendar",
              "calendar outline",
              "calendar alternate",
              "calendar alternate outline",
              "certificate",
              "chart area",
              "chart bar",
              "chart bar outline",
              "chart pie",
              "clipboard",
              "clipboard outline",
              "coffee",
              "columns",
              "compass",
              "compass outline",
              "copy",
              "copy outline",
              "copyright",
              "copyright outline",
              "cut",
              "edit",
              "edit outline",
              "envelope",
              "envelope outline",
              "envelope open",
              "envelope open outline",
              "envelope square",
              "eraser",
              "fax",
              "file",
              "file outline",
              "file alternate",
              "file alternate outline",
              "folder",
              "folder outline",
              "folder open",
              "folder open outline",
              "globe",
              "industry",
              "paperclip",
              "paste",
              "pen square",
              "pencil alternate",
              "percent",
              "phone",
              "phone square",
              "registered",
              "registered outline",
              "save",
              "save outline",
              "sitemap",
              "sticky note",
              "sticky note outline",
              "suitcase",
              "table",
              "tag",
              "tags",
              "tasks",
              "thumbtack",
              "trademark",
              "chess",
              "chess bishop",
              "chess board",
              "chess king",
              "chess knight",
              "chess pawn",
              "chess queen",
              "chess rook",
              "square full",
              "barcode",
              "bath",
              "bug",
              "code",
              "code branch",
              "file code",
              "file code outline",
              "filter",
              "fire extinguisher",
              "keyboard",
              "keyboard outline",
              "microchip",
              "qrcode",
              "shield alternate",
              "terminal",
              "user secret",
              "window close",
              "window close outline",
              "window maximize",
              "window maximize outline",
              "window minimize",
              "window minimize outline",
              "window restore",
              "window restore outline",
              "at",
              "bell",
              "bell outline",
              "bell slash",
              "bell slash outline",
              "comment",
              "comment outline",
              "comment alternate",
              "comment alternate outline",
              "comments",
              "comments outline",
              "inbox",
              "language",
              "mobile",
              "mobile alternate",
              "paper plane",
              "paper plane outline",
              "wifi",
              "desktop",
              "hdd",
              "hdd outline",
              "laptop",
              "plug",
              "power off",
              "print",
              "server",
              "tablet",
              "tablet alternate",
              "tv",
              "dollar sign",
              "euro sign",
              "lira sign",
              "money bill alternate",
              "money bill alternate outline",
              "pound sign",
              "ruble sign",
              "rupee sign",
              "shekel sign",
              "won sign",
              "yen sign",
              "calendar check",
              "calendar check outline",
              "calendar minus",
              "calendar minus outline",
              "calendar plus",
              "calendar plus outline",
              "calendar times",
              "calendar times outline",
              "clock",
              "clock outline",
              "hourglass",
              "hourglass outline",
              "hourglass end",
              "hourglass half",
              "hourglass start",
              "stopwatch",
              "adjust",
              "clone",
              "clone outline",
              "crop",
              "crosshairs",
              "eye",
              "eye dropper",
              "eye slash",
              "eye slash outline",
              "object group",
              "object group outline",
              "object ungroup",
              "object ungroup outline",
              "paint brush",
              "tint",
              "align center",
              "align justify",
              "align left",
              "align right",
              "bold",
              "font",
              "heading",
              "i cursor",
              "indent",
              "italic",
              "linkify",
              "list",
              "list alternate",
              "list alternate outline",
              "list ol",
              "list ul",
              "outdent",
              "paragraph",
              "quote left",
              "quote right",
              "strikethrough",
              "subscript",
              "superscript",
              "th",
              "th large",
              "th list",
              "trash",
              "trash alternate",
              "trash alternate outline",
              "underline",
              "unlink",
              "file archive",
              "file archive outline",
              "file excel",
              "file excel outline",
              "file image",
              "file image outline",
              "file pdf",
              "file pdf outline",
              "file powerpoint",
              "file powerpoint outline",
              "file word",
              "file word outline",
              "genderless",
              "mars",
              "mars double",
              "mars stroke",
              "mars stroke horizontal",
              "mars stroke vertical",
              "mercury",
              "neuter",
              "transgender",
              "transgender alternate",
              "venus",
              "venus double",
              "venus mars",
              "hand lizard",
              "hand lizard outline",
              "hand paper",
              "hand paper outline",
              "hand peace",
              "hand peace outline",
              "hand rock",
              "hand rock outline",
              "hand scissors",
              "hand scissors outline",
              "hand spock",
              "hand spock outline",
              "handshake",
              "handshake outline",
              "thumbs down",
              "thumbs down outline",
              "thumbs up",
              "thumbs up outline",
              "ambulance",
              "h square",
              "heart",
              "heart outline",
              "heartbeat",
              "hospital",
              "hospital outline",
              "medkit",
              "plus square",
              "plus square outline",
              "stethoscope",
              "user md",
              "bolt",
              "camera",
              "camera retro",
              "id badge",
              "id badge outline",
              "id card",
              "id card outline",
              "image",
              "image outline",
              "images",
              "images outline",
              "sliders horizontal",
              "ban",
              "bars",
              "beer",
              "check",
              "check circle",
              "check circle outline",
              "check square",
              "check square outline",
              "cloud",
              "cog",
              "cogs",
              "database",
              "dot circle",
              "dot circle outline",
              "ellipsis horizontal",
              "ellipsis vertical",
              "exclamation",
              "exclamation circle",
              "exclamation triangle",
              "flag",
              "flag outline",
              "flag checkered",
              "frown",
              "frown outline",
              "hashtag",
              "home",
              "info",
              "info circle",
              "magic",
              "meh",
              "meh outline",
              "minus",
              "minus circle",
              "minus square",
              "minus square outline",
              "plus",
              "plus circle",
              "question",
              "search",
              "search minus",
              "search plus",
              "share alternate",
              "share alternate square",
              "signal",
              "smile",
              "smile outline",
              "star",
              "star outline",
              "star half",
              "star half outline",
              "times",
              "times circle",
              "times circle outline",
              "toggle off",
              "toggle on",
              "trophy",
              "user",
              "user outline",
              "user circle",
              "user circle outline",
              "box",
              "boxes",
              "clipboard check",
              "clipboard list",
              "dolly",
              "dolly flatbed",
              "pallet",
              "shipping fast",
              "truck",
              "warehouse",
              "anchor",
              "bed",
              "bicycle",
              "binoculars",
              "bomb",
              "bookmark",
              "bookmark outline",
              "car",
              "fighter jet",
              "fire",
              "flask",
              "gamepad",
              "gavel",
              "gift",
              "glass martini",
              "graduation cap",
              "key",
              "leaf",
              "lemon",
              "lemon outline",
              "life ring",
              "life ring outline",
              "lightbulb",
              "lightbulb outline",
              "magnet",
              "male",
              "map",
              "map outline",
              "map marker",
              "map marker alternate",
              "map pin",
              "map signs",
              "motorcycle",
              "newspaper",
              "newspaper outline",
              "paw",
              "plane",
              "road",
              "rocket",
              "ship",
              "shopping bag",
              "shopping basket",
              "shopping cart",
              "shower",
              "street view",
              "subway",
              "taxi",
              "ticket alternate",
              "train",
              "tree",
              "umbrella",
              "university",
              "utensil spoon",
              "utensils",
              "wrench",
              "band aid",
              "dna",
              "first aid",
              "hospital symbol",
              "pills",
              "syringe",
              "thermometer",
              "weight",
              "bus",
              "cube",
              "cubes",
              "futbol",
              "futbol outline",
              "gem",
              "gem outline",
              "lock",
              "lock open",
              "moon",
              "moon outline",
              "puzzle piece",
              "snowflake",
              "snowflake outline",
              "space shuttle",
              "sun",
              "sun outline",
              "tachometer alternate",
              "unlock",
              "unlock alternate",
              "cart plus",
              "credit card",
              "credit card outline",
              "square",
              "square outline",
              "asterisk",
              "circle notch",
              "spinner",
              "baseball ball",
              "basketball ball",
              "bowling ball",
              "football ball",
              "golf ball",
              "hockey puck",
              "quidditch",
              "table tennis",
              "volleyball ball",
              "battery empty",
              "battery full",
              "battery half",
              "battery quarter",
              "battery three quarters",
              "sign in alternate",
              "sign out alternate",
              "thermometer empty",
              "thermometer full",
              "thermometer half",
              "thermometer quarter",
              "thermometer three quarters",
              "child",
              "female",
              "user plus",
              "user times",
              "users",
              "500px",
              "accessible",
              "accusoft",
              "adn",
              "adversal",
              "affiliatetheme",
              "algolia",
              "amazon",
              "amazon pay",
              "amilia",
              "android",
              "angellist",
              "angrycreative",
              "angular",
              "app store",
              "app store ios",
              "apper",
              "apple",
              "apple pay",
              "asymmetrik",
              "audible",
              "autoprefixer",
              "avianex",
              "aviato",
              "aws",
              "bandcamp",
              "behance",
              "behance square",
              "bimobject",
              "bitbucket",
              "bitcoin",
              "bity",
              "black tie",
              "blackberry",
              "blogger",
              "blogger b",
              "bluetooth",
              "bluetooth b",
              "btc",
              "buromobelexperte",
              "buysellads",
              "cc amazon pay",
              "cc amex",
              "cc apple pay",
              "cc diners club",
              "cc discover",
              "cc jcb",
              "cc mastercard",
              "cc paypal",
              "cc stripe",
              "cc visa",
              "centercode",
              "chrome",
              "cloudscale",
              "cloudsmith",
              "cloudversify",
              "codepen",
              "codiepie",
              "connectdevelop",
              "contao",
              "cpanel",
              "creative commons",
              "css3",
              "css3 alternate",
              "cuttlefish",
              "d and d",
              "dashcube",
              "delicious",
              "deploydog",
              "deskpro",
              "deviantart",
              "digg",
              "digital ocean",
              "discord",
              "discourse",
              "dochub",
              "docker",
              "draft2digital",
              "dribbble",
              "dribbble square",
              "dropbox",
              "drupal",
              "dyalog",
              "earlybirds",
              "edge",
              "elementor",
              "ember",
              "empire",
              "envira",
              "erlang",
              "ethereum",
              "etsy",
              "expeditedssl",
              "facebook",
              "facebook f",
              "facebook messenger",
              "facebook square",
              "firefox",
              "first order",
              "firstdraft",
              "flickr",
              "flipboard",
              "fly",
              "font awesome",
              "font awesome alternate",
              "font awesome flag",
              "fonticons",
              "fonticons fi",
              "fort awesome",
              "fort awesome alternate",
              "forumbee",
              "foursquare",
              "free code camp",
              "freebsd",
              "get pocket",
              "gg",
              "gg circle",
              "git",
              "git square",
              "github",
              "github alternate",
              "github square",
              "gitkraken",
              "gitlab",
              "gitter",
              "glide",
              "glide g",
              "gofore",
              "goodreads",
              "goodreads g",
              "google",
              "google drive",
              "google play",
              "google plus",
              "google plus g",
              "google plus square",
              "google wallet",
              "gratipay",
              "grav",
              "gripfire",
              "grunt",
              "gulp",
              "hacker news",
              "hacker news square",
              "hips",
              "hire a helper",
              "hooli",
              "hotjar",
              "houzz",
              "html5",
              "hubspot",
              "imdb",
              "instagram",
              "internet explorer",
              "ioxhost",
              "itunes",
              "itunes note",
              "jenkins",
              "joget",
              "joomla",
              "js",
              "js square",
              "jsfiddle",
              "keycdn",
              "kickstarter",
              "kickstarter k",
              "korvue",
              "laravel",
              "lastfm",
              "lastfm square",
              "leanpub",
              "less",
              "linechat",
              "linkedin",
              "linkedin alternate",
              "linode",
              "linux",
              "lyft",
              "magento",
              "maxcdn",
              "medapps",
              "medium",
              "medium m",
              "medrt",
              "meetup",
              "microsoft",
              "mix",
              "mixcloud",
              "mizuni",
              "modx",
              "monero",
              "napster",
              "nintendo switch",
              "node",
              "node js",
              "npm",
              "ns8",
              "nutritionix",
              "odnoklassniki",
              "odnoklassniki square",
              "opencart",
              "openid",
              "opera",
              "optin monster",
              "osi",
              "page4",
              "pagelines",
              "palfed",
              "patreon",
              "paypal",
              "periscope",
              "phabricator",
              "phoenix framework",
              "php",
              "pied piper",
              "pied piper alternate",
              "pied piper pp",
              "pinterest",
              "pinterest p",
              "pinterest square",
              "playstation",
              "product hunt",
              "pushed",
              "python",
              "qq",
              "quinscape",
              "quora",
              "ravelry",
              "react",
              "rebel",
              "redriver",
              "reddit",
              "reddit alien",
              "reddit square",
              "rendact",
              "renren",
              "replyd",
              "resolving",
              "rocketchat",
              "rockrms",
              "safari",
              "sass",
              "schlix",
              "scribd",
              "searchengin",
              "sellcast",
              "sellsy",
              "servicestack",
              "shirtsinbulk",
              "simplybuilt",
              "sistrix",
              "skyatlas",
              "skype",
              "slack",
              "slack hash",
              "slideshare",
              "snapchat",
              "snapchat ghost",
              "snapchat square",
              "soundcloud",
              "speakap",
              "spotify",
              "stack exchange",
              "stack overflow",
              "staylinked",
              "steam",
              "steam square",
              "steam symbol",
              "sticker mule",
              "strava",
              "stripe",
              "stripe s",
              "studiovinari",
              "stumbleupon",
              "stumbleupon circle",
              "superpowers",
              "supple",
              "telegram",
              "telegram plane",
              "tencent weibo",
              "themeisle",
              "trello",
              "tripadvisor",
              "tumblr",
              "tumblr square",
              "twitch",
              "twitter",
              "twitter square",
              "typo3",
              "uber",
              "uikit",
              "uniregistry",
              "untappd",
              "usb",
              "ussunnah",
              "vaadin",
              "viacoin",
              "viadeo",
              "viadeo square",
              "viber",
              "vimeo",
              "vimeo square",
              "vimeo v",
              "vine",
              "vk",
              "vnv",
              "vuejs",
              "wechat",
              "weibo",
              "weixin",
              "whatsapp",
              "whatsapp square",
              "whmcs",
              "wikipedia w",
              "windows",
              "wordpress",
              "wordpress simple",
              "wpbeginner",
              "wpexplorer",
              "wpforms",
              "xbox",
              "xing",
              "xing square",
              "y combinator",
              "yahoo",
              "yandex",
              "yandex international",
              "yelp",
              "yoast",
              "youtube",
              "youtube square",
              "chess rock",
              "ordered list",
              "unordered list",
              "user doctor",
              "shield",
              "puzzle",
              "add circle",
              "add square",
              "add to calendar",
              "add to cart",
              "add user",
              "add",
              "alarm mute",
              "alarm",
              "ald",
              "als",
              "announcement",
              "area chart",
              "area graph",
              "arrow down cart",
              "asexual",
              "asl interpreting",
              "asl",
              "assistive listening devices",
              "attach",
              "attention",
              "balance",
              "bar",
              "bathtub",
              "battery four",
              "battery high",
              "battery low",
              "battery one",
              "battery three",
              "battery two",
              "battery zero",
              "birthday",
              "block layout",
              "bluetooth alternative",
              "broken chain",
              "browser",
              "call square",
              "call",
              "cancel",
              "cart",
              "cc",
              "chain",
              "chat",
              "checked calendar",
              "checkmark",
              "circle notched",
              "close",
              "cny",
              "cocktail",
              "commenting",
              "computer",
              "configure",
              "content",
              "deafness",
              "delete calendar",
              "delete",
              "detective",
              "discussions",
              "doctor",
              "dollar",
              "dont",
              "drivers license",
              "dropdown",
              "emergency",
              "envira gallery",
              "erase",
              "eur",
              "euro",
              "eyedropper",
              "factory",
              "favorite",
              "feed",
              "female homosexual",
              "file text",
              "file text outline",
              "find",
              "fork",
              "game",
              "gay",
              "gbp",
              "google plus circle",
              "google plus official",
              "grab",
              "graduation",
              "grid layout",
              "group",
              "h",
              "hand victory",
              "handicap",
              "hard of hearing",
              "header",
              "help circle",
              "help",
              "heterosexual",
              "hide",
              "hotel",
              "hourglass four",
              "hourglass full",
              "hourglass one",
              "hourglass three",
              "hourglass two",
              "idea",
              "ils",
              "in cart",
              "inr",
              "intergender",
              "intersex",
              "jpy",
              "krw",
              "lab",
              "law",
              "legal",
              "lesbian",
              "lightning",
              "like",
              "line graph",
              "linkedin square",
              "lira",
              "list layout",
              "magnify",
              "mail forward",
              "mail square",
              "mail",
              "male homosexual",
              "man",
              "marker",
              "mars alternate",
              "mars horizontal",
              "mars vertical",
              "microsoft edge",
              "military",
              "ms edge",
              "mute",
              "new pied piper",
              "non binary transgender",
              "numbered list",
              "options",
              "other gender horizontal",
              "other gender vertical",
              "other gender",
              "payment",
              "paypal card",
              "pencil square",
              "photo",
              "picture",
              "pie chart",
              "pie graph",
              "pied piper hat",
              "pin",
              "plus cart",
              "point",
              "pointing down",
              "pointing left",
              "pointing right",
              "pointing up",
              "pound",
              "power cord",
              "power",
              "privacy",
              "r circle",
              "rain",
              "record",
              "refresh",
              "remove circle",
              "remove from calendar",
              "remove user",
              "remove",
              "repeat",
              "rmb",
              "rouble",
              "rub",
              "ruble",
              "rupee",
              "s15",
              "selected radio",
              "send",
              "setting",
              "settings",
              "shekel",
              "sheqel",
              "shipping",
              "shop",
              "shuffle",
              "shutdown",
              "sidebar",
              "signing",
              "signup",
              "sliders",
              "soccer",
              "sort alphabet ascending",
              "sort alphabet descending",
              "sort ascending",
              "sort content ascending",
              "sort content descending",
              "sort descending",
              "sort numeric ascending",
              "sort numeric descending",
              "sound",
              "spy",
              "stripe card",
              "student",
              "talk",
              "target",
              "teletype",
              "television",
              "text cursor",
              "text telephone",
              "theme",
              "thumb tack",
              "time",
              "tm",
              "toggle down",
              "toggle left",
              "toggle right",
              "toggle up",
              "translate",
              "travel",
              "treatment",
              "triangle down",
              "triangle left",
              "triangle right",
              "triangle up",
              "try",
              "unhide",
              "unlinkify",
              "unmute",
              "usd",
              "user cancel",
              "user close",
              "user delete",
              "user x",
              "vcard",
              "video camera",
              "video play",
              "volume control phone",
              "wait",
              "warning circle",
              "warning sign",
              "warning",
              "wi-fi",
              "winner",
              "wizard",
              "woman",
              "won",
              "wordpress beginner",
              "wordpress forms",
              "world",
              "write square",
              "x",
              "yen",
              "zip",
              "zoom in",
              "zoom out",
              "zoom",
              "bitbucket square",
              "checkmark box",
              "circle thin",
              "compose",
              "conversation",
              "credit card alternative",
              "currency",
              "dashboard",
              "diamond",
              "disk",
              "external share",
              "external square",
              "external",
              "facebook official",
              "food",
              "hourglass zero",
              "level down",
              "level up",
              "log out",
              "meanpath",
              "money",
              "move",
              "pencil",
              "protect",
              "radio",
              "remove bookmark",
              "resize horizontal",
              "resize vertical",
              "sign in",
              "sign out",
              "spoon",
              "star half empty",
              "star half full",
              "ticket",
              "times rectangle",
              "write"
            ],
            "name": "icon",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Container type",
            "name": "type",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Restart policy",
            "enum": ["always", "never", "on-failed", "on-unhealthy"],
            "name": "restartPolicy",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Desired status",
            "enum": ["stopped", "running"],
            "name": "desiredStatus",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Registry type",
            "enum": ["public", "private"],
            "name": "registryType",
            "in": "formData"
          },
          {
            "type": "string",
            "x-meta": { "swaggerType": "object" },
            "optional": ["address", "username", "password"],
            "name": "credentials",
            "in": "formData",
            "required": false,
            "x-type": "object",
            "x-properties": {
              "address": { "type": "string" },
              "username": { "type": "string" },
              "password": { "type": "string" }
            }
          },
          {
            "type": "string",
            "description": "Container categories",
            "enum": [
              "Receiver",
              "Connectivity",
              "Data Acquisition",
              "IT/Cloud Connectors",
              "Services",
              "Applications"
            ],
            "name": "category",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Settings page",
            "enum": [
              "gatewayTelemetry",
              "networkTopology",
              "opcuaPublisher",
              "ainConnector",
              "netFieldProxy",
              "netFieldAppPlatformConnector"
            ],
            "name": "settingsPageId",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Short description, max(60)",
            "maxLength": 60,
            "name": "shortDescription",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Description, max(3000)",
            "maxLength": 3000,
            "name": "description",
            "in": "formData"
          },
          {
            "type": "array",
            "description": "MQTT topics",
            "x-meta": { "swaggerType": "array" },
            "x-constraint": { "unique": true },
            "items": { "type": "string" },
            "collectionFormat": "multi",
            "name": "mqttTopics",
            "in": "formData"
          }
        ],
        "consumes": ["multipart/form-data"],
        "tags": ["containers"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Random uuid v4.",
                  "default": "7adb258e-3ee7-4299-bcb9-513fab03f7d4",
                  "x-format": { "guid": { "version": "uuidv4" } }
                },
                "image": { "type": "string" },
                "organisationId": { "type": "number" },
                "organisation": { "type": "string" },
                "containerAccess": {
                  "type": "string",
                  "description": "Container access",
                  "enum": ["public", "private"]
                },
                "status": { "type": "string" },
                "displayName": {
                  "type": "string",
                  "description": "Display name"
                },
                "containerName": {
                  "type": "string",
                  "description": "Container name"
                },
                "icon": {
                  "type": "string",
                  "description": "Icon name",
                  "enum": [
                    "american sign language interpreting",
                    "assistive listening systems",
                    "audio description",
                    "blind",
                    "braille",
                    "closed captioning",
                    "closed captioning outline",
                    "deaf",
                    "low vision",
                    "phone volume",
                    "question circle",
                    "question circle outline",
                    "sign language",
                    "tty",
                    "universal access",
                    "wheelchair",
                    "angle double down",
                    "angle double left",
                    "angle double right",
                    "angle double up",
                    "angle down",
                    "angle left",
                    "angle right",
                    "angle up",
                    "arrow alternate circle down",
                    "arrow alternate circle down outline",
                    "arrow alternate circle left",
                    "arrow alternate circle left outline",
                    "arrow alternate circle right",
                    "arrow alternate circle right outline",
                    "arrow alternate circle up",
                    "arrow alternate circle up outline",
                    "arrow circle down",
                    "arrow circle left",
                    "arrow circle right",
                    "arrow circle up",
                    "arrow down",
                    "arrow left",
                    "arrow right",
                    "arrow up",
                    "arrows alternate",
                    "arrows alternate horizontal",
                    "arrows alternate vertical",
                    "caret down",
                    "caret left",
                    "caret right",
                    "caret square down",
                    "caret square down outline",
                    "caret square left",
                    "caret square left outline",
                    "caret square right",
                    "caret square right outline",
                    "caret square up",
                    "caret square up outline",
                    "caret up",
                    "cart arrow down",
                    "chart line",
                    "chevron circle down",
                    "chevron circle left",
                    "chevron circle right",
                    "chevron circle up",
                    "chevron down",
                    "chevron left",
                    "chevron right",
                    "chevron up",
                    "cloud download",
                    "cloud upload",
                    "download",
                    "exchange",
                    "expand arrows alternate",
                    "external alternate",
                    "external square alternate",
                    "hand point down",
                    "hand point down outline",
                    "hand point left",
                    "hand point left outline",
                    "hand point right",
                    "hand point right outline",
                    "hand point up",
                    "hand point up outline",
                    "hand pointer",
                    "hand pointer outline",
                    "history",
                    "level down alternate",
                    "level up alternate",
                    "location arrow",
                    "long arrow alternate down",
                    "long arrow alternate left",
                    "long arrow alternate right",
                    "long arrow alternate up",
                    "mouse pointer",
                    "play",
                    "random",
                    "recycle",
                    "redo",
                    "redo alternate",
                    "reply",
                    "reply all",
                    "retweet",
                    "share",
                    "share square",
                    "share square outline",
                    "sign-in",
                    "sign-out",
                    "sign-in alternate",
                    "sign-out alternate",
                    "sort",
                    "sort alphabet down",
                    "sort alphabet up",
                    "sort amount down",
                    "sort amount up",
                    "sort down",
                    "sort numeric down",
                    "sort numeric up",
                    "sort up",
                    "sync",
                    "sync alternate",
                    "text height",
                    "text width",
                    "undo",
                    "undo alternate",
                    "upload",
                    "zoom-in",
                    "zoom-out",
                    "backward",
                    "circle",
                    "circle outline",
                    "compress",
                    "eject",
                    "expand",
                    "fast backward",
                    "fast forward",
                    "file audio",
                    "file audio outline",
                    "file video",
                    "file video outline",
                    "film",
                    "forward",
                    "headphones",
                    "microphone",
                    "microphone slash",
                    "music",
                    "pause",
                    "pause circle",
                    "pause circle outline",
                    "play circle",
                    "play circle outline",
                    "podcast",
                    "rss",
                    "rss square",
                    "step backward",
                    "step forward",
                    "stop",
                    "stop circle",
                    "stop circle outline",
                    "video",
                    "volume down",
                    "volume off",
                    "volume up",
                    "address book",
                    "address book outline",
                    "address card",
                    "address card outline",
                    "archive",
                    "balance scale",
                    "birthday cake",
                    "book",
                    "briefcase",
                    "building",
                    "building outline",
                    "bullhorn",
                    "bullseye",
                    "calculator",
                    "calendar",
                    "calendar outline",
                    "calendar alternate",
                    "calendar alternate outline",
                    "certificate",
                    "chart area",
                    "chart bar",
                    "chart bar outline",
                    "chart pie",
                    "clipboard",
                    "clipboard outline",
                    "coffee",
                    "columns",
                    "compass",
                    "compass outline",
                    "copy",
                    "copy outline",
                    "copyright",
                    "copyright outline",
                    "cut",
                    "edit",
                    "edit outline",
                    "envelope",
                    "envelope outline",
                    "envelope open",
                    "envelope open outline",
                    "envelope square",
                    "eraser",
                    "fax",
                    "file",
                    "file outline",
                    "file alternate",
                    "file alternate outline",
                    "folder",
                    "folder outline",
                    "folder open",
                    "folder open outline",
                    "globe",
                    "industry",
                    "paperclip",
                    "paste",
                    "pen square",
                    "pencil alternate",
                    "percent",
                    "phone",
                    "phone square",
                    "registered",
                    "registered outline",
                    "save",
                    "save outline",
                    "sitemap",
                    "sticky note",
                    "sticky note outline",
                    "suitcase",
                    "table",
                    "tag",
                    "tags",
                    "tasks",
                    "thumbtack",
                    "trademark",
                    "chess",
                    "chess bishop",
                    "chess board",
                    "chess king",
                    "chess knight",
                    "chess pawn",
                    "chess queen",
                    "chess rook",
                    "square full",
                    "barcode",
                    "bath",
                    "bug",
                    "code",
                    "code branch",
                    "file code",
                    "file code outline",
                    "filter",
                    "fire extinguisher",
                    "keyboard",
                    "keyboard outline",
                    "microchip",
                    "qrcode",
                    "shield alternate",
                    "terminal",
                    "user secret",
                    "window close",
                    "window close outline",
                    "window maximize",
                    "window maximize outline",
                    "window minimize",
                    "window minimize outline",
                    "window restore",
                    "window restore outline",
                    "at",
                    "bell",
                    "bell outline",
                    "bell slash",
                    "bell slash outline",
                    "comment",
                    "comment outline",
                    "comment alternate",
                    "comment alternate outline",
                    "comments",
                    "comments outline",
                    "inbox",
                    "language",
                    "mobile",
                    "mobile alternate",
                    "paper plane",
                    "paper plane outline",
                    "wifi",
                    "desktop",
                    "hdd",
                    "hdd outline",
                    "laptop",
                    "plug",
                    "power off",
                    "print",
                    "server",
                    "tablet",
                    "tablet alternate",
                    "tv",
                    "dollar sign",
                    "euro sign",
                    "lira sign",
                    "money bill alternate",
                    "money bill alternate outline",
                    "pound sign",
                    "ruble sign",
                    "rupee sign",
                    "shekel sign",
                    "won sign",
                    "yen sign",
                    "calendar check",
                    "calendar check outline",
                    "calendar minus",
                    "calendar minus outline",
                    "calendar plus",
                    "calendar plus outline",
                    "calendar times",
                    "calendar times outline",
                    "clock",
                    "clock outline",
                    "hourglass",
                    "hourglass outline",
                    "hourglass end",
                    "hourglass half",
                    "hourglass start",
                    "stopwatch",
                    "adjust",
                    "clone",
                    "clone outline",
                    "crop",
                    "crosshairs",
                    "eye",
                    "eye dropper",
                    "eye slash",
                    "eye slash outline",
                    "object group",
                    "object group outline",
                    "object ungroup",
                    "object ungroup outline",
                    "paint brush",
                    "tint",
                    "align center",
                    "align justify",
                    "align left",
                    "align right",
                    "bold",
                    "font",
                    "heading",
                    "i cursor",
                    "indent",
                    "italic",
                    "linkify",
                    "list",
                    "list alternate",
                    "list alternate outline",
                    "list ol",
                    "list ul",
                    "outdent",
                    "paragraph",
                    "quote left",
                    "quote right",
                    "strikethrough",
                    "subscript",
                    "superscript",
                    "th",
                    "th large",
                    "th list",
                    "trash",
                    "trash alternate",
                    "trash alternate outline",
                    "underline",
                    "unlink",
                    "file archive",
                    "file archive outline",
                    "file excel",
                    "file excel outline",
                    "file image",
                    "file image outline",
                    "file pdf",
                    "file pdf outline",
                    "file powerpoint",
                    "file powerpoint outline",
                    "file word",
                    "file word outline",
                    "genderless",
                    "mars",
                    "mars double",
                    "mars stroke",
                    "mars stroke horizontal",
                    "mars stroke vertical",
                    "mercury",
                    "neuter",
                    "transgender",
                    "transgender alternate",
                    "venus",
                    "venus double",
                    "venus mars",
                    "hand lizard",
                    "hand lizard outline",
                    "hand paper",
                    "hand paper outline",
                    "hand peace",
                    "hand peace outline",
                    "hand rock",
                    "hand rock outline",
                    "hand scissors",
                    "hand scissors outline",
                    "hand spock",
                    "hand spock outline",
                    "handshake",
                    "handshake outline",
                    "thumbs down",
                    "thumbs down outline",
                    "thumbs up",
                    "thumbs up outline",
                    "ambulance",
                    "h square",
                    "heart",
                    "heart outline",
                    "heartbeat",
                    "hospital",
                    "hospital outline",
                    "medkit",
                    "plus square",
                    "plus square outline",
                    "stethoscope",
                    "user md",
                    "bolt",
                    "camera",
                    "camera retro",
                    "id badge",
                    "id badge outline",
                    "id card",
                    "id card outline",
                    "image",
                    "image outline",
                    "images",
                    "images outline",
                    "sliders horizontal",
                    "ban",
                    "bars",
                    "beer",
                    "check",
                    "check circle",
                    "check circle outline",
                    "check square",
                    "check square outline",
                    "cloud",
                    "cog",
                    "cogs",
                    "database",
                    "dot circle",
                    "dot circle outline",
                    "ellipsis horizontal",
                    "ellipsis vertical",
                    "exclamation",
                    "exclamation circle",
                    "exclamation triangle",
                    "flag",
                    "flag outline",
                    "flag checkered",
                    "frown",
                    "frown outline",
                    "hashtag",
                    "home",
                    "info",
                    "info circle",
                    "magic",
                    "meh",
                    "meh outline",
                    "minus",
                    "minus circle",
                    "minus square",
                    "minus square outline",
                    "plus",
                    "plus circle",
                    "question",
                    "search",
                    "search minus",
                    "search plus",
                    "share alternate",
                    "share alternate square",
                    "signal",
                    "smile",
                    "smile outline",
                    "star",
                    "star outline",
                    "star half",
                    "star half outline",
                    "times",
                    "times circle",
                    "times circle outline",
                    "toggle off",
                    "toggle on",
                    "trophy",
                    "user",
                    "user outline",
                    "user circle",
                    "user circle outline",
                    "box",
                    "boxes",
                    "clipboard check",
                    "clipboard list",
                    "dolly",
                    "dolly flatbed",
                    "pallet",
                    "shipping fast",
                    "truck",
                    "warehouse",
                    "anchor",
                    "bed",
                    "bicycle",
                    "binoculars",
                    "bomb",
                    "bookmark",
                    "bookmark outline",
                    "car",
                    "fighter jet",
                    "fire",
                    "flask",
                    "gamepad",
                    "gavel",
                    "gift",
                    "glass martini",
                    "graduation cap",
                    "key",
                    "leaf",
                    "lemon",
                    "lemon outline",
                    "life ring",
                    "life ring outline",
                    "lightbulb",
                    "lightbulb outline",
                    "magnet",
                    "male",
                    "map",
                    "map outline",
                    "map marker",
                    "map marker alternate",
                    "map pin",
                    "map signs",
                    "motorcycle",
                    "newspaper",
                    "newspaper outline",
                    "paw",
                    "plane",
                    "road",
                    "rocket",
                    "ship",
                    "shopping bag",
                    "shopping basket",
                    "shopping cart",
                    "shower",
                    "street view",
                    "subway",
                    "taxi",
                    "ticket alternate",
                    "train",
                    "tree",
                    "umbrella",
                    "university",
                    "utensil spoon",
                    "utensils",
                    "wrench",
                    "band aid",
                    "dna",
                    "first aid",
                    "hospital symbol",
                    "pills",
                    "syringe",
                    "thermometer",
                    "weight",
                    "bus",
                    "cube",
                    "cubes",
                    "futbol",
                    "futbol outline",
                    "gem",
                    "gem outline",
                    "lock",
                    "lock open",
                    "moon",
                    "moon outline",
                    "puzzle piece",
                    "snowflake",
                    "snowflake outline",
                    "space shuttle",
                    "sun",
                    "sun outline",
                    "tachometer alternate",
                    "unlock",
                    "unlock alternate",
                    "cart plus",
                    "credit card",
                    "credit card outline",
                    "square",
                    "square outline",
                    "asterisk",
                    "circle notch",
                    "spinner",
                    "baseball ball",
                    "basketball ball",
                    "bowling ball",
                    "football ball",
                    "golf ball",
                    "hockey puck",
                    "quidditch",
                    "table tennis",
                    "volleyball ball",
                    "battery empty",
                    "battery full",
                    "battery half",
                    "battery quarter",
                    "battery three quarters",
                    "sign in alternate",
                    "sign out alternate",
                    "thermometer empty",
                    "thermometer full",
                    "thermometer half",
                    "thermometer quarter",
                    "thermometer three quarters",
                    "child",
                    "female",
                    "user plus",
                    "user times",
                    "users",
                    "500px",
                    "accessible",
                    "accusoft",
                    "adn",
                    "adversal",
                    "affiliatetheme",
                    "algolia",
                    "amazon",
                    "amazon pay",
                    "amilia",
                    "android",
                    "angellist",
                    "angrycreative",
                    "angular",
                    "app store",
                    "app store ios",
                    "apper",
                    "apple",
                    "apple pay",
                    "asymmetrik",
                    "audible",
                    "autoprefixer",
                    "avianex",
                    "aviato",
                    "aws",
                    "bandcamp",
                    "behance",
                    "behance square",
                    "bimobject",
                    "bitbucket",
                    "bitcoin",
                    "bity",
                    "black tie",
                    "blackberry",
                    "blogger",
                    "blogger b",
                    "bluetooth",
                    "bluetooth b",
                    "btc",
                    "buromobelexperte",
                    "buysellads",
                    "cc amazon pay",
                    "cc amex",
                    "cc apple pay",
                    "cc diners club",
                    "cc discover",
                    "cc jcb",
                    "cc mastercard",
                    "cc paypal",
                    "cc stripe",
                    "cc visa",
                    "centercode",
                    "chrome",
                    "cloudscale",
                    "cloudsmith",
                    "cloudversify",
                    "codepen",
                    "codiepie",
                    "connectdevelop",
                    "contao",
                    "cpanel",
                    "creative commons",
                    "css3",
                    "css3 alternate",
                    "cuttlefish",
                    "d and d",
                    "dashcube",
                    "delicious",
                    "deploydog",
                    "deskpro",
                    "deviantart",
                    "digg",
                    "digital ocean",
                    "discord",
                    "discourse",
                    "dochub",
                    "docker",
                    "draft2digital",
                    "dribbble",
                    "dribbble square",
                    "dropbox",
                    "drupal",
                    "dyalog",
                    "earlybirds",
                    "edge",
                    "elementor",
                    "ember",
                    "empire",
                    "envira",
                    "erlang",
                    "ethereum",
                    "etsy",
                    "expeditedssl",
                    "facebook",
                    "facebook f",
                    "facebook messenger",
                    "facebook square",
                    "firefox",
                    "first order",
                    "firstdraft",
                    "flickr",
                    "flipboard",
                    "fly",
                    "font awesome",
                    "font awesome alternate",
                    "font awesome flag",
                    "fonticons",
                    "fonticons fi",
                    "fort awesome",
                    "fort awesome alternate",
                    "forumbee",
                    "foursquare",
                    "free code camp",
                    "freebsd",
                    "get pocket",
                    "gg",
                    "gg circle",
                    "git",
                    "git square",
                    "github",
                    "github alternate",
                    "github square",
                    "gitkraken",
                    "gitlab",
                    "gitter",
                    "glide",
                    "glide g",
                    "gofore",
                    "goodreads",
                    "goodreads g",
                    "google",
                    "google drive",
                    "google play",
                    "google plus",
                    "google plus g",
                    "google plus square",
                    "google wallet",
                    "gratipay",
                    "grav",
                    "gripfire",
                    "grunt",
                    "gulp",
                    "hacker news",
                    "hacker news square",
                    "hips",
                    "hire a helper",
                    "hooli",
                    "hotjar",
                    "houzz",
                    "html5",
                    "hubspot",
                    "imdb",
                    "instagram",
                    "internet explorer",
                    "ioxhost",
                    "itunes",
                    "itunes note",
                    "jenkins",
                    "joget",
                    "joomla",
                    "js",
                    "js square",
                    "jsfiddle",
                    "keycdn",
                    "kickstarter",
                    "kickstarter k",
                    "korvue",
                    "laravel",
                    "lastfm",
                    "lastfm square",
                    "leanpub",
                    "less",
                    "linechat",
                    "linkedin",
                    "linkedin alternate",
                    "linode",
                    "linux",
                    "lyft",
                    "magento",
                    "maxcdn",
                    "medapps",
                    "medium",
                    "medium m",
                    "medrt",
                    "meetup",
                    "microsoft",
                    "mix",
                    "mixcloud",
                    "mizuni",
                    "modx",
                    "monero",
                    "napster",
                    "nintendo switch",
                    "node",
                    "node js",
                    "npm",
                    "ns8",
                    "nutritionix",
                    "odnoklassniki",
                    "odnoklassniki square",
                    "opencart",
                    "openid",
                    "opera",
                    "optin monster",
                    "osi",
                    "page4",
                    "pagelines",
                    "palfed",
                    "patreon",
                    "paypal",
                    "periscope",
                    "phabricator",
                    "phoenix framework",
                    "php",
                    "pied piper",
                    "pied piper alternate",
                    "pied piper pp",
                    "pinterest",
                    "pinterest p",
                    "pinterest square",
                    "playstation",
                    "product hunt",
                    "pushed",
                    "python",
                    "qq",
                    "quinscape",
                    "quora",
                    "ravelry",
                    "react",
                    "rebel",
                    "redriver",
                    "reddit",
                    "reddit alien",
                    "reddit square",
                    "rendact",
                    "renren",
                    "replyd",
                    "resolving",
                    "rocketchat",
                    "rockrms",
                    "safari",
                    "sass",
                    "schlix",
                    "scribd",
                    "searchengin",
                    "sellcast",
                    "sellsy",
                    "servicestack",
                    "shirtsinbulk",
                    "simplybuilt",
                    "sistrix",
                    "skyatlas",
                    "skype",
                    "slack",
                    "slack hash",
                    "slideshare",
                    "snapchat",
                    "snapchat ghost",
                    "snapchat square",
                    "soundcloud",
                    "speakap",
                    "spotify",
                    "stack exchange",
                    "stack overflow",
                    "staylinked",
                    "steam",
                    "steam square",
                    "steam symbol",
                    "sticker mule",
                    "strava",
                    "stripe",
                    "stripe s",
                    "studiovinari",
                    "stumbleupon",
                    "stumbleupon circle",
                    "superpowers",
                    "supple",
                    "telegram",
                    "telegram plane",
                    "tencent weibo",
                    "themeisle",
                    "trello",
                    "tripadvisor",
                    "tumblr",
                    "tumblr square",
                    "twitch",
                    "twitter",
                    "twitter square",
                    "typo3",
                    "uber",
                    "uikit",
                    "uniregistry",
                    "untappd",
                    "usb",
                    "ussunnah",
                    "vaadin",
                    "viacoin",
                    "viadeo",
                    "viadeo square",
                    "viber",
                    "vimeo",
                    "vimeo square",
                    "vimeo v",
                    "vine",
                    "vk",
                    "vnv",
                    "vuejs",
                    "wechat",
                    "weibo",
                    "weixin",
                    "whatsapp",
                    "whatsapp square",
                    "whmcs",
                    "wikipedia w",
                    "windows",
                    "wordpress",
                    "wordpress simple",
                    "wpbeginner",
                    "wpexplorer",
                    "wpforms",
                    "xbox",
                    "xing",
                    "xing square",
                    "y combinator",
                    "yahoo",
                    "yandex",
                    "yandex international",
                    "yelp",
                    "yoast",
                    "youtube",
                    "youtube square",
                    "chess rock",
                    "ordered list",
                    "unordered list",
                    "user doctor",
                    "shield",
                    "puzzle",
                    "add circle",
                    "add square",
                    "add to calendar",
                    "add to cart",
                    "add user",
                    "add",
                    "alarm mute",
                    "alarm",
                    "ald",
                    "als",
                    "announcement",
                    "area chart",
                    "area graph",
                    "arrow down cart",
                    "asexual",
                    "asl interpreting",
                    "asl",
                    "assistive listening devices",
                    "attach",
                    "attention",
                    "balance",
                    "bar",
                    "bathtub",
                    "battery four",
                    "battery high",
                    "battery low",
                    "battery one",
                    "battery three",
                    "battery two",
                    "battery zero",
                    "birthday",
                    "block layout",
                    "bluetooth alternative",
                    "broken chain",
                    "browser",
                    "call square",
                    "call",
                    "cancel",
                    "cart",
                    "cc",
                    "chain",
                    "chat",
                    "checked calendar",
                    "checkmark",
                    "circle notched",
                    "close",
                    "cny",
                    "cocktail",
                    "commenting",
                    "computer",
                    "configure",
                    "content",
                    "deafness",
                    "delete calendar",
                    "delete",
                    "detective",
                    "discussions",
                    "doctor",
                    "dollar",
                    "dont",
                    "drivers license",
                    "dropdown",
                    "emergency",
                    "envira gallery",
                    "erase",
                    "eur",
                    "euro",
                    "eyedropper",
                    "factory",
                    "favorite",
                    "feed",
                    "female homosexual",
                    "file text",
                    "file text outline",
                    "find",
                    "fork",
                    "game",
                    "gay",
                    "gbp",
                    "google plus circle",
                    "google plus official",
                    "grab",
                    "graduation",
                    "grid layout",
                    "group",
                    "h",
                    "hand victory",
                    "handicap",
                    "hard of hearing",
                    "header",
                    "help circle",
                    "help",
                    "heterosexual",
                    "hide",
                    "hotel",
                    "hourglass four",
                    "hourglass full",
                    "hourglass one",
                    "hourglass three",
                    "hourglass two",
                    "idea",
                    "ils",
                    "in cart",
                    "inr",
                    "intergender",
                    "intersex",
                    "jpy",
                    "krw",
                    "lab",
                    "law",
                    "legal",
                    "lesbian",
                    "lightning",
                    "like",
                    "line graph",
                    "linkedin square",
                    "lira",
                    "list layout",
                    "magnify",
                    "mail forward",
                    "mail square",
                    "mail",
                    "male homosexual",
                    "man",
                    "marker",
                    "mars alternate",
                    "mars horizontal",
                    "mars vertical",
                    "microsoft edge",
                    "military",
                    "ms edge",
                    "mute",
                    "new pied piper",
                    "non binary transgender",
                    "numbered list",
                    "options",
                    "other gender horizontal",
                    "other gender vertical",
                    "other gender",
                    "payment",
                    "paypal card",
                    "pencil square",
                    "photo",
                    "picture",
                    "pie chart",
                    "pie graph",
                    "pied piper hat",
                    "pin",
                    "plus cart",
                    "point",
                    "pointing down",
                    "pointing left",
                    "pointing right",
                    "pointing up",
                    "pound",
                    "power cord",
                    "power",
                    "privacy",
                    "r circle",
                    "rain",
                    "record",
                    "refresh",
                    "remove circle",
                    "remove from calendar",
                    "remove user",
                    "remove",
                    "repeat",
                    "rmb",
                    "rouble",
                    "rub",
                    "ruble",
                    "rupee",
                    "s15",
                    "selected radio",
                    "send",
                    "setting",
                    "settings",
                    "shekel",
                    "sheqel",
                    "shipping",
                    "shop",
                    "shuffle",
                    "shutdown",
                    "sidebar",
                    "signing",
                    "signup",
                    "sliders",
                    "soccer",
                    "sort alphabet ascending",
                    "sort alphabet descending",
                    "sort ascending",
                    "sort content ascending",
                    "sort content descending",
                    "sort descending",
                    "sort numeric ascending",
                    "sort numeric descending",
                    "sound",
                    "spy",
                    "stripe card",
                    "student",
                    "talk",
                    "target",
                    "teletype",
                    "television",
                    "text cursor",
                    "text telephone",
                    "theme",
                    "thumb tack",
                    "time",
                    "tm",
                    "toggle down",
                    "toggle left",
                    "toggle right",
                    "toggle up",
                    "translate",
                    "travel",
                    "treatment",
                    "triangle down",
                    "triangle left",
                    "triangle right",
                    "triangle up",
                    "try",
                    "unhide",
                    "unlinkify",
                    "unmute",
                    "usd",
                    "user cancel",
                    "user close",
                    "user delete",
                    "user x",
                    "vcard",
                    "video camera",
                    "video play",
                    "volume control phone",
                    "wait",
                    "warning circle",
                    "warning sign",
                    "warning",
                    "wi-fi",
                    "winner",
                    "wizard",
                    "woman",
                    "won",
                    "wordpress beginner",
                    "wordpress forms",
                    "world",
                    "write square",
                    "x",
                    "yen",
                    "zip",
                    "zoom in",
                    "zoom out",
                    "zoom",
                    "bitbucket square",
                    "checkmark box",
                    "circle thin",
                    "compose",
                    "conversation",
                    "credit card alternative",
                    "currency",
                    "dashboard",
                    "diamond",
                    "disk",
                    "external share",
                    "external square",
                    "external",
                    "facebook official",
                    "food",
                    "hourglass zero",
                    "level down",
                    "level up",
                    "log out",
                    "meanpath",
                    "money",
                    "move",
                    "pencil",
                    "protect",
                    "radio",
                    "remove bookmark",
                    "resize horizontal",
                    "resize vertical",
                    "sign in",
                    "sign out",
                    "spoon",
                    "star half empty",
                    "star half full",
                    "ticket",
                    "times rectangle",
                    "write"
                  ]
                },
                "type": { "type": "string" },
                "restartPolicy": {
                  "type": "string",
                  "description": "Restart policy"
                },
                "desiredStatus": {
                  "type": "string",
                  "description": "Desired status",
                  "enum": ["stopped", "running"]
                },
                "registryType": {
                  "type": "string",
                  "description": "Registry type",
                  "enum": ["public", "private"]
                },
                "category": {
                  "type": "string",
                  "description": "Container categories",
                  "enum": [
                    "Receiver",
                    "Connectivity",
                    "Data Acquisition",
                    "IT/Cloud Connectors",
                    "Services",
                    "Applications"
                  ]
                },
                "settingsPageId": {
                  "type": "string",
                  "description": "Settings page",
                  "enum": [
                    "gatewayTelemetry",
                    "networkTopology",
                    "opcuaPublisher",
                    "ainConnector",
                    "netFieldProxy",
                    "netFieldAppPlatformConnector"
                  ]
                },
                "shortDescription": {
                  "type": "string",
                  "description": "Short description, max(60)",
                  "maxLength": 60
                },
                "description": {
                  "type": "string",
                  "description": "Description, max(3000)",
                  "maxLength": 3000
                },
                "credentials": {
                  "type": "object",
                  "properties": {
                    "address": { "type": "string" },
                    "username": { "type": "string" }
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.500Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.500Z"
                },
                "sharedWithOrganisations": {
                  "type": "array",
                  "x-constraint": { "unique": "id" },
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "number" },
                      "name": { "type": "string" }
                    }
                  }
                },
                "versions": {
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Random uuid v4.",
                        "default": "7adb258e-3ee7-4299-bcb9-513fab03f7d4",
                        "x-format": { "guid": { "version": "uuidv4" } }
                      },
                      "version": {
                        "type": "string",
                        "description": "Version name"
                      },
                      "useGlobalCredentials": {
                        "type": "boolean",
                        "description": "Use global credentials"
                      },
                      "releaseNotes": {
                        "type": "string",
                        "description": "Release notes"
                      },
                      "imageUri": {
                        "type": "string",
                        "description": "Image URI"
                      },
                      "registryType": {
                        "type": "string",
                        "description": "Registry type",
                        "enum": ["public", "private"]
                      },
                      "credentials": {
                        "type": "object",
                        "properties": {
                          "address": { "type": "string" },
                          "username": { "type": "string" }
                        }
                      },
                      "processorArchitecture": {
                        "type": "string",
                        "description": "Processor architecture",
                        "enum": [
                          "Linux-X86",
                          "Linux-X64",
                          "Linux-ARM32V7",
                          "Linux-ARM64V8",
                          "All"
                        ]
                      },
                      "containerCreateOptions": {
                        "type": "object",
                        "description": "See latest Docker documentation",
                        "x-meta": { "swaggerType": "object" },
                        "properties": {
                          "Hostname": { "type": "string" },
                          "Domainname": { "type": "string" },
                          "User": { "type": "string" },
                          "AttachStdin": { "type": "boolean" },
                          "AttachStdout": { "type": "boolean" },
                          "AttachStderr": { "type": "boolean" },
                          "ExposedPorts": {
                            "type": "object",
                            "properties": { "string": { "type": "object" } }
                          },
                          "Tty": { "type": "boolean" },
                          "OpenStdin": { "type": "boolean" },
                          "StdinOnce": { "type": "boolean" },
                          "Env": {
                            "type": "string",
                            "x-alternatives": [
                              { "type": "string" },
                              { "type": "array", "items": { "type": "string" } }
                            ]
                          },
                          "Cmd": {
                            "type": "string",
                            "x-alternatives": [
                              { "type": "string" },
                              { "type": "array", "items": { "type": "string" } }
                            ]
                          },
                          "Healthcheck": {
                            "type": "object",
                            "properties": {
                              "Test": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "Interval": {
                                "type": "string",
                                "enum": [0],
                                "x-alternatives": [
                                  { "type": "string", "enum": [0] },
                                  { "type": "integer", "minimum": 1000000 }
                                ]
                              },
                              "Timeout": {
                                "type": "string",
                                "enum": [0],
                                "x-alternatives": [
                                  { "type": "string", "enum": [0] },
                                  { "type": "integer", "minimum": 1000000 }
                                ]
                              },
                              "Retries": { "type": "integer", "minimum": 0 },
                              "StartPeriod": {
                                "type": "string",
                                "enum": [0],
                                "x-alternatives": [
                                  { "type": "string", "enum": [0] },
                                  { "type": "integer", "minimum": 1000000 }
                                ]
                              }
                            }
                          },
                          "ArgsEscaped": { "type": "boolean" },
                          "Image": { "type": "string" },
                          "Volumes": {
                            "type": "object",
                            "properties": { "string": { "type": "object" } }
                          },
                          "WorkingDir": { "type": "string" },
                          "Entrypoint": {
                            "x-alternatives": [
                              {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              { "type": "string" }
                            ],
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "NetworkDisabled": { "type": "boolean" },
                          "MacAddress": {
                            "type": "string",
                            "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$"
                          },
                          "OnBuild": {
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "Labels": {
                            "type": "object",
                            "properties": { "string": { "type": "string" } }
                          },
                          "StopSignal": { "type": "string" },
                          "StopTimeout": { "type": "integer", "minimum": 0 },
                          "Shell": {
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "HostConfig": {
                            "type": "object",
                            "properties": {
                              "MaximumIOps": { "type": "integer" },
                              "MaximumIOBps": { "type": "integer" },
                              "CpuShares": { "type": "integer" },
                              "Memory": { "type": "integer" },
                              "CgroupParent": { "type": "string" },
                              "BlkioWeight": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 1000
                              },
                              "BlkioWeightDevice": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Weight": {
                                      "type": "integer",
                                      "minimum": 0
                                    }
                                  }
                                }
                              },
                              "BlkioDeviceReadBps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Rate": { "type": "integer", "minimum": 0 }
                                  }
                                }
                              },
                              "BlkioDeviceWriteBps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Rate": { "type": "integer", "minimum": 0 }
                                  }
                                }
                              },
                              "BlkioDeviceReadIOps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Rate": { "type": "integer", "minimum": 0 }
                                  }
                                }
                              },
                              "BlkioDeviceWriteIOps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Rate": { "type": "integer", "minimum": 0 }
                                  }
                                }
                              },
                              "CpuPeriod": { "type": "integer" },
                              "CpuQuota": { "type": "integer" },
                              "CpuRealtimePeriod": { "type": "integer" },
                              "CpuRealtimeRuntime": { "type": "integer" },
                              "CpusetCpus": { "type": "string" },
                              "CpusetMems": { "type": "string" },
                              "Devices": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "PathOnHost": { "type": "string" },
                                    "PathInContainer": { "type": "string" },
                                    "CgroupPermissions": { "type": "string" }
                                  }
                                }
                              },
                              "DeviceCgroupRules": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "DiskQuota": { "type": "integer" },
                              "KernelMemory": { "type": "integer" },
                              "MemoryReservation": { "type": "integer" },
                              "MemorySwap": { "type": "integer" },
                              "MemorySwappiness": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 100
                              },
                              "NanoCPUs": { "type": "integer" },
                              "OomKillDisable": { "type": "boolean" },
                              "PidsLimit": { "type": "integer" },
                              "Ulimits": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Name": { "type": "string" },
                                    "Soft": { "type": "integer" },
                                    "Hard": { "type": "integer" }
                                  }
                                }
                              },
                              "CpuCount": { "type": "integer" },
                              "CpuPercent": { "type": "integer" },
                              "IOMaximumIOps": { "type": "integer" },
                              "IOMaximumBandwidth": { "type": "integer" },
                              "Binds": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": ".+:.+(:.+)?"
                                }
                              },
                              "ContainerIDFile": { "type": "string" },
                              "LogConfig": {
                                "type": "object",
                                "properties": {
                                  "Type": {
                                    "type": "string",
                                    "enum": [
                                      "json-file",
                                      "syslog",
                                      "journald",
                                      "gelf",
                                      "fluentd",
                                      "awslogs",
                                      "splunk",
                                      "etwlogs",
                                      "none"
                                    ]
                                  },
                                  "Config": {
                                    "type": "object",
                                    "properties": {
                                      "string": { "type": "string" }
                                    }
                                  }
                                }
                              },
                              "NetworkMode": {
                                "type": "string",
                                "enum": ["bridge", "host", "none"],
                                "x-alternatives": [
                                  {
                                    "type": "string",
                                    "enum": ["bridge", "host", "none"]
                                  },
                                  {
                                    "type": "string",
                                    "pattern": "^container:.*$"
                                  }
                                ]
                              },
                              "PortBindings": {
                                "type": "object",
                                "properties": {
                                  "string": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "HostIp": { "type": "string" },
                                        "HostPort": { "type": "string" }
                                      }
                                    }
                                  }
                                }
                              },
                              "RestartPolicy": {
                                "type": "object",
                                "properties": {
                                  "Name": {
                                    "type": "string",
                                    "enum": [
                                      "always",
                                      "unless-stopped",
                                      "on-failure"
                                    ]
                                  },
                                  "MaximumRetryCount": { "type": "integer" }
                                }
                              },
                              "AutoRemove": { "type": "boolean" },
                              "VolumeDriver": { "type": "string" },
                              "VolumesFrom": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": "^.+(:(ro|rw))?$"
                                }
                              },
                              "Mounts": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Target": { "type": "string" },
                                    "Source": { "type": "string" },
                                    "Type": {
                                      "type": "string",
                                      "enum": ["bind", "volume", "tmpfs"]
                                    },
                                    "ReadOnly": { "type": "boolean" },
                                    "Consistency": { "type": "string" },
                                    "BindOptions": {
                                      "type": "object",
                                      "properties": {
                                        "Propagation": {
                                          "type": "string",
                                          "enum": [
                                            "private",
                                            "rprivate",
                                            "shared",
                                            "rshared",
                                            "slave",
                                            "rslave"
                                          ]
                                        }
                                      }
                                    },
                                    "VolumeOptions": {
                                      "type": "object",
                                      "properties": {
                                        "NoCopy": { "type": "boolean" },
                                        "Labels": {
                                          "type": "object",
                                          "properties": {
                                            "string": { "type": "string" }
                                          }
                                        },
                                        "DriverConfig": {
                                          "type": "object",
                                          "properties": {
                                            "Name": { "type": "string" },
                                            "Options": {
                                              "type": "object",
                                              "properties": {
                                                "string": { "type": "string" }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "TmpfsOptions": {
                                      "type": "object",
                                      "properties": {
                                        "SizeBytes": { "type": "integer" },
                                        "Mode": { "type": "integer" }
                                      }
                                    }
                                  }
                                }
                              },
                              "CapAdd": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "CapDrop": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "Dns": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "DnsOptions": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "DnsSearch": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "ExtraHosts": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": "^.+:.+$"
                                }
                              },
                              "GroupAdd": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "IpcMode": { "type": "string" },
                              "Cgroup": { "type": "string" },
                              "Links": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": "^.+:.+$"
                                }
                              },
                              "OomScoreAdj": { "type": "integer" },
                              "PidMode": {
                                "type": "string",
                                "pattern": "^.+(:.+)?$"
                              },
                              "Privileged": { "type": "boolean" },
                              "PublishAllPorts": { "type": "boolean" },
                              "ReadonlyRootfs": { "type": "boolean" },
                              "SecurityOpt": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "StorageOpt": {
                                "type": "object",
                                "properties": { "string": { "type": "string" } }
                              },
                              "Tmpfs": {
                                "type": "object",
                                "properties": { "string": { "type": "string" } }
                              },
                              "UTSMode": { "type": "string" },
                              "UsernsMode": { "type": "string" },
                              "ShmSize": { "type": "integer", "minimum": 0 },
                              "Sysctls": {
                                "type": "object",
                                "properties": { "string": { "type": "string" } }
                              },
                              "Runtime": { "type": "string" },
                              "ConsoleSize": {
                                "type": "array",
                                "x-constraint": { "length": 2 },
                                "items": { "type": "integer", "minimum": 0 }
                              },
                              "Isolation": {
                                "type": "string",
                                "enum": ["default", "process", "hyperv"]
                              }
                            }
                          },
                          "NetworkingConfig": {
                            "type": "object",
                            "properties": {
                              "EndpointsConfig": {
                                "type": "object",
                                "properties": {
                                  "string": {
                                    "type": "object",
                                    "properties": {
                                      "IPAMConfig": {
                                        "type": "object",
                                        "properties": {
                                          "IPv4Address": {
                                            "type": "string",
                                            "x-format": {
                                              "ip": {
                                                "cidr": "optional",
                                                "version": ["ipv4"]
                                              }
                                            }
                                          },
                                          "IPv6Address": {
                                            "type": "string",
                                            "x-format": {
                                              "ip": {
                                                "cidr": "optional",
                                                "version": ["ipv6"]
                                              }
                                            }
                                          },
                                          "LinkLocalIPs": {
                                            "type": "array",
                                            "items": { "type": "string" }
                                          }
                                        }
                                      },
                                      "Links": {
                                        "type": "array",
                                        "items": { "type": "string" }
                                      },
                                      "Aliases": {
                                        "type": "array",
                                        "items": { "type": "string" }
                                      },
                                      "NetworkId": { "type": "string" },
                                      "EndpointId": { "type": "string" },
                                      "Gateway": { "type": "string" },
                                      "IPAddress": {
                                        "type": "string",
                                        "x-format": {
                                          "ip": {
                                            "cidr": "optional",
                                            "version": ["ipv4"]
                                          }
                                        }
                                      },
                                      "IPPrefixLen": { "type": "integer" },
                                      "IPv6Gateway": { "type": "string" },
                                      "GlobalIPv6Address": {
                                        "type": "string",
                                        "x-format": {
                                          "ip": {
                                            "cidr": "optional",
                                            "version": ["ipv6"]
                                          }
                                        }
                                      },
                                      "GlobalIPv6PrefixLen": {
                                        "type": "integer"
                                      },
                                      "MacAddress": { "type": "string" }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "containerTwinDesiredOptions": { "type": "object" },
                      "environmentVariables": {
                        "type": "array",
                        "description": "An array of object containing environment variables",
                        "x-meta": { "swaggerType": "array" },
                        "x-constraint": { "unique": "key" },
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": { "type": "string" },
                            "value": { "type": "string" }
                          },
                          "required": ["key", "value"]
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "createdAt",
                        "default": "2021-05-21T06:02:07.766Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "updatedAt",
                        "default": "2021-05-21T06:02:07.766Z"
                      }
                    }
                  }
                },
                "mqttTopics": {
                  "type": "array",
                  "description": "MQTT topics",
                  "x-constraint": { "unique": true },
                  "items": { "type": "string" }
                }
              }
            },
            "description": "Container modified"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Container(s) not found / Organisation(s) not found"
          }
        }
      },
      "delete": {
        "summary": "Delete container",
        "operationId": "deleteContainersContainerid",
        "description": "containers<br/><br/>deleteContainers",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / uuid_v4",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "name": "containerId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["containers"],
        "security": [{ "jwt": [] }],
        "responses": {
          "204": { "description": "Container deleted" },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Container(s) not found"
          }
        }
      }
    },
    "/dashboards/{dashboardId}": {
      "get": {
        "summary": "Get dashboard by id",
        "operationId": "getDashboardsDashboardid",
        "description": "dashboards<br/><br/>viewDashboards",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "dashboardId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["dashboards"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "organisationId": { "type": "number", "minimum": 1 },
                "name": { "type": "string" },
                "description": { "type": "string", "maxLength": 255 },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.172Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.172Z"
                }
              },
              "required": ["id", "organisationId", "name"]
            },
            "description": "Return dashboard"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Dashboard(s) not found"
          }
        }
      },
      "put": {
        "summary": "Update dashboard",
        "operationId": "putDashboardsDashboardid",
        "description": "dashboards<br/><br/>updateDashboards",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "dashboardId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "organisationId": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer, optional",
                  "minimum": 1
                },
                "name": { "type": "string", "maxLength": 255 },
                "description": { "type": "string", "maxLength": 255 }
              }
            }
          }
        ],
        "tags": ["dashboards"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "organisationId": { "type": "number", "minimum": 1 },
                "name": { "type": "string" },
                "description": { "type": "string", "maxLength": 255 },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.172Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.172Z"
                }
              },
              "required": ["id", "organisationId", "name"]
            },
            "description": "Dashboard modified"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Dashboard(s) not found / Organisation(s) not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a dashboard by id",
        "operationId": "deleteDashboardsDashboardid",
        "description": "dashboards<br/><br/>deleteDashboards",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "dashboardId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["dashboards"],
        "security": [{ "jwt": [] }],
        "responses": {
          "204": { "description": "Dashboard deleted" },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Dashboard(s) not found"
          }
        }
      }
    },
    "/devices/status": {
      "get": {
        "summary": "Get device statuses",
        "operationId": "getDevicesStatus",
        "description": "devices<br/><br/>viewDeviceDetails",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "array",
            "x-constraint": { "single": true },
            "items": { "type": "string", "pattern": "^[0-9a-fA-F]{24}$" },
            "collectionFormat": "multi",
            "name": "deviceIds",
            "in": "query"
          }
        ],
        "tags": ["devices"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "x-constraint": { "single": true },
              "items": {
                "type": "object",
                "properties": {
                  "deviceId": {
                    "type": "string",
                    "description": "The id property defines the unique id / objectId",
                    "pattern": "^[0-9a-fA-F]{24}$"
                  },
                  "color": { "type": "string" },
                  "description": { "type": "string" }
                },
                "required": ["deviceId", "color", "description"]
              }
            },
            "description": "Return device list statuses"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device(s) not found"
          }
        }
      }
    },
    "/devices/{deviceId}": {
      "get": {
        "summary": "Get device by id",
        "operationId": "getDevicesDeviceid",
        "description": "devices<br/><br/>viewDeviceDetails",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["devices"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "organisationId": { "type": "number" },
                "organisationName": { "type": "string" },
                "deviceType": {
                  "type": "string",
                  "description": "Device types",
                  "enum": ["standard", "sensorEDGE"]
                },
                "serialNumber": { "type": "string" },
                "activationCode": { "type": "string" },
                "enabled": { "type": "boolean" },
                "onBoarded": { "type": "boolean" },
                "name": { "type": "string" },
                "firmwareVersion": { "type": "string" },
                "modelName": { "type": "string" },
                "status": {
                  "type": "object",
                  "properties": {
                    "color": { "type": "string" },
                    "description": { "type": "string" }
                  },
                  "required": ["color", "description"]
                },
                "geolocation": {
                  "type": "object",
                  "description": "Geolocation",
                  "properties": {
                    "longitude": { "type": "string" },
                    "latitude": { "type": "string" }
                  },
                  "required": ["longitude", "latitude"]
                },
                "timeToLiveSecs": { "type": "number", "default": 120 },
                "proxySettings": {
                  "type": "object",
                  "properties": {
                    "useHttpsProxySettings": {
                      "type": "boolean",
                      "default": false
                    },
                    "noProxy": { "type": "string" },
                    "httpsProxy": {
                      "type": "object",
                      "properties": { "uri": { "type": "string" } }
                    },
                    "useHttpProxySettings": {
                      "type": "boolean",
                      "default": false
                    },
                    "httpProxy": {
                      "type": "object",
                      "properties": { "uri": { "type": "string" } }
                    }
                  }
                },
                "remoteSettings": {
                  "type": "object",
                  "properties": {
                    "host": {
                      "type": "string",
                      "description": "Host where the webserver is runnign"
                    },
                    "httpPort": {
                      "type": "number",
                      "description": "Port where the webserver is listening to"
                    },
                    "services": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "service": {
                            "type": "string",
                            "enum": ["ssh", "rdp", "vnc", "http"]
                          },
                          "edgePort": { "type": "number" },
                          "localPort": { "type": "number" },
                          "forward": { "type": "boolean", "default": false },
                          "destinationIp": {
                            "type": "string",
                            "x-format": {
                              "ip": { "cidr": "forbidden", "version": ["ipv4"] }
                            }
                          },
                          "destinationPort": { "type": "number" }
                        }
                      }
                    }
                  }
                },
                "description": { "type": "string" },
                "tags": { "type": "string" },
                "properties": {
                  "type": "array",
                  "description": "Device properties",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Property name"
                      },
                      "value": {
                        "type": "string",
                        "description": "Property value"
                      }
                    },
                    "required": ["name", "value"]
                  }
                },
                "desiredProperties": {
                  "type": "object",
                  "properties": {
                    "string": {
                      "type": "number",
                      "x-alternatives": [
                        { "type": "number" },
                        { "type": "array", "items": { "type": "string" } },
                        { "type": "string" },
                        { "type": "boolean" },
                        { "type": "string" }
                      ]
                    }
                  }
                },
                "reportedProperties": {
                  "type": "object",
                  "properties": {
                    "string": {
                      "type": "number",
                      "x-alternatives": [
                        { "type": "number" },
                        { "type": "array", "items": { "type": "string" } },
                        { "type": "string" },
                        { "type": "boolean" },
                        { "type": "string" }
                      ]
                    }
                  }
                },
                "equipmentId": { "type": "string" },
                "hardwareInfo": { "type": "object" },
                "upstreamProtocol": {
                  "type": "string",
                  "enum": ["MQTT", "AMQP", "MQTTWS", "AMQPWS"]
                },
                "onBoardedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "onBoardedAt",
                  "default": "2021-05-21T06:02:07.219Z"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.219Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.219Z"
                }
              },
              "required": [
                "id",
                "organisationId",
                "serialNumber",
                "enabled",
                "onBoarded",
                "status"
              ]
            },
            "description": "Return device"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device(s) not found"
          }
        }
      },
      "put": {
        "summary": "Modify a devices data",
        "operationId": "putDevicesDeviceid",
        "description": "devices<br/><br/>updateDevices",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "organisationId": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer, optional",
                  "minimum": 1
                },
                "name": { "type": "string", "description": "Device name" },
                "firmwareVersion": {
                  "type": "string",
                  "description": "Firmware version"
                },
                "modelName": { "type": "string", "description": "Model name" },
                "geolocation": {
                  "type": "object",
                  "description": "Geolocation",
                  "properties": {
                    "longitude": { "type": "string" },
                    "latitude": { "type": "string" }
                  },
                  "required": ["longitude", "latitude"]
                },
                "timeToLiveSecs": {
                  "type": "number",
                  "description": "Time to live in seconds",
                  "minimum": 1
                },
                "proxySettings": {
                  "type": "object",
                  "properties": {
                    "useHttpsProxySettings": { "type": "boolean" },
                    "noProxy": { "type": "string" },
                    "httpsProxy": {
                      "type": "object",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "pattern": "^(http(s)?):(?:\\/\\/(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(\\/(?:[a-z0-9-._~!$&'()*+,;=:@\\/]|%[0-9A-F]{2})*)?|(\\/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@\\/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:\\/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:\\/?@]|%[0-9A-F]{2})*))?$"
                        },
                        "username": { "type": "string" },
                        "password": { "type": "string" }
                      },
                      "required": ["uri"]
                    },
                    "useHttpProxySettings": { "type": "boolean" },
                    "httpProxy": {
                      "type": "object",
                      "properties": {
                        "uri": {
                          "type": "string",
                          "pattern": "^(http):(?:\\/\\/(?:((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*)@)?((?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*)(?::(\\d*))?(\\/(?:[a-z0-9-._~!$&'()*+,;=:@\\/]|%[0-9A-F]{2})*)?|(\\/?(?:[a-z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})+(?:[a-z0-9-._~!$&'()*+,;=:@\\/]|%[0-9A-F]{2})*)?)(?:\\?((?:[a-z0-9-._~!$&'()*+,;=:\\/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-z0-9-._~!$&'()*+,;=:\\/?@]|%[0-9A-F]{2})*))?$"
                        },
                        "username": { "type": "string" },
                        "password": { "type": "string" }
                      },
                      "required": ["uri"]
                    }
                  }
                },
                "remoteSettings": {
                  "type": "object",
                  "properties": {
                    "host": { "type": "string" },
                    "httpPort": { "type": "number" },
                    "services": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "service": {
                            "type": "string",
                            "enum": ["ssh", "rdp", "vnc", "http"]
                          },
                          "edgePort": { "type": "number" },
                          "localPort": { "type": "number" },
                          "forward": { "type": "boolean", "default": false },
                          "destinationIp": {
                            "type": "string",
                            "x-format": {
                              "ip": { "cidr": "forbidden", "version": ["ipv4"] }
                            }
                          },
                          "destinationPort": { "type": "number" }
                        }
                      }
                    }
                  }
                },
                "description": {
                  "type": "string",
                  "description": "Description"
                },
                "tags": { "type": "string", "description": "Tags" },
                "properties": {
                  "type": "array",
                  "description": "Device properties",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Property name"
                      },
                      "value": {
                        "type": "string",
                        "description": "Property value"
                      }
                    },
                    "required": ["name", "value"]
                  }
                },
                "desiredProperties": {
                  "type": "object",
                  "description": "Patch the desired properties of the device twin. Set a key to null to remove it.",
                  "properties": {
                    "string": {
                      "type": "number",
                      "x-alternatives": [
                        { "type": "number" },
                        { "type": "array", "items": { "type": "string" } },
                        { "type": "string" },
                        { "type": "boolean" },
                        { "type": "string" }
                      ]
                    }
                  }
                },
                "upstreamProtocol": {
                  "type": "string",
                  "enum": ["MQTT", "AMQP", "MQTTWS", "AMQPWS"]
                }
              }
            }
          }
        ],
        "tags": ["devices"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "organisationId": { "type": "number" },
                "organisationName": { "type": "string" },
                "deviceType": {
                  "type": "string",
                  "description": "Device types",
                  "enum": ["standard", "sensorEDGE"]
                },
                "serialNumber": { "type": "string" },
                "activationCode": { "type": "string" },
                "enabled": { "type": "boolean" },
                "onBoarded": { "type": "boolean" },
                "name": { "type": "string" },
                "firmwareVersion": { "type": "string" },
                "modelName": { "type": "string" },
                "status": {
                  "type": "object",
                  "properties": {
                    "color": { "type": "string" },
                    "description": { "type": "string" }
                  },
                  "required": ["color", "description"]
                },
                "geolocation": {
                  "type": "object",
                  "description": "Geolocation",
                  "properties": {
                    "longitude": { "type": "string" },
                    "latitude": { "type": "string" }
                  },
                  "required": ["longitude", "latitude"]
                },
                "timeToLiveSecs": { "type": "number", "default": 120 },
                "proxySettings": {
                  "type": "object",
                  "properties": {
                    "useHttpsProxySettings": {
                      "type": "boolean",
                      "default": false
                    },
                    "noProxy": { "type": "string" },
                    "httpsProxy": {
                      "type": "object",
                      "properties": { "uri": { "type": "string" } }
                    },
                    "useHttpProxySettings": {
                      "type": "boolean",
                      "default": false
                    },
                    "httpProxy": {
                      "type": "object",
                      "properties": { "uri": { "type": "string" } }
                    }
                  }
                },
                "remoteSettings": {
                  "type": "object",
                  "properties": {
                    "host": {
                      "type": "string",
                      "description": "Host where the webserver is runnign"
                    },
                    "httpPort": {
                      "type": "number",
                      "description": "Port where the webserver is listening to"
                    },
                    "services": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "service": {
                            "type": "string",
                            "enum": ["ssh", "rdp", "vnc", "http"]
                          },
                          "edgePort": { "type": "number" },
                          "localPort": { "type": "number" },
                          "forward": { "type": "boolean", "default": false },
                          "destinationIp": {
                            "type": "string",
                            "x-format": {
                              "ip": { "cidr": "forbidden", "version": ["ipv4"] }
                            }
                          },
                          "destinationPort": { "type": "number" }
                        }
                      }
                    }
                  }
                },
                "description": { "type": "string" },
                "tags": { "type": "string" },
                "properties": {
                  "type": "array",
                  "description": "Device properties",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Property name"
                      },
                      "value": {
                        "type": "string",
                        "description": "Property value"
                      }
                    },
                    "required": ["name", "value"]
                  }
                },
                "desiredProperties": {
                  "type": "object",
                  "properties": {
                    "string": {
                      "type": "number",
                      "x-alternatives": [
                        { "type": "number" },
                        { "type": "array", "items": { "type": "string" } },
                        { "type": "string" },
                        { "type": "boolean" },
                        { "type": "string" }
                      ]
                    }
                  }
                },
                "reportedProperties": {
                  "type": "object",
                  "properties": {
                    "string": {
                      "type": "number",
                      "x-alternatives": [
                        { "type": "number" },
                        { "type": "array", "items": { "type": "string" } },
                        { "type": "string" },
                        { "type": "boolean" },
                        { "type": "string" }
                      ]
                    }
                  }
                },
                "equipmentId": { "type": "string" },
                "hardwareInfo": { "type": "object" },
                "upstreamProtocol": {
                  "type": "string",
                  "enum": ["MQTT", "AMQP", "MQTTWS", "AMQPWS"]
                },
                "onBoardedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "onBoardedAt",
                  "default": "2021-05-21T06:02:07.219Z"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.219Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.219Z"
                }
              },
              "required": [
                "id",
                "organisationId",
                "serialNumber",
                "enabled",
                "onBoarded",
                "status"
              ]
            },
            "description": "Device modified"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device(s) not found / Organisation(s) not found"
          }
        }
      },
      "delete": {
        "summary": "Delete device by id",
        "operationId": "deleteDevicesDeviceid",
        "description": "devices<br/><br/>deleteDevices",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["devices"],
        "security": [{ "jwt": [] }],
        "responses": {
          "204": { "description": "Device deleted" },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device(s) not found"
          }
        }
      }
    },
    "/edgeos/platforms": {
      "get": {
        "summary": "Get all available edge OS platforms",
        "operationId": "getEdgeosPlatforms",
        "description": "edgeos<br/><br/>viewEdgeos",
        "parameters": [
          {
            "type": "string",
            "description": "Access token",
            "name": "authorization",
            "in": "header",
            "required": true
          }
        ],
        "consumes": ["application/x-www-form-urlencoded"],
        "tags": ["edgeos"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "platforms": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Select platform",
                    "enum": [
                      "NFS-M8-QM-D1-N4",
                      "NIOT-E-TIJCX-GB-RE",
                      "NIOT-E-TPI51-EN-RE",
                      "NIOT-E-VM-EN",
                      "NFS-M8-QM-D2-N16",
                      "NFS-M8-QM-D2-N16/NFLD"
                    ]
                  }
                }
              }
            },
            "description": "EdgeOSPlatforms"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid token"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          }
        }
      }
    },
    "/edgeos/{edgeosId}": {
      "get": {
        "summary": "Get single EdgeOS",
        "operationId": "getEdgeosEdgeosid",
        "description": "edgeos<br/><br/>viewEdgeos",
        "parameters": [
          {
            "type": "string",
            "description": "Access token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "edgeosId",
            "in": "path",
            "required": true
          }
        ],
        "consumes": ["application/x-www-form-urlencoded"],
        "tags": ["edgeos"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "version": {
                  "type": "string",
                  "description": "Version number"
                },
                "name": { "type": "string", "description": "EdgeOS name" },
                "platform": {
                  "type": "string",
                  "description": "Platform",
                  "enum": [
                    "NFS-M8-QM-D1-N4",
                    "NIOT-E-TIJCX-GB-RE",
                    "NIOT-E-TPI51-EN-RE",
                    "NIOT-E-VM-EN",
                    "NFS-M8-QM-D2-N16",
                    "NFS-M8-QM-D2-N16/NFLD"
                  ]
                },
                "type": {
                  "type": "string",
                  "description": "Type",
                  "enum": ["update", "recovery"]
                },
                "metadata": {
                  "type": "object",
                  "properties": {
                    "container": { "type": "string" },
                    "fileName": { "type": "string" },
                    "size": { "type": "number" }
                  },
                  "required": ["container", "fileName", "size"]
                },
                "notes": { "type": "string" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.812Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.812Z"
                },
                "downloadUrl": { "type": "string" }
              },
              "required": ["id", "version", "name", "platform", "type"]
            },
            "description": "EdgeOS"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid token"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "EdgeOS(s) not found"
          }
        }
      },
      "put": {
        "summary": "Update EdgeOS",
        "operationId": "putEdgeosEdgeosid",
        "description": "edgeos<br/><br/>updateEdgeos",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "edgeosId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Version number",
            "name": "version",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "EdgeOS name",
            "name": "name",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Select platform",
            "enum": [
              "NFS-M8-QM-D1-N4",
              "NIOT-E-TIJCX-GB-RE",
              "NIOT-E-TPI51-EN-RE",
              "NIOT-E-VM-EN",
              "NFS-M8-QM-D2-N16",
              "NFS-M8-QM-D2-N16/NFLD"
            ],
            "name": "platform",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "update or recovery",
            "enum": ["update", "recovery"],
            "name": "type",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Notes",
            "name": "notes",
            "in": "formData",
            "required": false
          }
        ],
        "consumes": ["application/x-www-form-urlencoded"],
        "tags": ["edgeos"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "version": {
                  "type": "string",
                  "description": "Version number"
                },
                "name": { "type": "string", "description": "EdgeOS name" },
                "platform": {
                  "type": "string",
                  "description": "Platform",
                  "enum": [
                    "NFS-M8-QM-D1-N4",
                    "NIOT-E-TIJCX-GB-RE",
                    "NIOT-E-TPI51-EN-RE",
                    "NIOT-E-VM-EN",
                    "NFS-M8-QM-D2-N16",
                    "NFS-M8-QM-D2-N16/NFLD"
                  ]
                },
                "type": {
                  "type": "string",
                  "description": "Type",
                  "enum": ["update", "recovery"]
                },
                "metadata": {
                  "type": "object",
                  "properties": {
                    "container": { "type": "string" },
                    "fileName": { "type": "string" },
                    "size": { "type": "number" }
                  },
                  "required": ["container", "fileName", "size"]
                },
                "notes": { "type": "string" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.250Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.250Z"
                }
              },
              "required": ["id", "version", "name", "platform", "type"]
            },
            "description": "EdgeOS updated"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "EdgeOS(s) not found"
          }
        }
      },
      "delete": {
        "summary": "Delete target EdgeOS",
        "operationId": "deleteEdgeosEdgeosid",
        "description": "edgeos<br/><br/>deleteEdgeos",
        "parameters": [
          {
            "type": "string",
            "description": "Access token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "edgeosId",
            "in": "path",
            "required": true
          }
        ],
        "consumes": ["application/x-www-form-urlencoded"],
        "tags": ["edgeos"],
        "security": [{ "jwt": [] }],
        "responses": {
          "204": { "description": "EdgeOS deleted" },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "EdgeOS(s) not found"
          }
        }
      }
    },
    "/groups/{groupId}": {
      "get": {
        "summary": "Get group by id",
        "operationId": "getGroupsGroupid",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "groupId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "min(1) / max(4)",
            "default": 1,
            "minimum": 1,
            "maximum": 4,
            "name": "depth",
            "in": "query"
          }
        ],
        "tags": ["groups"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "description": "Group Name" },
                "groupType": {
                  "type": "string",
                  "description": "Group type devices",
                  "default": "devices",
                  "enum": ["devices", "containers"]
                },
                "id": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer",
                  "minimum": 1
                },
                "organisationId": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer",
                  "minimum": 1
                },
                "parentId": { "type": "number" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.828Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.828Z"
                },
                "children": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "number" },
                      "name": { "type": "string" }
                    },
                    "required": ["id", "name"]
                  }
                },
                "childrenLinks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "target": { "type": "number" },
                      "source": { "type": "number" }
                    },
                    "required": ["target", "source"]
                  }
                }
              },
              "required": [
                "name",
                "groupType",
                "id",
                "organisationId",
                "parentId",
                "createdAt",
                "updatedAt",
                "children",
                "childrenLinks"
              ]
            },
            "description": "Return a group"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Group(s) not found"
          }
        }
      },
      "put": {
        "summary": "Update group",
        "operationId": "putGroupsGroupid",
        "description": "groups<br/><br/>updateGroups",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "groupId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "description": "Group name" },
                "parentId": {
                  "type": "number",
                  "description": "Parent group Id"
                }
              }
            }
          }
        ],
        "tags": ["groups"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "description": "Group Name" },
                "groupType": {
                  "type": "string",
                  "description": "Group type devices",
                  "default": "devices",
                  "enum": ["devices", "containers"]
                },
                "id": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer",
                  "minimum": 1
                },
                "organisationId": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer",
                  "minimum": 1
                },
                "parentId": { "type": "number" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:09.437Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:09.437Z"
                }
              },
              "required": [
                "name",
                "groupType",
                "id",
                "organisationId",
                "parentId",
                "createdAt",
                "updatedAt"
              ]
            },
            "description": "Group updated"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Group(s) not found"
          }
        }
      },
      "delete": {
        "summary": "Delete group by id",
        "operationId": "deleteGroupsGroupid",
        "description": "groups<br/><br/>deleteGroups",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "groupId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["groups"],
        "security": [{ "jwt": [] }],
        "responses": {
          "204": { "description": "Delete group" },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Group(s) not found"
          }
        }
      }
    },
    "/keys/permissions": {
      "get": {
        "summary": "Get the api key data (e.g resources permissions) for given api key",
        "operationId": "getKeysPermissions",
        "description": "keys<br/><br/>getKeys",
        "parameters": [
          {
            "type": "string",
            "description": "Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          }
        ],
        "tags": ["keys"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "owner": {
                  "type": "object",
                  "properties": {
                    "organisation": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The id property defines the unique id of type integer",
                          "minimum": 1
                        },
                        "name": { "type": "string" }
                      },
                      "required": ["id", "name"]
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The id property defines the unique id of type integer",
                          "minimum": 1
                        },
                        "fullName": { "type": "string" }
                      },
                      "required": ["id", "fullName"]
                    }
                  }
                },
                "name": { "type": "string" },
                "type": {
                  "type": "string",
                  "default": "server-side",
                  "enum": ["server-side", "client-side"]
                },
                "key": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "resources": {
                  "type": "array",
                  "description": "Resources and permissions",
                  "minItems": 1,
                  "items": {
                    "type": "object",
                    "properties": {
                      "resource": {
                        "type": "string",
                        "description": "Resource name",
                        "enum": [
                          "roles",
                          "usersAndOrganisations",
                          "devices",
                          "containers",
                          "tenants",
                          "edgeos",
                          "webhooks",
                          "groups",
                          "thirdpartyAppsPts",
                          "dashboards",
                          "keys"
                        ]
                      },
                      "permissions": {
                        "type": "array",
                        "description": "List of resource permissions, min(1), null or empty values are not allowed",
                        "minItems": 1,
                        "items": {
                          "type": "string",
                          "default": "permission.securityLevel"
                        }
                      }
                    },
                    "required": ["resource"]
                  }
                },
                "requestMonthlyLimit": {
                  "type": "number",
                  "minimum": 1,
                  "maximum": 10000
                },
                "totalRequestCount": { "type": "number" },
                "requestCount": { "type": "number" },
                "expiresAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Expiration Date",
                  "default": "2021-05-21T06:02:07.844Z"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.844Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.844Z"
                }
              },
              "required": [
                "id",
                "name",
                "type",
                "key",
                "resources",
                "requestCount"
              ]
            },
            "description": "Return key"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Key(s) not found"
          }
        }
      }
    },
    "/keys/{keyId}": {
      "get": {
        "summary": "Get a key for End-point usage with key authentication strategy and specific scope of usage",
        "operationId": "getKeysKeyid",
        "description": "keys<br/><br/>getKeys",
        "parameters": [
          {
            "type": "string",
            "description": "Access token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "keyId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["keys"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "owner": {
                  "type": "object",
                  "properties": {
                    "organisation": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The id property defines the unique id of type integer",
                          "minimum": 1
                        },
                        "name": { "type": "string" }
                      },
                      "required": ["id", "name"]
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The id property defines the unique id of type integer",
                          "minimum": 1
                        },
                        "fullName": { "type": "string" }
                      },
                      "required": ["id", "fullName"]
                    }
                  }
                },
                "name": { "type": "string" },
                "type": {
                  "type": "string",
                  "default": "server-side",
                  "enum": ["server-side", "client-side"]
                },
                "key": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "resources": {
                  "type": "array",
                  "description": "Resources and permissions",
                  "minItems": 1,
                  "items": {
                    "type": "object",
                    "properties": {
                      "resource": {
                        "type": "string",
                        "description": "Resource name",
                        "enum": [
                          "roles",
                          "usersAndOrganisations",
                          "devices",
                          "containers",
                          "tenants",
                          "edgeos",
                          "webhooks",
                          "groups",
                          "thirdpartyAppsPts",
                          "dashboards",
                          "keys"
                        ]
                      },
                      "permissions": {
                        "type": "array",
                        "description": "List of resource permissions, min(1), null or empty values are not allowed",
                        "minItems": 1,
                        "items": {
                          "type": "string",
                          "default": "permission.securityLevel"
                        }
                      }
                    },
                    "required": ["resource"]
                  }
                },
                "requestMonthlyLimit": {
                  "type": "number",
                  "minimum": 1,
                  "maximum": 10000
                },
                "totalRequestCount": { "type": "number" },
                "requestCount": { "type": "number" },
                "expiresAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Expiration Date",
                  "default": "2021-05-21T06:02:07.281Z"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.281Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.281Z"
                },
                "requests": {
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "type": "object",
                    "properties": {
                      "resource": { "type": "string", "default": "devices" },
                      "permission": {
                        "type": "string",
                        "default": "onboardedDevices"
                      },
                      "sendAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "sendAt",
                        "default": "2021-05-21T06:02:07.281Z"
                      }
                    },
                    "required": ["resource", "permission"]
                  }
                }
              },
              "required": [
                "id",
                "name",
                "type",
                "key",
                "resources",
                "requestCount",
                "requests"
              ]
            },
            "description": "Return key"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Key(s) not found"
          }
        }
      },
      "put": {
        "summary": "Update a key for End-point usage with key authentication strategy and specific scope of usage",
        "operationId": "putKeysKeyid",
        "description": "keys<br/><br/>updateKeys",
        "parameters": [
          {
            "type": "string",
            "description": "Access token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "keyId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Key name, null or empty not allowed"
                },
                "type": {
                  "type": "string",
                  "description": "Key type",
                  "default": "server-side",
                  "enum": ["server-side", "client-side"]
                },
                "resources": {
                  "type": "array",
                  "description": "Array of objects, representing the key resources and their permissions",
                  "minItems": 1,
                  "items": {
                    "type": "object",
                    "properties": {
                      "resource": {
                        "type": "string",
                        "description": "Resource name",
                        "enum": [
                          "roles",
                          "usersAndOrganisations",
                          "devices",
                          "containers",
                          "tenants",
                          "edgeos",
                          "webhooks",
                          "groups",
                          "thirdpartyAppsPts",
                          "dashboards",
                          "keys"
                        ]
                      },
                      "permissions": {
                        "type": "array",
                        "description": "List of resource permissions, min(1), null or empty values are not allowed",
                        "minItems": 1,
                        "items": {
                          "type": "string",
                          "default": "permission.securityLevel"
                        }
                      }
                    },
                    "required": ["resource"]
                  }
                }
              },
              "required": ["resources"]
            }
          }
        ],
        "tags": ["keys"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "owner": {
                  "type": "object",
                  "properties": {
                    "organisation": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The id property defines the unique id of type integer",
                          "minimum": 1
                        },
                        "name": { "type": "string" }
                      },
                      "required": ["id", "name"]
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The id property defines the unique id of type integer",
                          "minimum": 1
                        },
                        "fullName": { "type": "string" }
                      },
                      "required": ["id", "fullName"]
                    }
                  }
                },
                "name": { "type": "string" },
                "type": {
                  "type": "string",
                  "default": "server-side",
                  "enum": ["server-side", "client-side"]
                },
                "key": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "resources": {
                  "type": "array",
                  "description": "Resources and permissions",
                  "minItems": 1,
                  "items": {
                    "type": "object",
                    "properties": {
                      "resource": {
                        "type": "string",
                        "description": "Resource name",
                        "enum": [
                          "roles",
                          "usersAndOrganisations",
                          "devices",
                          "containers",
                          "tenants",
                          "edgeos",
                          "webhooks",
                          "groups",
                          "thirdpartyAppsPts",
                          "dashboards",
                          "keys"
                        ]
                      },
                      "permissions": {
                        "type": "array",
                        "description": "List of resource permissions, min(1), null or empty values are not allowed",
                        "minItems": 1,
                        "items": {
                          "type": "string",
                          "default": "permission.securityLevel"
                        }
                      }
                    },
                    "required": ["resource"]
                  }
                },
                "requestMonthlyLimit": {
                  "type": "number",
                  "minimum": 1,
                  "maximum": 10000
                },
                "totalRequestCount": { "type": "number" },
                "requestCount": { "type": "number" },
                "expiresAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Expiration Date",
                  "default": "2021-05-21T06:02:07.281Z"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.281Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.281Z"
                },
                "requests": {
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "type": "object",
                    "properties": {
                      "resource": { "type": "string", "default": "devices" },
                      "permission": {
                        "type": "string",
                        "default": "onboardedDevices"
                      },
                      "sendAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "sendAt",
                        "default": "2021-05-21T06:02:07.281Z"
                      }
                    },
                    "required": ["resource", "permission"]
                  }
                }
              },
              "required": [
                "id",
                "name",
                "type",
                "key",
                "resources",
                "requestCount",
                "requests"
              ]
            },
            "description": "Key Updated"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Key(s) not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a key for End-point usage with key authentication strategy and specific scope of usage",
        "operationId": "deleteKeysKeyid",
        "description": "keys<br/><br/>deleteKeys",
        "parameters": [
          {
            "type": "string",
            "description": "Access token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "keyId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["keys"],
        "security": [{ "jwt": [] }],
        "responses": {
          "204": { "description": "Key deleted" },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Key(s) not found"
          }
        }
      }
    },
    "/organisations/{organisationId}": {
      "get": {
        "summary": "Get organisation by id",
        "operationId": "getOrganisationsOrganisationid",
        "description": "usersAndOrganisations<br/><br/>viewOrganisations",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "organisationId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "min(1) / max(4)",
            "default": 1,
            "minimum": 1,
            "maximum": 4,
            "name": "depth",
            "in": "query"
          }
        ],
        "tags": ["organisations"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer",
                  "minimum": 1
                },
                "admin": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The id property defines the unique id of type integer",
                      "minimum": 1
                    },
                    "fullName": { "type": "string" },
                    "email": { "type": "string", "x-format": { "email": true } }
                  },
                  "required": ["id", "fullName", "email"]
                },
                "parentId": { "type": "number" },
                "name": { "type": "string" },
                "phoneNumber": { "type": "string" },
                "street": { "type": "string" },
                "houseNumber": { "type": "string" },
                "addressSupplement": { "type": "string" },
                "zipCode": { "type": "string" },
                "state": { "type": "string" },
                "city": { "type": "string" },
                "country": { "type": "string" },
                "notes": { "type": "string" },
                "defaultDeviceGroupId": { "type": "number", "minimum": 1 },
                "childrenInheritManifest": { "type": "boolean" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.859Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.859Z"
                },
                "childOrganisationsLimit": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 10000,
                  "x-alternatives": [
                    { "type": "number", "minimum": 0, "maximum": 10000 },
                    { "type": "string", "enum": ["Unlimited"] }
                  ]
                },
                "usersLimit": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 10000,
                  "x-alternatives": [
                    { "type": "number", "minimum": 0, "maximum": 10000 },
                    { "type": "string", "enum": ["Unlimited"] }
                  ]
                },
                "devicesLimit": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 10000,
                  "x-alternatives": [
                    { "type": "number", "minimum": 0, "maximum": 10000 },
                    { "type": "string", "enum": ["Unlimited"] }
                  ]
                },
                "keysLimit": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 10000,
                  "x-alternatives": [
                    { "type": "number", "minimum": 0, "maximum": 10000 },
                    { "type": "string", "enum": ["Unlimited"] }
                  ]
                },
                "keysRequestMonthlyLimit": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 10000,
                  "x-alternatives": [
                    { "type": "number", "minimum": 0, "maximum": 10000 },
                    { "type": "string", "enum": ["Unlimited"] }
                  ]
                },
                "children": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "organisationId": { "type": "number" },
                      "name": { "type": "string" }
                    },
                    "required": ["organisationId", "name"]
                  }
                },
                "childrenLinks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "target": { "type": "number" },
                      "source": { "type": "number" }
                    },
                    "required": ["target", "source"]
                  }
                }
              },
              "required": [
                "id",
                "parentId",
                "name",
                "phoneNumber",
                "street",
                "houseNumber",
                "zipCode",
                "city",
                "country",
                "defaultDeviceGroupId",
                "childrenInheritManifest",
                "createdAt",
                "updatedAt",
                "children",
                "childrenLinks"
              ]
            },
            "description": "Returns an organization"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found"
          }
        }
      },
      "post": {
        "summary": "Create an organisation",
        "operationId": "postOrganisationsOrganisationid",
        "description": "usersAndOrganisations<br/><br/>createOrganisations",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "organisationId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Organisation name"
                },
                "admin": {
                  "type": "string",
                  "description": "valid email, empty values are not allowed, null is allowed",
                  "x-format": { "email": true }
                },
                "phoneNumber": {
                  "type": "string",
                  "description": "Phone number"
                },
                "street": { "type": "string", "description": "Street" },
                "houseNumber": {
                  "type": "string",
                  "description": "House number"
                },
                "addressSupplement": {
                  "type": "string",
                  "description": "Address supplement"
                },
                "zipCode": { "type": "string", "description": "Zip code" },
                "state": { "type": "string", "description": "State" },
                "city": { "type": "string", "description": "City" },
                "country": { "type": "string", "description": "Country" },
                "notes": { "type": "string", "description": "Notes" },
                "childrenInheritManifest": {
                  "type": "boolean",
                  "default": true
                }
              },
              "required": [
                "name",
                "phoneNumber",
                "street",
                "houseNumber",
                "zipCode",
                "city",
                "country"
              ]
            }
          }
        ],
        "tags": ["organisations"],
        "security": [{ "jwt": [] }],
        "responses": {
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer",
                  "minimum": 1
                },
                "admin": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The id property defines the unique id of type integer",
                      "minimum": 1
                    },
                    "fullName": { "type": "string" },
                    "email": { "type": "string", "x-format": { "email": true } }
                  },
                  "required": ["id", "fullName", "email"]
                },
                "parentId": { "type": "number" },
                "name": { "type": "string" },
                "phoneNumber": { "type": "string" },
                "street": { "type": "string" },
                "houseNumber": { "type": "string" },
                "addressSupplement": { "type": "string" },
                "zipCode": { "type": "string" },
                "state": { "type": "string" },
                "city": { "type": "string" },
                "country": { "type": "string" },
                "notes": { "type": "string" },
                "defaultDeviceGroupId": { "type": "number", "minimum": 1 },
                "childrenInheritManifest": { "type": "boolean" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.312Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.312Z"
                }
              },
              "required": [
                "id",
                "parentId",
                "name",
                "phoneNumber",
                "street",
                "houseNumber",
                "zipCode",
                "city",
                "country",
                "defaultDeviceGroupId",
                "childrenInheritManifest",
                "createdAt",
                "updatedAt"
              ]
            },
            "description": "Organisation created"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found / Admin not found"
          }
        }
      },
      "put": {
        "summary": "Modify an organisations data",
        "operationId": "putOrganisationsOrganisationid",
        "description": "usersAndOrganisations<br/><br/>updateOrganisations",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "organisationId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Organisation name"
                },
                "admin": {
                  "type": "string",
                  "description": "valid email, empty values are not allowed, null is allowed",
                  "x-format": { "email": true }
                },
                "phoneNumber": {
                  "type": "string",
                  "description": "Phone number"
                },
                "street": { "type": "string", "description": "Street" },
                "houseNumber": {
                  "type": "string",
                  "description": "House number"
                },
                "addressSupplement": {
                  "type": "string",
                  "description": "Address supplement"
                },
                "zipCode": { "type": "string", "description": "Zip code" },
                "state": { "type": "string", "description": "State" },
                "city": { "type": "string", "description": "City" },
                "country": { "type": "string", "description": "Country" },
                "notes": { "type": "string", "description": "Notes" },
                "childrenInheritManifest": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          }
        ],
        "tags": ["organisations"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer",
                  "minimum": 1
                },
                "admin": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The id property defines the unique id of type integer",
                      "minimum": 1
                    },
                    "fullName": { "type": "string" },
                    "email": { "type": "string", "x-format": { "email": true } }
                  },
                  "required": ["id", "fullName", "email"]
                },
                "parentId": { "type": "number" },
                "name": { "type": "string" },
                "phoneNumber": { "type": "string" },
                "street": { "type": "string" },
                "houseNumber": { "type": "string" },
                "addressSupplement": { "type": "string" },
                "zipCode": { "type": "string" },
                "state": { "type": "string" },
                "city": { "type": "string" },
                "country": { "type": "string" },
                "notes": { "type": "string" },
                "defaultDeviceGroupId": { "type": "number", "minimum": 1 },
                "childrenInheritManifest": { "type": "boolean" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.312Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.312Z"
                }
              },
              "required": [
                "id",
                "parentId",
                "name",
                "phoneNumber",
                "street",
                "houseNumber",
                "zipCode",
                "city",
                "country",
                "defaultDeviceGroupId",
                "childrenInheritManifest",
                "createdAt",
                "updatedAt"
              ]
            },
            "description": "Organisation modified"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found"
          }
        }
      },
      "delete": {
        "summary": "Delete organisation by id",
        "operationId": "deleteOrganisationsOrganisationid",
        "description": "usersAndOrganisations<br/><br/>deleteOrganisations",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "organisationId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["organisations"],
        "security": [{ "jwt": [] }],
        "responses": {
          "204": { "description": "no content" },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found"
          }
        }
      }
    },
    "/roles/{roleName}": {
      "get": {
        "summary": "Get a role with all of its resources/permissions",
        "operationId": "getRolesRolename",
        "description": "roles<br/><br/>viewRoles",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Role name",
            "name": "roleName",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "organisationId",
            "in": "query",
            "required": true
          }
        ],
        "tags": ["roles"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "role": { "type": "string" },
                "editable": { "type": "boolean" },
                "deletable": { "type": "boolean" },
                "organisationId": { "type": "number", "minimum": 1 },
                "resources": {
                  "type": "array",
                  "description": "Resources and permissions",
                  "items": {
                    "type": "object",
                    "properties": {
                      "resource": {
                        "type": "string",
                        "description": "Resource name",
                        "enum": [
                          "roles",
                          "usersAndOrganisations",
                          "devices",
                          "containers",
                          "tenants",
                          "edgeos",
                          "webhooks",
                          "groups",
                          "thirdpartyAppsPts",
                          "dashboards",
                          "keys"
                        ]
                      },
                      "permissions": {
                        "type": "array",
                        "description": "List of resource permissions, min(1), null or empty values are not allowed",
                        "minItems": 1,
                        "items": {
                          "type": "string",
                          "default": "permission.securityLevel"
                        }
                      }
                    },
                    "required": ["resource"]
                  }
                }
              },
              "required": ["role", "organisationId", "resources"]
            },
            "description": "Return roles"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found / Role(s) not found"
          }
        }
      },
      "delete": {
        "summary": "Delete role",
        "operationId": "deleteRolesRolename",
        "description": "roles<br/><br/>deleteRoles",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Role name",
            "name": "roleName",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "organisationId",
            "in": "query",
            "required": true
          }
        ],
        "tags": ["roles"],
        "security": [{ "jwt": [] }],
        "responses": {
          "204": { "description": "Role deleted" },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found / Role(s) not found"
          }
        }
      }
    },
    "/search/containers": {
      "get": {
        "summary": "Search for containers",
        "operationId": "getSearchContainers",
        "description": "containers<br/><br/>search",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          { "type": "string", "name": "searchText", "in": "query" },
          {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "[a-zA-Z0-9-_]+\\s?=[a-zA-Z0-9-\\s_]+"
            },
            "collectionFormat": "multi",
            "x-alternatives": [
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9-_]+\\s?=[a-zA-Z0-9-\\s_]+"
                },
                "collectionFormat": "multi",
                "name": "filter"
              },
              {
                "type": "string",
                "minLength": 3,
                "pattern": "[a-zA-Z0-9-_]+\\s?=[a-zA-Z0-9-\\s_]+"
              }
            ],
            "name": "filter",
            "in": "query"
          },
          {
            "type": "string",
            "default": "fuzzy",
            "enum": ["fuzzy", "exact"],
            "name": "searchType",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "min(1), null and empty values are not allowed",
            "default": 1,
            "minimum": 1,
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "min(1) / max is set by config pageEntries, null and empty values are not allowed",
            "default": 10,
            "minimum": 1,
            "maximum": 5000,
            "name": "limit",
            "in": "query"
          },
          { "type": "string", "name": "sortBy", "in": "query" },
          {
            "type": "string",
            "description": "valid - \"asc\" and \"desc\", null and empty string not allowed",
            "default": "asc",
            "enum": ["asc", "desc"],
            "name": "sortOrder",
            "in": "query"
          }
        ],
        "tags": ["search"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "type": "object",
                  "properties": {
                    "offset": { "type": "integer" },
                    "limit": { "type": "integer" },
                    "total": { "type": "integer" }
                  },
                  "required": ["offset", "limit", "total"]
                },
                "containers": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string" },
                    "organisationId": { "type": "number" },
                    "organisation": { "type": "string" },
                    "displayName": { "type": "string" },
                    "containerName": { "type": "string" },
                    "shortDescription": { "type": "string" },
                    "description": { "type": "string" },
                    "version": { "type": "string" },
                    "icon": { "type": "string" },
                    "latestVersions": {
                      "type": "object",
                      "properties": {
                        "Linux-X86": { "type": "string" },
                        "Linux-X64": { "type": "string" },
                        "Linux-ARM32V7": { "type": "string" },
                        "Linux-ARM64V8": { "type": "string" },
                        "All": { "type": "string" }
                      }
                    }
                  },
                  "required": [
                    "id",
                    "organisationId",
                    "displayName",
                    "containerName"
                  ]
                }
              }
            },
            "description": "Return found containers"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          }
        }
      }
    },
    "/search/devices": {
      "get": {
        "summary": "Search for devices",
        "operationId": "getSearchDevices",
        "description": "devices<br/><br/>search",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          { "type": "string", "name": "searchText", "in": "query" },
          {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "[a-zA-Z0-9-_]+\\s?=[a-zA-Z0-9-\\s_]+"
            },
            "collectionFormat": "multi",
            "x-alternatives": [
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9-_]+\\s?=[a-zA-Z0-9-\\s_]+"
                },
                "collectionFormat": "multi",
                "name": "filter"
              },
              {
                "type": "string",
                "minLength": 3,
                "pattern": "[a-zA-Z0-9-_]+\\s?=[a-zA-Z0-9-\\s_]+"
              }
            ],
            "name": "filter",
            "in": "query"
          },
          {
            "type": "string",
            "default": "fuzzy",
            "enum": ["fuzzy", "exact"],
            "name": "searchType",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "min(1), null and empty values are not allowed",
            "default": 1,
            "minimum": 1,
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "min(1) / max is set by config pageEntries, null and empty values are not allowed",
            "default": 10,
            "minimum": 1,
            "maximum": 5000,
            "name": "limit",
            "in": "query"
          },
          { "type": "string", "name": "sortBy", "in": "query" },
          {
            "type": "string",
            "description": "valid - \"asc\" and \"desc\", null and empty string not allowed",
            "default": "asc",
            "enum": ["asc", "desc"],
            "name": "sortOrder",
            "in": "query"
          }
        ],
        "tags": ["search"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "type": "object",
                  "properties": {
                    "offset": { "type": "integer" },
                    "limit": { "type": "integer" },
                    "total": { "type": "integer" }
                  },
                  "required": ["offset", "limit", "total"]
                },
                "devices": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string" },
                    "organisationId": { "type": "number" },
                    "organisationName": { "type": "string" },
                    "serialNumber": { "type": "string" },
                    "name": { "type": "string" }
                  },
                  "required": ["id"]
                }
              }
            },
            "description": "Return found device"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          }
        }
      }
    },
    "/search/organisations": {
      "get": {
        "summary": "Search for organisations",
        "operationId": "getSearchOrganisations",
        "description": "search<br/><br/>organisations",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          { "type": "string", "name": "searchText", "in": "query" },
          {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "[a-zA-Z0-9-_]+\\s?=[a-zA-Z0-9-\\s_]+"
            },
            "collectionFormat": "multi",
            "x-alternatives": [
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9-_]+\\s?=[a-zA-Z0-9-\\s_]+"
                },
                "collectionFormat": "multi",
                "name": "filter"
              },
              {
                "type": "string",
                "minLength": 3,
                "pattern": "[a-zA-Z0-9-_]+\\s?=[a-zA-Z0-9-\\s_]+"
              }
            ],
            "name": "filter",
            "in": "query"
          },
          {
            "type": "string",
            "default": "fuzzy",
            "enum": ["fuzzy", "exact"],
            "name": "searchType",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "min(1), null and empty values are not allowed",
            "default": 1,
            "minimum": 1,
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "min(1) / max is set by config pageEntries, null and empty values are not allowed",
            "default": 10,
            "minimum": 1,
            "maximum": 5000,
            "name": "limit",
            "in": "query"
          },
          { "type": "string", "name": "sortBy", "in": "query" },
          {
            "type": "string",
            "description": "valid - \"asc\" and \"desc\", null and empty string not allowed",
            "default": "asc",
            "enum": ["asc", "desc"],
            "name": "sortOrder",
            "in": "query"
          }
        ],
        "tags": ["search"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "type": "object",
                  "properties": {
                    "offset": { "type": "integer" },
                    "limit": { "type": "integer" },
                    "total": { "type": "integer" }
                  },
                  "required": ["offset", "limit", "total"]
                },
                "organisations": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string" },
                    "name": { "type": "string" },
                    "city": { "type": "string" },
                    "country": { "type": "string" }
                  },
                  "required": ["id", "name"]
                }
              }
            },
            "description": "Return found organisations"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          }
        }
      }
    },
    "/search/users": {
      "get": {
        "summary": "Search for users",
        "operationId": "getSearchUsers",
        "description": "search<br/><br/>users",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          { "type": "string", "name": "searchText", "in": "query" },
          {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "[a-zA-Z0-9-_]+\\s?=[a-zA-Z0-9-\\s_]+"
            },
            "collectionFormat": "multi",
            "x-alternatives": [
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "pattern": "[a-zA-Z0-9-_]+\\s?=[a-zA-Z0-9-\\s_]+"
                },
                "collectionFormat": "multi",
                "name": "filter"
              },
              {
                "type": "string",
                "minLength": 3,
                "pattern": "[a-zA-Z0-9-_]+\\s?=[a-zA-Z0-9-\\s_]+"
              }
            ],
            "name": "filter",
            "in": "query"
          },
          {
            "type": "string",
            "default": "fuzzy",
            "enum": ["fuzzy", "exact"],
            "name": "searchType",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "min(1), null and empty values are not allowed",
            "default": 1,
            "minimum": 1,
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "min(1) / max is set by config pageEntries, null and empty values are not allowed",
            "default": 10,
            "minimum": 1,
            "maximum": 5000,
            "name": "limit",
            "in": "query"
          },
          { "type": "string", "name": "sortBy", "in": "query" },
          {
            "type": "string",
            "description": "valid - \"asc\" and \"desc\", null and empty string not allowed",
            "default": "asc",
            "enum": ["asc", "desc"],
            "name": "sortOrder",
            "in": "query"
          }
        ],
        "tags": ["search"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "type": "object",
                  "properties": {
                    "offset": { "type": "integer" },
                    "limit": { "type": "integer" },
                    "total": { "type": "integer" }
                  },
                  "required": ["offset", "limit", "total"]
                },
                "users": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string" },
                    "email": { "type": "string" },
                    "firstName": { "type": "string" },
                    "lastName": { "type": "string" },
                    "organisationId": { "type": "string" },
                    "userStatusId": { "type": "string" }
                  },
                  "required": ["id", "email", "firstName", "lastName"]
                }
              }
            },
            "description": "Return found users"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          }
        }
      }
    },
    "/tenants/organisations": {
      "get": {
        "summary": "Get all tenants",
        "operationId": "getTenantsOrganisations",
        "description": "tenants<br/><br/>viewTenants",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "min(1), null and empty values are not allowed",
            "default": 1,
            "minimum": 1,
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "min(1) / max is set by config pageEntries, null and empty values are not allowed",
            "default": 10,
            "minimum": 1,
            "maximum": 5000,
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sort by \"name\" or other resource property, null not allowed",
            "default": "id",
            "name": "sortBy",
            "in": "query"
          },
          {
            "type": "string",
            "description": "valid - \"asc\" and \"desc\", null and empty string not allowed",
            "default": "asc",
            "enum": ["asc", "desc"],
            "name": "sortOrder",
            "in": "query"
          }
        ],
        "tags": ["tenants"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "type": "object",
                  "properties": {
                    "offset": { "type": "integer" },
                    "limit": { "type": "integer" },
                    "total": { "type": "integer" }
                  },
                  "required": ["offset", "limit", "total"]
                },
                "tenants": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "The id property defines the unique id of type integer",
                        "minimum": 1
                      },
                      "parentId": { "type": "number" },
                      "name": { "type": "string" },
                      "admin": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The id property defines the unique id of type integer",
                            "minimum": 1
                          },
                          "fullName": { "type": "string" },
                          "email": {
                            "type": "string",
                            "x-format": { "email": true }
                          }
                        },
                        "required": ["id", "fullName", "email"]
                      },
                      "organisationStatus": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The id property defines the unique id of type integer",
                            "minimum": 1
                          },
                          "description": { "type": "string" }
                        },
                        "required": ["id", "description"]
                      },
                      "phoneNumber": { "type": "string" },
                      "street": { "type": "string" },
                      "houseNumber": { "type": "string" },
                      "addressSupplement": { "type": "string" },
                      "zipCode": { "type": "string" },
                      "city": { "type": "string" },
                      "state": { "type": "string" },
                      "country": { "type": "string" },
                      "notes": { "type": "string" },
                      "childrenInheritManifest": { "type": "boolean" },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "createdAt",
                        "default": "2021-05-21T06:02:07.953Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "updatedAt",
                        "default": "2021-05-21T06:02:07.953Z"
                      },
                      "limits": {
                        "type": "object",
                        "properties": {
                          "childOrganisationsLimit": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 10000,
                            "x-alternatives": [
                              {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 10000
                              },
                              { "type": "string", "enum": ["Unlimited"] }
                            ]
                          },
                          "usersLimit": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 10000,
                            "x-alternatives": [
                              {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 10000
                              },
                              { "type": "string", "enum": ["Unlimited"] }
                            ]
                          },
                          "devicesLimit": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 10000,
                            "x-alternatives": [
                              {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 10000
                              },
                              { "type": "string", "enum": ["Unlimited"] }
                            ]
                          },
                          "keysLimit": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 10000,
                            "x-alternatives": [
                              {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 10000
                              },
                              { "type": "string", "enum": ["Unlimited"] }
                            ]
                          },
                          "keysRequestMonthlyLimit": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 10000,
                            "x-alternatives": [
                              {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 10000
                              },
                              { "type": "string", "enum": ["Unlimited"] }
                            ]
                          }
                        }
                      },
                      "counters": {
                        "type": "object",
                        "properties": {
                          "childOrganisationsCounter": { "type": "number" },
                          "usersCounter": { "type": "number" },
                          "devicesCounter": { "type": "number" },
                          "keysCounter": { "type": "number" }
                        }
                      }
                    },
                    "required": [
                      "id",
                      "parentId",
                      "name",
                      "phoneNumber",
                      "street",
                      "houseNumber",
                      "zipCode",
                      "city",
                      "country",
                      "childrenInheritManifest",
                      "createdAt",
                      "updatedAt"
                    ]
                  }
                }
              }
            },
            "description": "Tenants list"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          }
        }
      },
      "post": {
        "summary": "Create a tenant",
        "operationId": "postTenantsOrganisations",
        "description": "tenants<br/><br/>createTenants",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "description": "Tenant name" },
                "admin": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "description": "valid email",
                      "x-format": { "email": true }
                    },
                    "firstName": {
                      "type": "string",
                      "description": "First name"
                    },
                    "lastName": {
                      "type": "string",
                      "description": "Last name"
                    },
                    "jobTitle": {
                      "type": "string",
                      "description": "Job title"
                    },
                    "department": {
                      "type": "string",
                      "description": "Department"
                    },
                    "mobilePhone": {
                      "type": "string",
                      "description": "Mobile number"
                    },
                    "telephone": {
                      "type": "string",
                      "description": "Telephone"
                    },
                    "street": { "type": "string", "description": "Street" },
                    "houseNumber": {
                      "type": "string",
                      "description": "House number"
                    },
                    "addressSupplement": {
                      "type": "string",
                      "description": "Address supplement"
                    },
                    "zipCode": { "type": "string", "description": "Zip code" },
                    "city": { "type": "string", "description": "City" },
                    "state": { "type": "string", "description": "State" },
                    "country": { "type": "string", "description": "Country" }
                  },
                  "required": [
                    "email",
                    "firstName",
                    "lastName",
                    "jobTitle",
                    "department",
                    "mobilePhone",
                    "telephone",
                    "street",
                    "houseNumber",
                    "zipCode",
                    "city",
                    "country"
                  ]
                },
                "phoneNumber": {
                  "type": "string",
                  "description": "Phone number"
                },
                "street": { "type": "string", "description": "Street" },
                "houseNumber": {
                  "type": "string",
                  "description": "House number"
                },
                "addressSupplement": {
                  "type": "string",
                  "description": "Address supplement"
                },
                "zipCode": { "type": "string", "description": "Zip code" },
                "city": { "type": "string", "description": "City" },
                "state": { "type": "string", "description": "State" },
                "country": { "type": "string", "description": "Country" },
                "notes": { "type": "string", "description": "Notes" },
                "childOrganisationsLimit": {
                  "type": "number",
                  "description": "Child organisations limit: min(0), max(10000)",
                  "minimum": 0,
                  "maximum": 10000
                },
                "usersLimit": {
                  "type": "number",
                  "description": "Users limit: min(0), max(10000)",
                  "minimum": 0,
                  "maximum": 10000
                },
                "devicesLimit": {
                  "type": "number",
                  "description": "Devices limit: min(0), max(10000)",
                  "minimum": 0,
                  "maximum": 10000
                },
                "keysLimit": {
                  "type": "number",
                  "description": "Keys limit: min(0), max(10000)",
                  "minimum": 0,
                  "maximum": 10000
                },
                "keysRequestMonthlyLimit": {
                  "type": "number",
                  "description": "Keys request monthly limit: min(0), max(10000)",
                  "minimum": 1,
                  "maximum": 10000
                }
              },
              "required": [
                "name",
                "phoneNumber",
                "street",
                "houseNumber",
                "zipCode",
                "city",
                "country"
              ]
            }
          }
        ],
        "tags": ["tenants"],
        "security": [{ "jwt": [] }],
        "responses": {
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer",
                  "minimum": 1
                },
                "parentId": { "type": "number" },
                "name": { "type": "string" },
                "admin": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The id property defines the unique id of type integer",
                      "minimum": 1
                    },
                    "fullName": { "type": "string" },
                    "email": { "type": "string", "x-format": { "email": true } }
                  },
                  "required": ["id", "fullName", "email"]
                },
                "organisationStatus": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The id property defines the unique id of type integer",
                      "minimum": 1
                    },
                    "description": { "type": "string" }
                  },
                  "required": ["id", "description"]
                },
                "phoneNumber": { "type": "string" },
                "street": { "type": "string" },
                "houseNumber": { "type": "string" },
                "addressSupplement": { "type": "string" },
                "zipCode": { "type": "string" },
                "city": { "type": "string" },
                "state": { "type": "string" },
                "country": { "type": "string" },
                "notes": { "type": "string" },
                "childrenInheritManifest": { "type": "boolean" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.953Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.953Z"
                },
                "limits": {
                  "type": "object",
                  "properties": {
                    "childOrganisationsLimit": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 10000,
                      "x-alternatives": [
                        { "type": "number", "minimum": 0, "maximum": 10000 },
                        { "type": "string", "enum": ["Unlimited"] }
                      ]
                    },
                    "usersLimit": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 10000,
                      "x-alternatives": [
                        { "type": "number", "minimum": 0, "maximum": 10000 },
                        { "type": "string", "enum": ["Unlimited"] }
                      ]
                    },
                    "devicesLimit": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 10000,
                      "x-alternatives": [
                        { "type": "number", "minimum": 0, "maximum": 10000 },
                        { "type": "string", "enum": ["Unlimited"] }
                      ]
                    },
                    "keysLimit": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 10000,
                      "x-alternatives": [
                        { "type": "number", "minimum": 0, "maximum": 10000 },
                        { "type": "string", "enum": ["Unlimited"] }
                      ]
                    },
                    "keysRequestMonthlyLimit": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 10000,
                      "x-alternatives": [
                        { "type": "number", "minimum": 0, "maximum": 10000 },
                        { "type": "string", "enum": ["Unlimited"] }
                      ]
                    }
                  }
                },
                "counters": {
                  "type": "object",
                  "properties": {
                    "childOrganisationsCounter": { "type": "number" },
                    "usersCounter": { "type": "number" },
                    "devicesCounter": { "type": "number" },
                    "keysCounter": { "type": "number" }
                  }
                }
              },
              "required": [
                "id",
                "parentId",
                "name",
                "phoneNumber",
                "street",
                "houseNumber",
                "zipCode",
                "city",
                "country",
                "childrenInheritManifest",
                "createdAt",
                "updatedAt"
              ]
            },
            "description": "Tenant created"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          }
        }
      }
    },
    "/users/profile": {
      "get": {
        "summary": "Get users profile",
        "operationId": "getUsersProfile",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          }
        ],
        "tags": ["users"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer",
                  "minimum": 1
                },
                "organisationId": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer",
                  "minimum": 1
                },
                "firstName": { "type": "string" },
                "lastName": { "type": "string" },
                "email": {
                  "type": "string",
                  "description": "valid email / null and empty values are not allowed",
                  "x-format": { "email": true }
                },
                "jobTitle": { "type": "string" },
                "department": { "type": "string" },
                "mobilePhone": { "type": "string" },
                "telephone": { "type": "string" },
                "street": { "type": "string" },
                "houseNumber": { "type": "string" },
                "addressSupplement": { "type": "string" },
                "zipCode": { "type": "string" },
                "city": { "type": "string" },
                "state": { "type": "string" },
                "country": { "type": "string" },
                "status": {
                  "type": "object",
                  "properties": {
                    "statusId": { "type": "number" },
                    "description": { "type": "string" }
                  },
                  "required": ["statusId", "description"]
                },
                "editable": { "type": "boolean" },
                "deletable": { "type": "boolean" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.984Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.984Z"
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "role": { "type": "string" },
                      "resources": {
                        "type": "array",
                        "items": {
                          "type": "array",
                          "description": "Resources and permissions",
                          "items": {
                            "type": "object",
                            "properties": {
                              "resource": {
                                "type": "string",
                                "description": "Resource name",
                                "enum": [
                                  "roles",
                                  "usersAndOrganisations",
                                  "devices",
                                  "containers",
                                  "tenants",
                                  "edgeos",
                                  "webhooks",
                                  "groups",
                                  "thirdpartyAppsPts",
                                  "dashboards",
                                  "keys"
                                ]
                              },
                              "permissions": {
                                "type": "array",
                                "description": "List of resource permissions, min(1), null or empty values are not allowed",
                                "minItems": 1,
                                "items": {
                                  "type": "string",
                                  "default": "permission.securityLevel"
                                }
                              }
                            },
                            "required": ["resource"]
                          }
                        }
                      }
                    },
                    "required": ["role", "resources"]
                  }
                }
              },
              "required": [
                "id",
                "organisationId",
                "firstName",
                "lastName",
                "email",
                "street",
                "houseNumber",
                "zipCode",
                "city",
                "country",
                "editable",
                "deletable",
                "createdAt",
                "updatedAt",
                "roles"
              ]
            },
            "description": "Return profile"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          }
        }
      },
      "put": {
        "summary": "Modify the users profile",
        "operationId": "putUsersProfile",
        "description": "usersAndOrganisation<br/><br/>updateUsers",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "organisationId": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer, optional",
                  "minimum": 1
                },
                "password": {
                  "type": "string",
                  "description": "Password",
                  "x-convert": { "trim": true }
                },
                "statusId": {
                  "type": "number",
                  "description": "Status Id, min(1) max(3), nll and empty values are not allowed",
                  "minimum": 1,
                  "maximum": 3
                },
                "firstName": { "type": "string", "description": "First name" },
                "lastName": { "type": "string", "description": "Last name" },
                "email": {
                  "type": "string",
                  "description": "valid email / null and empty values are not allowed",
                  "x-format": { "email": true }
                },
                "jobTitle": { "type": "string", "description": "Job title" },
                "department": { "type": "string", "description": "Department" },
                "mobilePhone": {
                  "type": "string",
                  "description": "Mobile phone"
                },
                "telephone": { "type": "string", "description": "Telephone" },
                "street": { "type": "string", "description": "Street" },
                "houseNumber": {
                  "type": "string",
                  "description": "House number"
                },
                "addressSupplement": {
                  "type": "string",
                  "description": "Address supplement"
                },
                "zipCode": { "type": "string", "description": "Zip code" },
                "city": { "type": "string", "description": "City" },
                "state": { "type": "string", "description": "State" },
                "country": { "type": "string", "description": "Country" },
                "editable": { "type": "boolean" },
                "deletable": { "type": "boolean" },
                "oldPassword": { "type": "string" }
              },
              "required": ["oldPassword"]
            }
          }
        ],
        "tags": ["users"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer",
                  "minimum": 1
                },
                "organisationId": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer",
                  "minimum": 1
                },
                "firstName": { "type": "string" },
                "lastName": { "type": "string" },
                "email": {
                  "type": "string",
                  "description": "valid email / null and empty values are not allowed",
                  "x-format": { "email": true }
                },
                "jobTitle": { "type": "string" },
                "department": { "type": "string" },
                "mobilePhone": { "type": "string" },
                "telephone": { "type": "string" },
                "street": { "type": "string" },
                "houseNumber": { "type": "string" },
                "addressSupplement": { "type": "string" },
                "zipCode": { "type": "string" },
                "city": { "type": "string" },
                "state": { "type": "string" },
                "country": { "type": "string" },
                "status": {
                  "type": "object",
                  "properties": {
                    "statusId": { "type": "number" },
                    "description": { "type": "string" }
                  },
                  "required": ["statusId", "description"]
                },
                "editable": { "type": "boolean" },
                "deletable": { "type": "boolean" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:09.406Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:09.406Z"
                }
              },
              "required": [
                "id",
                "organisationId",
                "firstName",
                "lastName",
                "email",
                "street",
                "houseNumber",
                "zipCode",
                "city",
                "country",
                "editable",
                "deletable",
                "createdAt",
                "updatedAt"
              ]
            },
            "description": "Profile modified."
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found"
          }
        }
      }
    },
    "/users/suggest": {
      "get": {
        "summary": "Provide suggestions for users in organisation",
        "operationId": "getUsersSuggest",
        "description": "usersAndOrganisations<br/><br/>viewUsers",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer, optional",
            "minimum": 1,
            "name": "organisationId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search by email or name",
            "name": "search",
            "in": "query",
            "required": true
          }
        ],
        "tags": ["users"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "itemsPerRequest": { "type": "number" },
                "users": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": { "type": "string" },
                      "email": {
                        "type": "string",
                        "x-format": { "email": true }
                      }
                    }
                  }
                }
              }
            },
            "description": "Return suggestions"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          }
        }
      }
    },
    "/users/verify": {
      "get": {
        "summary": "Resend user verification code to email address",
        "operationId": "getUsersVerify",
        "parameters": [
          {
            "type": "string",
            "description": "valid email / null and empty values are not allowed",
            "x-format": { "email": true },
            "name": "email",
            "in": "query",
            "required": true
          }
        ],
        "tags": ["users"],
        "security": [{ "jwt": [] }],
        "responses": {
          "204": { "description": "User verification email send" },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          }
        }
      },
      "put": {
        "summary": "Verify a user by the code sent through email",
        "operationId": "putUsersVerify",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "valid email / null and empty values are not allowed",
                  "x-format": { "email": true }
                },
                "code": { "type": "string" }
              },
              "required": ["email", "code"]
            }
          }
        ],
        "tags": ["users"],
        "security": [{ "jwt": [] }],
        "responses": {
          "204": { "description": "User verified" },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "User not found / Invalid code"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "summary": "Get user by id",
        "operationId": "getUsersUserid",
        "description": "usersAndOrganisations<br/><br/>viewUsers",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["users"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer",
                  "minimum": 1
                },
                "organisationId": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer",
                  "minimum": 1
                },
                "firstName": { "type": "string" },
                "lastName": { "type": "string" },
                "email": {
                  "type": "string",
                  "description": "valid email / null and empty values are not allowed",
                  "x-format": { "email": true }
                },
                "jobTitle": { "type": "string" },
                "department": { "type": "string" },
                "mobilePhone": { "type": "string" },
                "telephone": { "type": "string" },
                "street": { "type": "string" },
                "houseNumber": { "type": "string" },
                "addressSupplement": { "type": "string" },
                "zipCode": { "type": "string" },
                "city": { "type": "string" },
                "state": { "type": "string" },
                "country": { "type": "string" },
                "status": {
                  "type": "object",
                  "properties": {
                    "statusId": { "type": "number" },
                    "description": { "type": "string" }
                  },
                  "required": ["statusId", "description"]
                },
                "editable": { "type": "boolean" },
                "deletable": { "type": "boolean" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.984Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.984Z"
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "role": { "type": "string" },
                      "resources": {
                        "type": "array",
                        "items": {
                          "type": "array",
                          "description": "Resources and permissions",
                          "items": {
                            "type": "object",
                            "properties": {
                              "resource": {
                                "type": "string",
                                "description": "Resource name",
                                "enum": [
                                  "roles",
                                  "usersAndOrganisations",
                                  "devices",
                                  "containers",
                                  "tenants",
                                  "edgeos",
                                  "webhooks",
                                  "groups",
                                  "thirdpartyAppsPts",
                                  "dashboards",
                                  "keys"
                                ]
                              },
                              "permissions": {
                                "type": "array",
                                "description": "List of resource permissions, min(1), null or empty values are not allowed",
                                "minItems": 1,
                                "items": {
                                  "type": "string",
                                  "default": "permission.securityLevel"
                                }
                              }
                            },
                            "required": ["resource"]
                          }
                        }
                      }
                    },
                    "required": ["role", "resources"]
                  }
                }
              },
              "required": [
                "id",
                "organisationId",
                "firstName",
                "lastName",
                "email",
                "street",
                "houseNumber",
                "zipCode",
                "city",
                "country",
                "editable",
                "deletable",
                "createdAt",
                "updatedAt",
                "roles"
              ]
            },
            "description": "Return data."
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found / User not found"
          }
        }
      },
      "put": {
        "summary": "Modify a users data",
        "operationId": "putUsersUserid",
        "description": "usersAndOrganisations<br/><br/>updateUsers",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "organisationId": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer, optional",
                  "minimum": 1
                },
                "password": {
                  "type": "string",
                  "description": "Password",
                  "x-convert": { "trim": true }
                },
                "statusId": {
                  "type": "number",
                  "description": "Status Id, min(1) max(3), nll and empty values are not allowed",
                  "minimum": 1,
                  "maximum": 3
                },
                "firstName": { "type": "string", "description": "First name" },
                "lastName": { "type": "string", "description": "Last name" },
                "email": {
                  "type": "string",
                  "description": "valid email / null and empty values are not allowed",
                  "x-format": { "email": true }
                },
                "jobTitle": { "type": "string", "description": "Job title" },
                "department": { "type": "string", "description": "Department" },
                "mobilePhone": {
                  "type": "string",
                  "description": "Mobile phone"
                },
                "telephone": { "type": "string", "description": "Telephone" },
                "street": { "type": "string", "description": "Street" },
                "houseNumber": {
                  "type": "string",
                  "description": "House number"
                },
                "addressSupplement": {
                  "type": "string",
                  "description": "Address supplement"
                },
                "zipCode": { "type": "string", "description": "Zip code" },
                "city": { "type": "string", "description": "City" },
                "state": { "type": "string", "description": "State" },
                "country": { "type": "string", "description": "Country" },
                "editable": { "type": "boolean" },
                "deletable": { "type": "boolean" }
              }
            }
          }
        ],
        "tags": ["users"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer",
                  "minimum": 1
                },
                "organisationId": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer",
                  "minimum": 1
                },
                "firstName": { "type": "string" },
                "lastName": { "type": "string" },
                "email": {
                  "type": "string",
                  "description": "valid email / null and empty values are not allowed",
                  "x-format": { "email": true }
                },
                "jobTitle": { "type": "string" },
                "department": { "type": "string" },
                "mobilePhone": { "type": "string" },
                "telephone": { "type": "string" },
                "street": { "type": "string" },
                "houseNumber": { "type": "string" },
                "addressSupplement": { "type": "string" },
                "zipCode": { "type": "string" },
                "city": { "type": "string" },
                "state": { "type": "string" },
                "country": { "type": "string" },
                "status": {
                  "type": "object",
                  "properties": {
                    "statusId": { "type": "number" },
                    "description": { "type": "string" }
                  },
                  "required": ["statusId", "description"]
                },
                "editable": { "type": "boolean" },
                "deletable": { "type": "boolean" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:09.406Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:09.406Z"
                }
              },
              "required": [
                "id",
                "organisationId",
                "firstName",
                "lastName",
                "email",
                "street",
                "houseNumber",
                "zipCode",
                "city",
                "country",
                "editable",
                "deletable",
                "createdAt",
                "updatedAt"
              ]
            },
            "description": "User modified"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "User not found / Organisation(s) not found"
          }
        }
      },
      "delete": {
        "summary": "Delete user by id",
        "operationId": "deleteUsersUserid",
        "description": "usersAndOrganisations<br/><br/>deleteUsers",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "userId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["users"],
        "security": [{ "jwt": [] }],
        "responses": {
          "204": { "description": "User deleted" },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "User not found"
          }
        }
      }
    },
    "/webhooks/{webhookId}": {
      "get": {
        "summary": "Retrieve specific webhook by webhookId",
        "operationId": "getWebhooksWebhookid",
        "description": "webhooks<br/><br/>viewWebhooks",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "webhookId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["webhooks"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "organisationId": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer",
                  "minimum": 1
                },
                "url": { "type": "string" },
                "description": { "type": "string" },
                "requestType": {
                  "type": "string",
                  "description": "Request type",
                  "enum": [
                    "GET",
                    "POST",
                    "PUT",
                    "DELETE",
                    "HEAD",
                    "CONNECT",
                    "OPTIONS",
                    "TRACE"
                  ]
                },
                "actionType": {
                  "type": "string",
                  "description": "Action type",
                  "enum": ["onboarded", "offboarded"]
                },
                "headers": {
                  "type": "array",
                  "description": "Headers",
                  "x-constraint": { "unique": "name" },
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Header name"
                      },
                      "value": {
                        "type": "string",
                        "description": "Header value"
                      }
                    },
                    "required": ["name", "value"]
                  }
                },
                "queries": {
                  "type": "array",
                  "description": "Queries",
                  "x-constraint": { "unique": "name" },
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": { "type": "string", "description": "Query name" },
                      "value": {
                        "type": "string",
                        "description": "Query value"
                      }
                    },
                    "required": ["name", "value"]
                  }
                },
                "payload": {
                  "type": "string",
                  "description": "Payload object"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.391Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.391Z"
                }
              },
              "required": [
                "id",
                "organisationId",
                "url",
                "requestType",
                "actionType"
              ]
            },
            "description": "Webhooks retrieved"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Webhook(s) not found"
          }
        }
      },
      "put": {
        "summary": "Update a webhook.",
        "operationId": "putWebhooksWebhookid",
        "description": "webhooks<br/><br/>updateWebhooks",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "webhookId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "description": "URL",
                  "pattern": "^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$"
                },
                "description": {
                  "type": "string",
                  "description": "Description"
                },
                "requestType": {
                  "type": "string",
                  "description": "Request type",
                  "enum": [
                    "GET",
                    "POST",
                    "PUT",
                    "DELETE",
                    "HEAD",
                    "CONNECT",
                    "OPTIONS",
                    "TRACE"
                  ]
                },
                "actionType": {
                  "type": "string",
                  "description": "Action type",
                  "enum": ["onboarded", "offboarded"]
                },
                "headers": {
                  "type": "array",
                  "description": "Headers",
                  "x-constraint": { "unique": "name" },
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Header name"
                      },
                      "value": {
                        "type": "string",
                        "description": "Header value"
                      }
                    },
                    "required": ["name", "value"]
                  }
                },
                "queries": {
                  "type": "array",
                  "description": "Queries",
                  "x-constraint": { "unique": "name" },
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": { "type": "string", "description": "Query name" },
                      "value": {
                        "type": "string",
                        "description": "Query value"
                      }
                    },
                    "required": ["name", "value"]
                  }
                },
                "payload": { "type": "string", "description": "Payload object" }
              }
            }
          }
        ],
        "tags": ["webhooks"],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "organisationId": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer",
                  "minimum": 1
                },
                "url": { "type": "string" },
                "description": { "type": "string" },
                "requestType": {
                  "type": "string",
                  "description": "Request type",
                  "enum": [
                    "GET",
                    "POST",
                    "PUT",
                    "DELETE",
                    "HEAD",
                    "CONNECT",
                    "OPTIONS",
                    "TRACE"
                  ]
                },
                "actionType": {
                  "type": "string",
                  "description": "Action type",
                  "enum": ["onboarded", "offboarded"]
                },
                "headers": {
                  "type": "array",
                  "description": "Headers",
                  "x-constraint": { "unique": "name" },
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Header name"
                      },
                      "value": {
                        "type": "string",
                        "description": "Header value"
                      }
                    },
                    "required": ["name", "value"]
                  }
                },
                "queries": {
                  "type": "array",
                  "description": "Queries",
                  "x-constraint": { "unique": "name" },
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": { "type": "string", "description": "Query name" },
                      "value": {
                        "type": "string",
                        "description": "Query value"
                      }
                    },
                    "required": ["name", "value"]
                  }
                },
                "payload": {
                  "type": "string",
                  "description": "Payload object"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.391Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.391Z"
                }
              },
              "required": [
                "id",
                "organisationId",
                "url",
                "requestType",
                "actionType"
              ]
            },
            "description": "Webhook modified"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Webhook(s) not found / Organisation(s) not found"
          }
        }
      },
      "delete": {
        "summary": "Delete webhook by webhookId",
        "operationId": "deleteWebhooksWebhookid",
        "description": "webhooks<br/><br/>deleteWebhooks",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "webhookId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["webhooks"],
        "responses": {
          "204": {
            "schema": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "organisationId": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer",
                  "minimum": 1
                },
                "url": { "type": "string" },
                "description": { "type": "string" },
                "requestType": {
                  "type": "string",
                  "description": "Request type",
                  "enum": [
                    "GET",
                    "POST",
                    "PUT",
                    "DELETE",
                    "HEAD",
                    "CONNECT",
                    "OPTIONS",
                    "TRACE"
                  ]
                },
                "actionType": {
                  "type": "string",
                  "description": "Action type",
                  "enum": ["onboarded", "offboarded"]
                },
                "headers": {
                  "type": "array",
                  "description": "Headers",
                  "x-constraint": { "unique": "name" },
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Header name"
                      },
                      "value": {
                        "type": "string",
                        "description": "Header value"
                      }
                    },
                    "required": ["name", "value"]
                  }
                },
                "queries": {
                  "type": "array",
                  "description": "Queries",
                  "x-constraint": { "unique": "name" },
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": { "type": "string", "description": "Query name" },
                      "value": {
                        "type": "string",
                        "description": "Query value"
                      }
                    },
                    "required": ["name", "value"]
                  }
                },
                "payload": {
                  "type": "string",
                  "description": "Payload object"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.391Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.391Z"
                }
              },
              "required": [
                "id",
                "organisationId",
                "url",
                "requestType",
                "actionType"
              ]
            },
            "description": "Webhook deleted"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Webhook(s) not found"
          }
        }
      }
    },
    "/containers/{containerId}/versions": {
      "get": {
        "summary": "Get container's versions",
        "operationId": "getContainersContaineridVersions",
        "description": "containers<br/><br/>viewContainers",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / uuid_v4",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "name": "containerId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "min(1), null and empty values are not allowed",
            "default": 1,
            "minimum": 1,
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "min(1) / max is set by config pageEntries, null and empty values are not allowed",
            "default": 10,
            "minimum": 1,
            "maximum": 5000,
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sort by \"name\" or other resource property, null not allowed",
            "default": "id",
            "name": "sortBy",
            "in": "query"
          },
          {
            "type": "string",
            "description": "valid - \"asc\" and \"desc\", null and empty string not allowed",
            "default": "asc",
            "enum": ["asc", "desc"],
            "name": "sortOrder",
            "in": "query"
          }
        ],
        "tags": ["containers"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "type": "object",
                  "properties": {
                    "offset": { "type": "integer" },
                    "limit": { "type": "integer" },
                    "total": { "type": "integer" }
                  },
                  "required": ["offset", "limit", "total"]
                },
                "versions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Random uuid v4.",
                        "default": "7adb258e-3ee7-4299-bcb9-513fab03f7d4",
                        "x-format": { "guid": { "version": "uuidv4" } }
                      },
                      "version": {
                        "type": "string",
                        "description": "Version name"
                      },
                      "useGlobalCredentials": {
                        "type": "boolean",
                        "description": "Use global credentials"
                      },
                      "releaseNotes": {
                        "type": "string",
                        "description": "Release notes"
                      },
                      "imageUri": {
                        "type": "string",
                        "description": "Image URI"
                      },
                      "registryType": {
                        "type": "string",
                        "description": "Registry type",
                        "enum": ["public", "private"]
                      },
                      "credentials": {
                        "type": "object",
                        "properties": {
                          "address": { "type": "string" },
                          "username": { "type": "string" }
                        }
                      },
                      "processorArchitecture": {
                        "type": "string",
                        "description": "Processor architecture",
                        "enum": [
                          "Linux-X86",
                          "Linux-X64",
                          "Linux-ARM32V7",
                          "Linux-ARM64V8",
                          "All"
                        ]
                      },
                      "containerCreateOptions": {
                        "type": "object",
                        "description": "See latest Docker documentation",
                        "x-meta": { "swaggerType": "object" },
                        "properties": {
                          "Hostname": { "type": "string" },
                          "Domainname": { "type": "string" },
                          "User": { "type": "string" },
                          "AttachStdin": { "type": "boolean" },
                          "AttachStdout": { "type": "boolean" },
                          "AttachStderr": { "type": "boolean" },
                          "ExposedPorts": {
                            "type": "object",
                            "properties": { "string": { "type": "object" } }
                          },
                          "Tty": { "type": "boolean" },
                          "OpenStdin": { "type": "boolean" },
                          "StdinOnce": { "type": "boolean" },
                          "Env": {
                            "type": "string",
                            "x-alternatives": [
                              { "type": "string" },
                              { "type": "array", "items": { "type": "string" } }
                            ]
                          },
                          "Cmd": {
                            "type": "string",
                            "x-alternatives": [
                              { "type": "string" },
                              { "type": "array", "items": { "type": "string" } }
                            ]
                          },
                          "Healthcheck": {
                            "type": "object",
                            "properties": {
                              "Test": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "Interval": {
                                "type": "string",
                                "enum": [0],
                                "x-alternatives": [
                                  { "type": "string", "enum": [0] },
                                  { "type": "integer", "minimum": 1000000 }
                                ]
                              },
                              "Timeout": {
                                "type": "string",
                                "enum": [0],
                                "x-alternatives": [
                                  { "type": "string", "enum": [0] },
                                  { "type": "integer", "minimum": 1000000 }
                                ]
                              },
                              "Retries": { "type": "integer", "minimum": 0 },
                              "StartPeriod": {
                                "type": "string",
                                "enum": [0],
                                "x-alternatives": [
                                  { "type": "string", "enum": [0] },
                                  { "type": "integer", "minimum": 1000000 }
                                ]
                              }
                            }
                          },
                          "ArgsEscaped": { "type": "boolean" },
                          "Image": { "type": "string" },
                          "Volumes": {
                            "type": "object",
                            "properties": { "string": { "type": "object" } }
                          },
                          "WorkingDir": { "type": "string" },
                          "Entrypoint": {
                            "x-alternatives": [
                              {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              { "type": "string" }
                            ],
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "NetworkDisabled": { "type": "boolean" },
                          "MacAddress": {
                            "type": "string",
                            "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$"
                          },
                          "OnBuild": {
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "Labels": {
                            "type": "object",
                            "properties": { "string": { "type": "string" } }
                          },
                          "StopSignal": { "type": "string" },
                          "StopTimeout": { "type": "integer", "minimum": 0 },
                          "Shell": {
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "HostConfig": {
                            "type": "object",
                            "properties": {
                              "MaximumIOps": { "type": "integer" },
                              "MaximumIOBps": { "type": "integer" },
                              "CpuShares": { "type": "integer" },
                              "Memory": { "type": "integer" },
                              "CgroupParent": { "type": "string" },
                              "BlkioWeight": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 1000
                              },
                              "BlkioWeightDevice": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Weight": {
                                      "type": "integer",
                                      "minimum": 0
                                    }
                                  }
                                }
                              },
                              "BlkioDeviceReadBps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Rate": { "type": "integer", "minimum": 0 }
                                  }
                                }
                              },
                              "BlkioDeviceWriteBps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Rate": { "type": "integer", "minimum": 0 }
                                  }
                                }
                              },
                              "BlkioDeviceReadIOps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Rate": { "type": "integer", "minimum": 0 }
                                  }
                                }
                              },
                              "BlkioDeviceWriteIOps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Rate": { "type": "integer", "minimum": 0 }
                                  }
                                }
                              },
                              "CpuPeriod": { "type": "integer" },
                              "CpuQuota": { "type": "integer" },
                              "CpuRealtimePeriod": { "type": "integer" },
                              "CpuRealtimeRuntime": { "type": "integer" },
                              "CpusetCpus": { "type": "string" },
                              "CpusetMems": { "type": "string" },
                              "Devices": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "PathOnHost": { "type": "string" },
                                    "PathInContainer": { "type": "string" },
                                    "CgroupPermissions": { "type": "string" }
                                  }
                                }
                              },
                              "DeviceCgroupRules": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "DiskQuota": { "type": "integer" },
                              "KernelMemory": { "type": "integer" },
                              "MemoryReservation": { "type": "integer" },
                              "MemorySwap": { "type": "integer" },
                              "MemorySwappiness": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 100
                              },
                              "NanoCPUs": { "type": "integer" },
                              "OomKillDisable": { "type": "boolean" },
                              "PidsLimit": { "type": "integer" },
                              "Ulimits": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Name": { "type": "string" },
                                    "Soft": { "type": "integer" },
                                    "Hard": { "type": "integer" }
                                  }
                                }
                              },
                              "CpuCount": { "type": "integer" },
                              "CpuPercent": { "type": "integer" },
                              "IOMaximumIOps": { "type": "integer" },
                              "IOMaximumBandwidth": { "type": "integer" },
                              "Binds": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": ".+:.+(:.+)?"
                                }
                              },
                              "ContainerIDFile": { "type": "string" },
                              "LogConfig": {
                                "type": "object",
                                "properties": {
                                  "Type": {
                                    "type": "string",
                                    "enum": [
                                      "json-file",
                                      "syslog",
                                      "journald",
                                      "gelf",
                                      "fluentd",
                                      "awslogs",
                                      "splunk",
                                      "etwlogs",
                                      "none"
                                    ]
                                  },
                                  "Config": {
                                    "type": "object",
                                    "properties": {
                                      "string": { "type": "string" }
                                    }
                                  }
                                }
                              },
                              "NetworkMode": {
                                "type": "string",
                                "enum": ["bridge", "host", "none"],
                                "x-alternatives": [
                                  {
                                    "type": "string",
                                    "enum": ["bridge", "host", "none"]
                                  },
                                  {
                                    "type": "string",
                                    "pattern": "^container:.*$"
                                  }
                                ]
                              },
                              "PortBindings": {
                                "type": "object",
                                "properties": {
                                  "string": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "HostIp": { "type": "string" },
                                        "HostPort": { "type": "string" }
                                      }
                                    }
                                  }
                                }
                              },
                              "RestartPolicy": {
                                "type": "object",
                                "properties": {
                                  "Name": {
                                    "type": "string",
                                    "enum": [
                                      "always",
                                      "unless-stopped",
                                      "on-failure"
                                    ]
                                  },
                                  "MaximumRetryCount": { "type": "integer" }
                                }
                              },
                              "AutoRemove": { "type": "boolean" },
                              "VolumeDriver": { "type": "string" },
                              "VolumesFrom": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": "^.+(:(ro|rw))?$"
                                }
                              },
                              "Mounts": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Target": { "type": "string" },
                                    "Source": { "type": "string" },
                                    "Type": {
                                      "type": "string",
                                      "enum": ["bind", "volume", "tmpfs"]
                                    },
                                    "ReadOnly": { "type": "boolean" },
                                    "Consistency": { "type": "string" },
                                    "BindOptions": {
                                      "type": "object",
                                      "properties": {
                                        "Propagation": {
                                          "type": "string",
                                          "enum": [
                                            "private",
                                            "rprivate",
                                            "shared",
                                            "rshared",
                                            "slave",
                                            "rslave"
                                          ]
                                        }
                                      }
                                    },
                                    "VolumeOptions": {
                                      "type": "object",
                                      "properties": {
                                        "NoCopy": { "type": "boolean" },
                                        "Labels": {
                                          "type": "object",
                                          "properties": {
                                            "string": { "type": "string" }
                                          }
                                        },
                                        "DriverConfig": {
                                          "type": "object",
                                          "properties": {
                                            "Name": { "type": "string" },
                                            "Options": {
                                              "type": "object",
                                              "properties": {
                                                "string": { "type": "string" }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "TmpfsOptions": {
                                      "type": "object",
                                      "properties": {
                                        "SizeBytes": { "type": "integer" },
                                        "Mode": { "type": "integer" }
                                      }
                                    }
                                  }
                                }
                              },
                              "CapAdd": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "CapDrop": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "Dns": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "DnsOptions": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "DnsSearch": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "ExtraHosts": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": "^.+:.+$"
                                }
                              },
                              "GroupAdd": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "IpcMode": { "type": "string" },
                              "Cgroup": { "type": "string" },
                              "Links": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": "^.+:.+$"
                                }
                              },
                              "OomScoreAdj": { "type": "integer" },
                              "PidMode": {
                                "type": "string",
                                "pattern": "^.+(:.+)?$"
                              },
                              "Privileged": { "type": "boolean" },
                              "PublishAllPorts": { "type": "boolean" },
                              "ReadonlyRootfs": { "type": "boolean" },
                              "SecurityOpt": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "StorageOpt": {
                                "type": "object",
                                "properties": { "string": { "type": "string" } }
                              },
                              "Tmpfs": {
                                "type": "object",
                                "properties": { "string": { "type": "string" } }
                              },
                              "UTSMode": { "type": "string" },
                              "UsernsMode": { "type": "string" },
                              "ShmSize": { "type": "integer", "minimum": 0 },
                              "Sysctls": {
                                "type": "object",
                                "properties": { "string": { "type": "string" } }
                              },
                              "Runtime": { "type": "string" },
                              "ConsoleSize": {
                                "type": "array",
                                "x-constraint": { "length": 2 },
                                "items": { "type": "integer", "minimum": 0 }
                              },
                              "Isolation": {
                                "type": "string",
                                "enum": ["default", "process", "hyperv"]
                              }
                            }
                          },
                          "NetworkingConfig": {
                            "type": "object",
                            "properties": {
                              "EndpointsConfig": {
                                "type": "object",
                                "properties": {
                                  "string": {
                                    "type": "object",
                                    "properties": {
                                      "IPAMConfig": {
                                        "type": "object",
                                        "properties": {
                                          "IPv4Address": {
                                            "type": "string",
                                            "x-format": {
                                              "ip": {
                                                "cidr": "optional",
                                                "version": ["ipv4"]
                                              }
                                            }
                                          },
                                          "IPv6Address": {
                                            "type": "string",
                                            "x-format": {
                                              "ip": {
                                                "cidr": "optional",
                                                "version": ["ipv6"]
                                              }
                                            }
                                          },
                                          "LinkLocalIPs": {
                                            "type": "array",
                                            "items": { "type": "string" }
                                          }
                                        }
                                      },
                                      "Links": {
                                        "type": "array",
                                        "items": { "type": "string" }
                                      },
                                      "Aliases": {
                                        "type": "array",
                                        "items": { "type": "string" }
                                      },
                                      "NetworkId": { "type": "string" },
                                      "EndpointId": { "type": "string" },
                                      "Gateway": { "type": "string" },
                                      "IPAddress": {
                                        "type": "string",
                                        "x-format": {
                                          "ip": {
                                            "cidr": "optional",
                                            "version": ["ipv4"]
                                          }
                                        }
                                      },
                                      "IPPrefixLen": { "type": "integer" },
                                      "IPv6Gateway": { "type": "string" },
                                      "GlobalIPv6Address": {
                                        "type": "string",
                                        "x-format": {
                                          "ip": {
                                            "cidr": "optional",
                                            "version": ["ipv6"]
                                          }
                                        }
                                      },
                                      "GlobalIPv6PrefixLen": {
                                        "type": "integer"
                                      },
                                      "MacAddress": { "type": "string" }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "containerTwinDesiredOptions": { "type": "object" },
                      "environmentVariables": {
                        "type": "array",
                        "description": "An array of object containing environment variables",
                        "x-meta": { "swaggerType": "array" },
                        "x-constraint": { "unique": "key" },
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": { "type": "string" },
                            "value": { "type": "string" }
                          },
                          "required": ["key", "value"]
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "createdAt",
                        "default": "2021-05-21T06:02:07.766Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "updatedAt",
                        "default": "2021-05-21T06:02:07.766Z"
                      }
                    }
                  }
                }
              },
              "required": ["versions"]
            },
            "description": "Retrieve container's versions"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Container(s) not found"
          }
        }
      },
      "post": {
        "summary": "Add container version",
        "operationId": "postContainersContaineridVersions",
        "description": "containers<br/><br/>updateContainers",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / uuid_v4",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "name": "containerId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Version name",
            "name": "version",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "Image URI",
            "name": "imageUri",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "Release notes, max(3000)",
            "maxLength": 3000,
            "name": "releaseNotes",
            "in": "formData"
          },
          {
            "type": "boolean",
            "description": "Use global credentials",
            "default": true,
            "name": "useGlobalCredentials",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "Registry type",
            "enum": ["public", "private"],
            "name": "registryType",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "default": {},
            "name": "credentials",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Processor architecture",
            "enum": [
              "Linux-X86",
              "Linux-X64",
              "Linux-ARM32V7",
              "Linux-ARM64V8",
              "All"
            ],
            "name": "processorArchitecture",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "See latest Docker documentation",
            "x-meta": { "swaggerType": "object" },
            "name": "containerCreateOptions",
            "in": "formData",
            "x-type": "object",
            "x-properties": {
              "Hostname": { "type": "string" },
              "Domainname": { "type": "string" },
              "User": { "type": "string" },
              "AttachStdin": { "type": "boolean" },
              "AttachStdout": { "type": "boolean" },
              "AttachStderr": { "type": "boolean" },
              "ExposedPorts": {
                "type": "object",
                "x-properties": { "string": { "type": "object" } }
              },
              "Tty": { "type": "boolean" },
              "OpenStdin": { "type": "boolean" },
              "StdinOnce": { "type": "boolean" },
              "Env": {
                "type": "string",
                "x-alternatives": [
                  { "type": "string" },
                  {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "Env"
                  }
                ]
              },
              "Cmd": {
                "type": "string",
                "x-alternatives": [
                  { "type": "string" },
                  {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "Cmd"
                  }
                ]
              },
              "Healthcheck": {
                "type": "object",
                "x-properties": {
                  "Test": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "Test"
                  },
                  "Interval": {
                    "type": "string",
                    "enum": [0],
                    "x-alternatives": [
                      { "type": "string", "enum": [0] },
                      { "type": "integer", "minimum": 1000000 }
                    ]
                  },
                  "Timeout": {
                    "type": "string",
                    "enum": [0],
                    "x-alternatives": [
                      { "type": "string", "enum": [0] },
                      { "type": "integer", "minimum": 1000000 }
                    ]
                  },
                  "Retries": { "type": "integer", "minimum": 0 },
                  "StartPeriod": {
                    "type": "string",
                    "enum": [0],
                    "x-alternatives": [
                      { "type": "string", "enum": [0] },
                      { "type": "integer", "minimum": 1000000 }
                    ]
                  }
                }
              },
              "ArgsEscaped": { "type": "boolean" },
              "Image": { "type": "string" },
              "Volumes": {
                "type": "object",
                "x-properties": { "string": { "type": "object" } }
              },
              "WorkingDir": { "type": "string" },
              "Entrypoint": {
                "type": "array",
                "items": { "type": "string" },
                "collectionFormat": "multi",
                "x-alternatives": [
                  {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "Entrypoint"
                  },
                  { "type": "string" }
                ]
              },
              "NetworkDisabled": { "type": "boolean" },
              "MacAddress": {
                "type": "string",
                "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$"
              },
              "OnBuild": {
                "type": "array",
                "items": { "type": "string" },
                "collectionFormat": "multi",
                "name": "OnBuild"
              },
              "Labels": {
                "type": "object",
                "x-properties": { "string": { "type": "string" } }
              },
              "StopSignal": { "type": "string" },
              "StopTimeout": { "type": "integer", "minimum": 0 },
              "Shell": {
                "type": "array",
                "items": { "type": "string" },
                "collectionFormat": "multi",
                "name": "Shell"
              },
              "HostConfig": {
                "type": "object",
                "x-properties": {
                  "MaximumIOps": { "type": "integer" },
                  "MaximumIOBps": { "type": "integer" },
                  "CpuShares": { "type": "integer" },
                  "Memory": { "type": "integer" },
                  "CgroupParent": { "type": "string" },
                  "BlkioWeight": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 1000
                  },
                  "BlkioWeightDevice": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Path": { "type": "string" },
                        "Weight": { "type": "integer", "minimum": 0 }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "BlkioWeightDevice"
                  },
                  "BlkioDeviceReadBps": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Path": { "type": "string" },
                        "Rate": { "type": "integer", "minimum": 0 }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "BlkioDeviceReadBps"
                  },
                  "BlkioDeviceWriteBps": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Path": { "type": "string" },
                        "Rate": { "type": "integer", "minimum": 0 }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "BlkioDeviceWriteBps"
                  },
                  "BlkioDeviceReadIOps": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Path": { "type": "string" },
                        "Rate": { "type": "integer", "minimum": 0 }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "BlkioDeviceReadIOps"
                  },
                  "BlkioDeviceWriteIOps": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Path": { "type": "string" },
                        "Rate": { "type": "integer", "minimum": 0 }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "BlkioDeviceWriteIOps"
                  },
                  "CpuPeriod": { "type": "integer" },
                  "CpuQuota": { "type": "integer" },
                  "CpuRealtimePeriod": { "type": "integer" },
                  "CpuRealtimeRuntime": { "type": "integer" },
                  "CpusetCpus": { "type": "string" },
                  "CpusetMems": { "type": "string" },
                  "Devices": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "PathOnHost": { "type": "string" },
                        "PathInContainer": { "type": "string" },
                        "CgroupPermissions": { "type": "string" }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "Devices"
                  },
                  "DeviceCgroupRules": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "DeviceCgroupRules"
                  },
                  "DiskQuota": { "type": "integer" },
                  "KernelMemory": { "type": "integer" },
                  "MemoryReservation": { "type": "integer" },
                  "MemorySwap": { "type": "integer" },
                  "MemorySwappiness": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 100
                  },
                  "NanoCPUs": { "type": "integer" },
                  "OomKillDisable": { "type": "boolean" },
                  "PidsLimit": { "type": "integer" },
                  "Ulimits": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Name": { "type": "string" },
                        "Soft": { "type": "integer" },
                        "Hard": { "type": "integer" }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "Ulimits"
                  },
                  "CpuCount": { "type": "integer" },
                  "CpuPercent": { "type": "integer" },
                  "IOMaximumIOps": { "type": "integer" },
                  "IOMaximumBandwidth": { "type": "integer" },
                  "Binds": {
                    "type": "array",
                    "items": { "type": "string", "pattern": ".+:.+(:.+)?" },
                    "collectionFormat": "multi",
                    "name": "Binds"
                  },
                  "ContainerIDFile": { "type": "string" },
                  "LogConfig": {
                    "type": "object",
                    "x-properties": {
                      "Type": {
                        "type": "string",
                        "enum": [
                          "json-file",
                          "syslog",
                          "journald",
                          "gelf",
                          "fluentd",
                          "awslogs",
                          "splunk",
                          "etwlogs",
                          "none"
                        ]
                      },
                      "Config": {
                        "type": "object",
                        "x-properties": { "string": { "type": "string" } }
                      }
                    }
                  },
                  "NetworkMode": {
                    "type": "string",
                    "enum": ["bridge", "host", "none"],
                    "x-alternatives": [
                      { "type": "string", "enum": ["bridge", "host", "none"] },
                      { "type": "string", "pattern": "^container:.*$" }
                    ]
                  },
                  "PortBindings": {
                    "type": "object",
                    "x-properties": {
                      "string": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "x-properties": {
                            "HostIp": { "type": "string" },
                            "HostPort": { "type": "string" }
                          }
                        },
                        "collectionFormat": "multi",
                        "name": "string"
                      }
                    }
                  },
                  "RestartPolicy": {
                    "type": "object",
                    "x-properties": {
                      "Name": {
                        "type": "string",
                        "enum": ["always", "unless-stopped", "on-failure"]
                      },
                      "MaximumRetryCount": { "type": "integer" }
                    }
                  },
                  "AutoRemove": { "type": "boolean" },
                  "VolumeDriver": { "type": "string" },
                  "VolumesFrom": {
                    "type": "array",
                    "items": { "type": "string", "pattern": "^.+(:(ro|rw))?$" },
                    "collectionFormat": "multi",
                    "name": "VolumesFrom"
                  },
                  "Mounts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Target": { "type": "string" },
                        "Source": { "type": "string" },
                        "Type": {
                          "type": "string",
                          "enum": ["bind", "volume", "tmpfs"]
                        },
                        "ReadOnly": { "type": "boolean" },
                        "Consistency": { "type": "string" },
                        "BindOptions": {
                          "type": "object",
                          "x-properties": {
                            "Propagation": {
                              "type": "string",
                              "enum": [
                                "private",
                                "rprivate",
                                "shared",
                                "rshared",
                                "slave",
                                "rslave"
                              ]
                            }
                          }
                        },
                        "VolumeOptions": {
                          "type": "object",
                          "x-properties": {
                            "NoCopy": { "type": "boolean" },
                            "Labels": {
                              "type": "object",
                              "x-properties": { "string": { "type": "string" } }
                            },
                            "DriverConfig": {
                              "type": "object",
                              "x-properties": {
                                "Name": { "type": "string" },
                                "Options": {
                                  "type": "object",
                                  "x-properties": {
                                    "string": { "type": "string" }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "TmpfsOptions": {
                          "type": "object",
                          "x-properties": {
                            "SizeBytes": { "type": "integer" },
                            "Mode": { "type": "integer" }
                          }
                        }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "Mounts"
                  },
                  "CapAdd": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "CapAdd"
                  },
                  "CapDrop": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "CapDrop"
                  },
                  "Dns": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "Dns"
                  },
                  "DnsOptions": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "DnsOptions"
                  },
                  "DnsSearch": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "DnsSearch"
                  },
                  "ExtraHosts": {
                    "type": "array",
                    "items": { "type": "string", "pattern": "^.+:.+$" },
                    "collectionFormat": "multi",
                    "name": "ExtraHosts"
                  },
                  "GroupAdd": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "GroupAdd"
                  },
                  "IpcMode": { "type": "string" },
                  "Cgroup": { "type": "string" },
                  "Links": {
                    "type": "array",
                    "items": { "type": "string", "pattern": "^.+:.+$" },
                    "collectionFormat": "multi",
                    "name": "Links"
                  },
                  "OomScoreAdj": { "type": "integer" },
                  "PidMode": { "type": "string", "pattern": "^.+(:.+)?$" },
                  "Privileged": { "type": "boolean" },
                  "PublishAllPorts": { "type": "boolean" },
                  "ReadonlyRootfs": { "type": "boolean" },
                  "SecurityOpt": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "SecurityOpt"
                  },
                  "StorageOpt": {
                    "type": "object",
                    "x-properties": { "string": { "type": "string" } }
                  },
                  "Tmpfs": {
                    "type": "object",
                    "x-properties": { "string": { "type": "string" } }
                  },
                  "UTSMode": { "type": "string" },
                  "UsernsMode": { "type": "string" },
                  "ShmSize": { "type": "integer", "minimum": 0 },
                  "Sysctls": {
                    "type": "object",
                    "x-properties": { "string": { "type": "string" } }
                  },
                  "Runtime": { "type": "string" },
                  "ConsoleSize": {
                    "type": "array",
                    "x-constraint": { "length": 2 },
                    "items": { "type": "integer", "minimum": 0 },
                    "collectionFormat": "multi",
                    "name": "ConsoleSize"
                  },
                  "Isolation": {
                    "type": "string",
                    "enum": ["default", "process", "hyperv"]
                  }
                }
              },
              "NetworkingConfig": {
                "type": "object",
                "x-properties": {
                  "EndpointsConfig": {
                    "type": "object",
                    "x-properties": {
                      "string": {
                        "type": "object",
                        "x-properties": {
                          "IPAMConfig": {
                            "type": "object",
                            "x-properties": {
                              "IPv4Address": {
                                "type": "string",
                                "x-format": {
                                  "ip": {
                                    "cidr": "optional",
                                    "version": ["ipv4"]
                                  }
                                }
                              },
                              "IPv6Address": {
                                "type": "string",
                                "x-format": {
                                  "ip": {
                                    "cidr": "optional",
                                    "version": ["ipv6"]
                                  }
                                }
                              },
                              "LinkLocalIPs": {
                                "type": "array",
                                "items": { "type": "string" },
                                "collectionFormat": "multi",
                                "name": "LinkLocalIPs"
                              }
                            }
                          },
                          "Links": {
                            "type": "array",
                            "items": { "type": "string" },
                            "collectionFormat": "multi",
                            "name": "Links"
                          },
                          "Aliases": {
                            "type": "array",
                            "items": { "type": "string" },
                            "collectionFormat": "multi",
                            "name": "Aliases"
                          },
                          "NetworkId": { "type": "string" },
                          "EndpointId": { "type": "string" },
                          "Gateway": { "type": "string" },
                          "IPAddress": {
                            "type": "string",
                            "x-format": {
                              "ip": { "cidr": "optional", "version": ["ipv4"] }
                            }
                          },
                          "IPPrefixLen": { "type": "integer" },
                          "IPv6Gateway": { "type": "string" },
                          "GlobalIPv6Address": {
                            "type": "string",
                            "x-format": {
                              "ip": { "cidr": "optional", "version": ["ipv6"] }
                            }
                          },
                          "GlobalIPv6PrefixLen": { "type": "integer" },
                          "MacAddress": { "type": "string" }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "string",
            "description": "JSON / See Azure documentation",
            "x-meta": { "swaggerType": "object" },
            "name": "containerTwinDesiredOptions",
            "in": "formData",
            "x-type": "object"
          },
          {
            "type": "array",
            "description": "An array of object containing environment variables",
            "x-meta": { "swaggerType": "array" },
            "x-constraint": { "unique": "key" },
            "items": {
              "type": "string",
              "x-type": "object",
              "x-properties": {
                "key": { "type": "string" },
                "value": { "type": "string" }
              }
            },
            "collectionFormat": "multi",
            "name": "environmentVariables",
            "in": "formData"
          }
        ],
        "consumes": ["multipart/form-data"],
        "tags": ["containers"],
        "security": [{ "jwt": [] }],
        "responses": {
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Random uuid v4.",
                  "default": "7adb258e-3ee7-4299-bcb9-513fab03f7d4",
                  "x-format": { "guid": { "version": "uuidv4" } }
                },
                "version": { "type": "string", "description": "Version name" },
                "useGlobalCredentials": {
                  "type": "boolean",
                  "description": "Use global credentials"
                },
                "releaseNotes": {
                  "type": "string",
                  "description": "Release notes"
                },
                "imageUri": { "type": "string", "description": "Image URI" },
                "registryType": {
                  "type": "string",
                  "description": "Registry type",
                  "enum": ["public", "private"]
                },
                "credentials": {
                  "type": "object",
                  "properties": {
                    "address": { "type": "string" },
                    "username": { "type": "string" }
                  }
                },
                "processorArchitecture": {
                  "type": "string",
                  "description": "Processor architecture",
                  "enum": [
                    "Linux-X86",
                    "Linux-X64",
                    "Linux-ARM32V7",
                    "Linux-ARM64V8",
                    "All"
                  ]
                },
                "containerCreateOptions": {
                  "type": "object",
                  "description": "See latest Docker documentation",
                  "x-meta": { "swaggerType": "object" },
                  "properties": {
                    "Hostname": { "type": "string" },
                    "Domainname": { "type": "string" },
                    "User": { "type": "string" },
                    "AttachStdin": { "type": "boolean" },
                    "AttachStdout": { "type": "boolean" },
                    "AttachStderr": { "type": "boolean" },
                    "ExposedPorts": {
                      "type": "object",
                      "properties": { "string": { "type": "object" } }
                    },
                    "Tty": { "type": "boolean" },
                    "OpenStdin": { "type": "boolean" },
                    "StdinOnce": { "type": "boolean" },
                    "Env": {
                      "type": "string",
                      "x-alternatives": [
                        { "type": "string" },
                        { "type": "array", "items": { "type": "string" } }
                      ]
                    },
                    "Cmd": {
                      "type": "string",
                      "x-alternatives": [
                        { "type": "string" },
                        { "type": "array", "items": { "type": "string" } }
                      ]
                    },
                    "Healthcheck": {
                      "type": "object",
                      "properties": {
                        "Test": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "Interval": {
                          "type": "string",
                          "enum": [0],
                          "x-alternatives": [
                            { "type": "string", "enum": [0] },
                            { "type": "integer", "minimum": 1000000 }
                          ]
                        },
                        "Timeout": {
                          "type": "string",
                          "enum": [0],
                          "x-alternatives": [
                            { "type": "string", "enum": [0] },
                            { "type": "integer", "minimum": 1000000 }
                          ]
                        },
                        "Retries": { "type": "integer", "minimum": 0 },
                        "StartPeriod": {
                          "type": "string",
                          "enum": [0],
                          "x-alternatives": [
                            { "type": "string", "enum": [0] },
                            { "type": "integer", "minimum": 1000000 }
                          ]
                        }
                      }
                    },
                    "ArgsEscaped": { "type": "boolean" },
                    "Image": { "type": "string" },
                    "Volumes": {
                      "type": "object",
                      "properties": { "string": { "type": "object" } }
                    },
                    "WorkingDir": { "type": "string" },
                    "Entrypoint": {
                      "x-alternatives": [
                        { "type": "array", "items": { "type": "string" } },
                        { "type": "string" }
                      ],
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "NetworkDisabled": { "type": "boolean" },
                    "MacAddress": {
                      "type": "string",
                      "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$"
                    },
                    "OnBuild": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "Labels": {
                      "type": "object",
                      "properties": { "string": { "type": "string" } }
                    },
                    "StopSignal": { "type": "string" },
                    "StopTimeout": { "type": "integer", "minimum": 0 },
                    "Shell": { "type": "array", "items": { "type": "string" } },
                    "HostConfig": {
                      "type": "object",
                      "properties": {
                        "MaximumIOps": { "type": "integer" },
                        "MaximumIOBps": { "type": "integer" },
                        "CpuShares": { "type": "integer" },
                        "Memory": { "type": "integer" },
                        "CgroupParent": { "type": "string" },
                        "BlkioWeight": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 1000
                        },
                        "BlkioWeightDevice": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Weight": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceReadBps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceWriteBps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceReadIOps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceWriteIOps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "CpuPeriod": { "type": "integer" },
                        "CpuQuota": { "type": "integer" },
                        "CpuRealtimePeriod": { "type": "integer" },
                        "CpuRealtimeRuntime": { "type": "integer" },
                        "CpusetCpus": { "type": "string" },
                        "CpusetMems": { "type": "string" },
                        "Devices": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "PathOnHost": { "type": "string" },
                              "PathInContainer": { "type": "string" },
                              "CgroupPermissions": { "type": "string" }
                            }
                          }
                        },
                        "DeviceCgroupRules": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "DiskQuota": { "type": "integer" },
                        "KernelMemory": { "type": "integer" },
                        "MemoryReservation": { "type": "integer" },
                        "MemorySwap": { "type": "integer" },
                        "MemorySwappiness": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 100
                        },
                        "NanoCPUs": { "type": "integer" },
                        "OomKillDisable": { "type": "boolean" },
                        "PidsLimit": { "type": "integer" },
                        "Ulimits": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Name": { "type": "string" },
                              "Soft": { "type": "integer" },
                              "Hard": { "type": "integer" }
                            }
                          }
                        },
                        "CpuCount": { "type": "integer" },
                        "CpuPercent": { "type": "integer" },
                        "IOMaximumIOps": { "type": "integer" },
                        "IOMaximumBandwidth": { "type": "integer" },
                        "Binds": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "pattern": ".+:.+(:.+)?"
                          }
                        },
                        "ContainerIDFile": { "type": "string" },
                        "LogConfig": {
                          "type": "object",
                          "properties": {
                            "Type": {
                              "type": "string",
                              "enum": [
                                "json-file",
                                "syslog",
                                "journald",
                                "gelf",
                                "fluentd",
                                "awslogs",
                                "splunk",
                                "etwlogs",
                                "none"
                              ]
                            },
                            "Config": {
                              "type": "object",
                              "properties": { "string": { "type": "string" } }
                            }
                          }
                        },
                        "NetworkMode": {
                          "type": "string",
                          "enum": ["bridge", "host", "none"],
                          "x-alternatives": [
                            {
                              "type": "string",
                              "enum": ["bridge", "host", "none"]
                            },
                            { "type": "string", "pattern": "^container:.*$" }
                          ]
                        },
                        "PortBindings": {
                          "type": "object",
                          "properties": {
                            "string": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "HostIp": { "type": "string" },
                                  "HostPort": { "type": "string" }
                                }
                              }
                            }
                          }
                        },
                        "RestartPolicy": {
                          "type": "object",
                          "properties": {
                            "Name": {
                              "type": "string",
                              "enum": ["always", "unless-stopped", "on-failure"]
                            },
                            "MaximumRetryCount": { "type": "integer" }
                          }
                        },
                        "AutoRemove": { "type": "boolean" },
                        "VolumeDriver": { "type": "string" },
                        "VolumesFrom": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "pattern": "^.+(:(ro|rw))?$"
                          }
                        },
                        "Mounts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Target": { "type": "string" },
                              "Source": { "type": "string" },
                              "Type": {
                                "type": "string",
                                "enum": ["bind", "volume", "tmpfs"]
                              },
                              "ReadOnly": { "type": "boolean" },
                              "Consistency": { "type": "string" },
                              "BindOptions": {
                                "type": "object",
                                "properties": {
                                  "Propagation": {
                                    "type": "string",
                                    "enum": [
                                      "private",
                                      "rprivate",
                                      "shared",
                                      "rshared",
                                      "slave",
                                      "rslave"
                                    ]
                                  }
                                }
                              },
                              "VolumeOptions": {
                                "type": "object",
                                "properties": {
                                  "NoCopy": { "type": "boolean" },
                                  "Labels": {
                                    "type": "object",
                                    "properties": {
                                      "string": { "type": "string" }
                                    }
                                  },
                                  "DriverConfig": {
                                    "type": "object",
                                    "properties": {
                                      "Name": { "type": "string" },
                                      "Options": {
                                        "type": "object",
                                        "properties": {
                                          "string": { "type": "string" }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "TmpfsOptions": {
                                "type": "object",
                                "properties": {
                                  "SizeBytes": { "type": "integer" },
                                  "Mode": { "type": "integer" }
                                }
                              }
                            }
                          }
                        },
                        "CapAdd": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "CapDrop": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "Dns": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "DnsOptions": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "DnsSearch": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "ExtraHosts": {
                          "type": "array",
                          "items": { "type": "string", "pattern": "^.+:.+$" }
                        },
                        "GroupAdd": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "IpcMode": { "type": "string" },
                        "Cgroup": { "type": "string" },
                        "Links": {
                          "type": "array",
                          "items": { "type": "string", "pattern": "^.+:.+$" }
                        },
                        "OomScoreAdj": { "type": "integer" },
                        "PidMode": {
                          "type": "string",
                          "pattern": "^.+(:.+)?$"
                        },
                        "Privileged": { "type": "boolean" },
                        "PublishAllPorts": { "type": "boolean" },
                        "ReadonlyRootfs": { "type": "boolean" },
                        "SecurityOpt": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "StorageOpt": {
                          "type": "object",
                          "properties": { "string": { "type": "string" } }
                        },
                        "Tmpfs": {
                          "type": "object",
                          "properties": { "string": { "type": "string" } }
                        },
                        "UTSMode": { "type": "string" },
                        "UsernsMode": { "type": "string" },
                        "ShmSize": { "type": "integer", "minimum": 0 },
                        "Sysctls": {
                          "type": "object",
                          "properties": { "string": { "type": "string" } }
                        },
                        "Runtime": { "type": "string" },
                        "ConsoleSize": {
                          "type": "array",
                          "x-constraint": { "length": 2 },
                          "items": { "type": "integer", "minimum": 0 }
                        },
                        "Isolation": {
                          "type": "string",
                          "enum": ["default", "process", "hyperv"]
                        }
                      }
                    },
                    "NetworkingConfig": {
                      "type": "object",
                      "properties": {
                        "EndpointsConfig": {
                          "type": "object",
                          "properties": {
                            "string": {
                              "type": "object",
                              "properties": {
                                "IPAMConfig": {
                                  "type": "object",
                                  "properties": {
                                    "IPv4Address": {
                                      "type": "string",
                                      "x-format": {
                                        "ip": {
                                          "cidr": "optional",
                                          "version": ["ipv4"]
                                        }
                                      }
                                    },
                                    "IPv6Address": {
                                      "type": "string",
                                      "x-format": {
                                        "ip": {
                                          "cidr": "optional",
                                          "version": ["ipv6"]
                                        }
                                      }
                                    },
                                    "LinkLocalIPs": {
                                      "type": "array",
                                      "items": { "type": "string" }
                                    }
                                  }
                                },
                                "Links": {
                                  "type": "array",
                                  "items": { "type": "string" }
                                },
                                "Aliases": {
                                  "type": "array",
                                  "items": { "type": "string" }
                                },
                                "NetworkId": { "type": "string" },
                                "EndpointId": { "type": "string" },
                                "Gateway": { "type": "string" },
                                "IPAddress": {
                                  "type": "string",
                                  "x-format": {
                                    "ip": {
                                      "cidr": "optional",
                                      "version": ["ipv4"]
                                    }
                                  }
                                },
                                "IPPrefixLen": { "type": "integer" },
                                "IPv6Gateway": { "type": "string" },
                                "GlobalIPv6Address": {
                                  "type": "string",
                                  "x-format": {
                                    "ip": {
                                      "cidr": "optional",
                                      "version": ["ipv6"]
                                    }
                                  }
                                },
                                "GlobalIPv6PrefixLen": { "type": "integer" },
                                "MacAddress": { "type": "string" }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "containerTwinDesiredOptions": { "type": "object" },
                "environmentVariables": {
                  "type": "array",
                  "description": "An array of object containing environment variables",
                  "x-meta": { "swaggerType": "array" },
                  "x-constraint": { "unique": "key" },
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": { "type": "string" },
                      "value": { "type": "string" }
                    },
                    "required": ["key", "value"]
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.766Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.766Z"
                }
              }
            },
            "description": "Container version created"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Container(s) not found"
          }
        }
      }
    },
    "/dashboards/{dashboardId}/panels": {
      "get": {
        "summary": "Get all dashboard panels",
        "operationId": "getDashboardsDashboardidPanels",
        "description": "dashboards<br/><br/>viewDashboards",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "dashboardId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["dashboards"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "dashboardPanels": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The id property defines the unique id / objectId",
                        "pattern": "^[0-9a-fA-F]{24}$"
                      },
                      "title": { "type": "string" },
                      "layoutPosX": { "type": "number" },
                      "layoutPosY": { "type": "number" },
                      "layoutWidth": { "type": "number" },
                      "layoutHeight": { "type": "number" },
                      "type": { "type": "string" },
                      "visualisation": { "type": "object" },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "createdAt",
                        "default": "2021-05-21T06:02:08.141Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "updatedAt",
                        "default": "2021-05-21T06:02:08.141Z"
                      }
                    },
                    "required": ["id"]
                  }
                }
              },
              "required": ["dashboardPanels"]
            },
            "description": "Return panel list"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Dashboard(s) not found"
          }
        }
      },
      "post": {
        "summary": "Create a dashboard panel",
        "operationId": "postDashboardsDashboardidPanels",
        "description": "dashboards<br/><br/>createDashboards",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "dashboardId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": { "type": "string", "maxLength": 255 },
                "layoutPosX": { "type": "number", "minimum": 0 },
                "layoutPosY": { "type": "number", "minimum": 0 },
                "layoutWidth": { "type": "number", "minimum": 0 },
                "layoutHeight": { "type": "number", "minimum": 0 },
                "type": { "type": "string", "maxLength": 255 },
                "visualisation": { "type": "object" }
              },
              "required": [
                "title",
                "layoutPosX",
                "layoutPosY",
                "layoutWidth",
                "layoutHeight"
              ]
            }
          }
        ],
        "tags": ["dashboards"],
        "security": [{ "jwt": [] }],
        "responses": {
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "title": { "type": "string" },
                "layoutPosX": { "type": "number" },
                "layoutPosY": { "type": "number" },
                "layoutWidth": { "type": "number" },
                "layoutHeight": { "type": "number" },
                "type": { "type": "string" },
                "visualisation": { "type": "object" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:08.141Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:08.141Z"
                }
              },
              "required": ["id"]
            },
            "description": "Dashboard panel created"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Dashboard(s) not found"
          }
        }
      }
    },
    "/devices/{deviceId}/remote": {
      "get": {
        "summary": "Get remote device status",
        "operationId": "getDevicesDeviceidRemote",
        "description": "devices<br/><br/>remoteDevices",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["remoteDevices"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "status": { "type": "string" },
                "connected": { "type": "string" }
              },
              "required": ["status", "connected"]
            },
            "description": "Retrieve status"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device(s) not found"
          }
        }
      },
      "post": {
        "summary": "Create remote device",
        "operationId": "postDevicesDeviceidRemote",
        "description": "devices<br/><br/>remoteDevices",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "Remote status",
                  "enum": ["enable", "disable"]
                }
              },
              "required": ["status"]
            }
          }
        ],
        "tags": ["remoteDevices"],
        "security": [{ "jwt": [] }],
        "responses": {
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "deviceId": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "name": { "type": "string" },
                "status": { "type": "string", "enum": ["enabled", "disabled"] }
              },
              "required": ["deviceId", "status"]
            },
            "description": "Remote device created"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device(s) not found"
          }
        }
      }
    },
    "/devices/{deviceId}/notifications": {
      "get": {
        "summary": "Get list of Device Notifications by deviceId",
        "operationId": "getDevicesDeviceidNotifications",
        "description": "devices<br/><br/>viewDeviceNotifications",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "min(1), null and empty values are not allowed",
            "default": 1,
            "minimum": 1,
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "min(1) / max is set by config pageEntries, null and empty values are not allowed",
            "default": 10,
            "minimum": 1,
            "maximum": 5000,
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "default": "createdAt",
            "enum": ["createdAt", "updatedAt"],
            "name": "sortBy",
            "in": "query"
          },
          {
            "type": "string",
            "description": "valid - \"asc\" and \"desc\", null and empty string not allowed",
            "default": "asc",
            "enum": ["asc", "desc"],
            "name": "sortOrder",
            "in": "query"
          }
        ],
        "tags": ["deviceNotifications"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "type": "object",
                  "properties": {
                    "offset": { "type": "integer" },
                    "limit": { "type": "integer" },
                    "total": { "type": "integer" }
                  },
                  "required": ["offset", "limit", "total"]
                },
                "notifications": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The id property defines the unique id / objectId",
                        "pattern": "^[0-9a-fA-F]{24}$"
                      },
                      "deviceId": {
                        "type": "string",
                        "description": "The id property defines the unique id / objectId",
                        "pattern": "^[0-9a-fA-F]{24}$"
                      },
                      "serialNumber": { "type": "string" },
                      "level": {
                        "type": "string",
                        "description": "Notification level",
                        "enum": ["Information", "Warning", "Error"]
                      },
                      "message": { "type": "string", "description": "Message" },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "createdAt",
                        "default": "2021-05-21T06:02:08.156Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "updatedAt",
                        "default": "2021-05-21T06:02:08.156Z"
                      }
                    },
                    "required": ["id", "deviceId", "level", "message"]
                  }
                }
              }
            },
            "description": "Device Notification List"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device(s) not found"
          }
        }
      },
      "post": {
        "summary": "Create Device Notification",
        "operationId": "postDevicesDeviceidNotifications",
        "description": "devices<br/><br/>createDeviceNotifications",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "serialNumber": {
                  "type": "string",
                  "description": "Serial number"
                },
                "level": {
                  "type": "string",
                  "description": "Notification level",
                  "enum": ["Information", "Warning", "Error"]
                },
                "message": { "type": "string", "description": "Message" }
              },
              "required": ["serialNumber", "level", "message"]
            }
          }
        ],
        "tags": ["deviceNotifications"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "deviceId": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "serialNumber": { "type": "string" },
                "level": {
                  "type": "string",
                  "description": "Notification level",
                  "enum": ["Information", "Warning", "Error"]
                },
                "message": { "type": "string", "description": "Message" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:08.156Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:08.156Z"
                }
              },
              "required": ["id", "deviceId", "level", "message"]
            },
            "description": "Device Notification Created"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device not found or no notifications for the device"
          }
        }
      },
      "delete": {
        "summary": "Delete all device notifications",
        "operationId": "deleteDevicesDeviceidNotifications",
        "description": "devices<br/><br/>deleteDeviceNotifications",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["deviceNotifications"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "description": "All Device notifications deleted",
            "schema": { "type": "string" }
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device(s) not found"
          }
        }
      }
    },
    "/devices/{deviceId}/custom-fields": {
      "get": {
        "summary": "Get all custom fields from device",
        "operationId": "getDevicesDeviceidCustomfields",
        "description": "devices<br/><br/>viewDeviceDetails",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["deviceCustomFields"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "fields": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "fieldId": {
                        "type": "string",
                        "description": "Custom field Id"
                      },
                      "fieldValue": {
                        "type": "string",
                        "description": "Custom field value"
                      }
                    },
                    "required": ["fieldId", "fieldValue"]
                  }
                }
              },
              "required": ["fields"]
            },
            "description": "Return custom fields"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device(s) not found"
          }
        }
      },
      "post": {
        "summary": "Add custom fields to a device",
        "operationId": "postDevicesDeviceidCustomfields",
        "description": "devices<br/><br/>updateDevices",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "fieldId": {
                  "type": "string",
                  "description": "Custom field Id"
                },
                "fieldValue": {
                  "type": "string",
                  "description": "Custom field value"
                }
              },
              "required": ["fieldId", "fieldValue"]
            }
          }
        ],
        "tags": ["deviceCustomFields"],
        "security": [{ "jwt": [] }],
        "responses": {
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "deviceId": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "fieldId": {
                  "type": "string",
                  "description": "Custom field Id"
                },
                "fieldValue": { "type": "string" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:08.516Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:08.516Z"
                }
              },
              "required": ["id", "deviceId", "fieldId", "fieldValue"]
            },
            "description": "Custom Field created"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device(s) not found"
          }
        }
      }
    },
    "/devices/{deviceId}/hardware-info": {
      "get": {
        "summary": "Get device hardware information by id",
        "operationId": "getDevicesDeviceidHardwareinfo",
        "description": "devices<br/><br/>viewDeviceDetails",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["devices"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": { "type": "object" },
            "description": "Return device hardware information"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device(s) not found"
          }
        }
      }
    },
    "/devices/{deviceId}/messages": {
      "get": {
        "summary": "Gets device messages",
        "operationId": "getDevicesDeviceidMessages",
        "description": "devices<br/><br/>viewDeviceMessages",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          { "type": "string", "default": "#", "name": "topic", "in": "query" },
          {
            "type": "string",
            "format": "date-time",
            "description": "The date format has to be in UTC and ISO 8601 format",
            "name": "from",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "format": "date-time",
            "description": "The date format has to be in UTC and ISO 8601 format",
            "name": "to",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Used to query next page",
            "name": "nextPage",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "min(1) / max(100), null and empty values are not allowed",
            "default": 10,
            "minimum": 1,
            "maximum": 100,
            "name": "limit",
            "in": "query"
          }
        ],
        "tags": ["messages"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "items": { "type": "array", "items": { "type": "object" } }
                  }
                },
                "pagination": {
                  "type": "object",
                  "properties": {
                    "nextPage": { "type": "string" },
                    "limit": { "type": "integer" },
                    "total": { "type": "integer" }
                  },
                  "required": ["nextPage", "limit", "total"]
                }
              }
            },
            "description": "Retrieve device messages"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Topic or deviceId not found"
          }
        }
      }
    },
    "/groups/{groupId}/items": {
      "get": {
        "summary": "Get group items by groupId",
        "operationId": "getGroupsGroupidItems",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "groupId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "min(1), null and empty values are not allowed",
            "default": 1,
            "minimum": 1,
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "min(1) / max is set by config pageEntries, null and empty values are not allowed",
            "default": 10,
            "minimum": 1,
            "maximum": 5000,
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sort by \"name\" or other resource property, null not allowed",
            "default": "id",
            "name": "sortBy",
            "in": "query"
          },
          {
            "type": "string",
            "description": "valid - \"asc\" and \"desc\", null and empty string not allowed",
            "default": "asc",
            "enum": ["asc", "desc"],
            "name": "sortOrder",
            "in": "query"
          }
        ],
        "tags": ["groups"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "type": "object",
                  "properties": {
                    "offset": { "type": "integer" },
                    "limit": { "type": "integer" },
                    "total": { "type": "integer" }
                  },
                  "required": ["offset", "limit", "total"]
                },
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string" },
                      "organisationId": { "type": "number" },
                      "organisationName": { "type": "string" },
                      "deviceType": {
                        "type": "string",
                        "description": "Device types",
                        "enum": ["standard", "sensorEDGE"]
                      },
                      "serialNumber": { "type": "string" },
                      "activationCode": { "type": "string" },
                      "enabled": { "type": "boolean" },
                      "onBoarded": { "type": "boolean" },
                      "name": { "type": "string" },
                      "firmwareVersion": { "type": "string" },
                      "modelName": { "type": "string" },
                      "status": {
                        "type": "object",
                        "properties": {
                          "color": { "type": "string" },
                          "description": { "type": "string" }
                        },
                        "required": ["color", "description"]
                      },
                      "geolocation": {
                        "type": "object",
                        "description": "Geolocation",
                        "properties": {
                          "longitude": { "type": "string" },
                          "latitude": { "type": "string" }
                        },
                        "required": ["longitude", "latitude"]
                      },
                      "timeToLiveSecs": { "type": "number", "default": 120 },
                      "proxySettings": {
                        "type": "object",
                        "properties": {
                          "useHttpsProxySettings": {
                            "type": "boolean",
                            "default": false
                          },
                          "noProxy": { "type": "string" },
                          "httpsProxy": {
                            "type": "object",
                            "properties": { "uri": { "type": "string" } }
                          },
                          "useHttpProxySettings": {
                            "type": "boolean",
                            "default": false
                          },
                          "httpProxy": {
                            "type": "object",
                            "properties": { "uri": { "type": "string" } }
                          }
                        }
                      },
                      "remoteSettings": {
                        "type": "object",
                        "properties": {
                          "host": {
                            "type": "string",
                            "description": "Host where the webserver is runnign"
                          },
                          "httpPort": {
                            "type": "number",
                            "description": "Port where the webserver is listening to"
                          },
                          "services": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "service": {
                                  "type": "string",
                                  "enum": ["ssh", "rdp", "vnc", "http"]
                                },
                                "edgePort": { "type": "number" },
                                "localPort": { "type": "number" },
                                "forward": {
                                  "type": "boolean",
                                  "default": false
                                },
                                "destinationIp": {
                                  "type": "string",
                                  "x-format": {
                                    "ip": {
                                      "cidr": "forbidden",
                                      "version": ["ipv4"]
                                    }
                                  }
                                },
                                "destinationPort": { "type": "number" }
                              }
                            }
                          }
                        }
                      },
                      "description": { "type": "string" },
                      "tags": { "type": "string" },
                      "properties": {
                        "type": "array",
                        "description": "Device properties",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Property name"
                            },
                            "value": {
                              "type": "string",
                              "description": "Property value"
                            }
                          },
                          "required": ["name", "value"]
                        }
                      },
                      "desiredProperties": {
                        "type": "object",
                        "properties": {
                          "string": {
                            "type": "number",
                            "x-alternatives": [
                              { "type": "number" },
                              {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              { "type": "string" },
                              { "type": "boolean" },
                              { "type": "string" }
                            ]
                          }
                        }
                      },
                      "reportedProperties": {
                        "type": "object",
                        "properties": {
                          "string": {
                            "type": "number",
                            "x-alternatives": [
                              { "type": "number" },
                              {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              { "type": "string" },
                              { "type": "boolean" },
                              { "type": "string" }
                            ]
                          }
                        }
                      },
                      "equipmentId": { "type": "string" },
                      "hardwareInfo": { "type": "object" },
                      "upstreamProtocol": {
                        "type": "string",
                        "enum": ["MQTT", "AMQP", "MQTTWS", "AMQPWS"]
                      },
                      "onBoardedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "onBoardedAt",
                        "default": "2021-05-21T06:02:07.219Z"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "createdAt",
                        "default": "2021-05-21T06:02:07.219Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "updatedAt",
                        "default": "2021-05-21T06:02:07.219Z"
                      }
                    },
                    "required": [
                      "id",
                      "organisationId",
                      "serialNumber",
                      "enabled",
                      "onBoarded",
                      "status"
                    ]
                  }
                }
              },
              "required": ["items"]
            },
            "description": "Retrieve group items"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid token"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Requesting user has invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Group(s) not found"
          }
        }
      }
    },
    "/tenants/organisations/{tenantId}": {
      "get": {
        "summary": "Get a tenant by id",
        "operationId": "getTenantsOrganisationsTenantid",
        "description": "tenants<br/><br/>viewTenants",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "tenantId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["tenants"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer",
                  "minimum": 1
                },
                "parentId": { "type": "number" },
                "name": { "type": "string" },
                "admin": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The id property defines the unique id of type integer",
                      "minimum": 1
                    },
                    "fullName": { "type": "string" },
                    "email": { "type": "string", "x-format": { "email": true } }
                  },
                  "required": ["id", "fullName", "email"]
                },
                "organisationStatus": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The id property defines the unique id of type integer",
                      "minimum": 1
                    },
                    "description": { "type": "string" }
                  },
                  "required": ["id", "description"]
                },
                "phoneNumber": { "type": "string" },
                "street": { "type": "string" },
                "houseNumber": { "type": "string" },
                "addressSupplement": { "type": "string" },
                "zipCode": { "type": "string" },
                "city": { "type": "string" },
                "state": { "type": "string" },
                "country": { "type": "string" },
                "notes": { "type": "string" },
                "childrenInheritManifest": { "type": "boolean" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.953Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.953Z"
                },
                "limits": {
                  "type": "object",
                  "properties": {
                    "childOrganisationsLimit": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 10000,
                      "x-alternatives": [
                        { "type": "number", "minimum": 0, "maximum": 10000 },
                        { "type": "string", "enum": ["Unlimited"] }
                      ]
                    },
                    "usersLimit": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 10000,
                      "x-alternatives": [
                        { "type": "number", "minimum": 0, "maximum": 10000 },
                        { "type": "string", "enum": ["Unlimited"] }
                      ]
                    },
                    "devicesLimit": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 10000,
                      "x-alternatives": [
                        { "type": "number", "minimum": 0, "maximum": 10000 },
                        { "type": "string", "enum": ["Unlimited"] }
                      ]
                    },
                    "keysLimit": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 10000,
                      "x-alternatives": [
                        { "type": "number", "minimum": 0, "maximum": 10000 },
                        { "type": "string", "enum": ["Unlimited"] }
                      ]
                    },
                    "keysRequestMonthlyLimit": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 10000,
                      "x-alternatives": [
                        { "type": "number", "minimum": 0, "maximum": 10000 },
                        { "type": "string", "enum": ["Unlimited"] }
                      ]
                    }
                  }
                },
                "counters": {
                  "type": "object",
                  "properties": {
                    "childOrganisationsCounter": { "type": "number" },
                    "usersCounter": { "type": "number" },
                    "devicesCounter": { "type": "number" },
                    "keysCounter": { "type": "number" }
                  }
                }
              },
              "required": [
                "id",
                "parentId",
                "name",
                "phoneNumber",
                "street",
                "houseNumber",
                "zipCode",
                "city",
                "country",
                "childrenInheritManifest",
                "createdAt",
                "updatedAt"
              ]
            },
            "description": "Tenants list"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Tenant(s) not found"
          }
        }
      },
      "put": {
        "summary": "Update a tenant",
        "operationId": "putTenantsOrganisationsTenantid",
        "description": "tenants<br/><br/>updateTenants",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "tenantId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "Status",
                  "default": "enabled",
                  "enum": ["enabled", "disabled"]
                },
                "childOrganisationsLimit": {
                  "type": "number",
                  "description": "Child organisations limit: min(0), max(10000)",
                  "minimum": 0,
                  "maximum": 10000
                },
                "usersLimit": {
                  "type": "number",
                  "description": "Users limit: min(0), max(10000)",
                  "minimum": 0,
                  "maximum": 10000
                },
                "devicesLimit": {
                  "type": "number",
                  "description": "Devices limit: min(0), max(10000)",
                  "minimum": 0,
                  "maximum": 10000
                },
                "keysLimit": {
                  "type": "number",
                  "description": "Keys limit: min(0), max(10000)",
                  "minimum": 0,
                  "maximum": 10000
                },
                "keysRequestMonthlyLimit": {
                  "type": "number",
                  "description": "Keys request monthly limit: min(0), max(10000)",
                  "minimum": 1,
                  "maximum": 10000
                }
              }
            }
          }
        ],
        "tags": ["tenants"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer",
                  "minimum": 1
                },
                "parentId": { "type": "number" },
                "name": { "type": "string" },
                "admin": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The id property defines the unique id of type integer",
                      "minimum": 1
                    },
                    "fullName": { "type": "string" },
                    "email": { "type": "string", "x-format": { "email": true } }
                  },
                  "required": ["id", "fullName", "email"]
                },
                "organisationStatus": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The id property defines the unique id of type integer",
                      "minimum": 1
                    },
                    "description": { "type": "string" }
                  },
                  "required": ["id", "description"]
                },
                "phoneNumber": { "type": "string" },
                "street": { "type": "string" },
                "houseNumber": { "type": "string" },
                "addressSupplement": { "type": "string" },
                "zipCode": { "type": "string" },
                "city": { "type": "string" },
                "state": { "type": "string" },
                "country": { "type": "string" },
                "notes": { "type": "string" },
                "childrenInheritManifest": { "type": "boolean" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.953Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.953Z"
                },
                "limits": {
                  "type": "object",
                  "properties": {
                    "childOrganisationsLimit": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 10000,
                      "x-alternatives": [
                        { "type": "number", "minimum": 0, "maximum": 10000 },
                        { "type": "string", "enum": ["Unlimited"] }
                      ]
                    },
                    "usersLimit": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 10000,
                      "x-alternatives": [
                        { "type": "number", "minimum": 0, "maximum": 10000 },
                        { "type": "string", "enum": ["Unlimited"] }
                      ]
                    },
                    "devicesLimit": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 10000,
                      "x-alternatives": [
                        { "type": "number", "minimum": 0, "maximum": 10000 },
                        { "type": "string", "enum": ["Unlimited"] }
                      ]
                    },
                    "keysLimit": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 10000,
                      "x-alternatives": [
                        { "type": "number", "minimum": 0, "maximum": 10000 },
                        { "type": "string", "enum": ["Unlimited"] }
                      ]
                    },
                    "keysRequestMonthlyLimit": {
                      "type": "number",
                      "minimum": 0,
                      "maximum": 10000,
                      "x-alternatives": [
                        { "type": "number", "minimum": 0, "maximum": 10000 },
                        { "type": "string", "enum": ["Unlimited"] }
                      ]
                    }
                  }
                },
                "counters": {
                  "type": "object",
                  "properties": {
                    "childOrganisationsCounter": { "type": "number" },
                    "usersCounter": { "type": "number" },
                    "devicesCounter": { "type": "number" },
                    "keysCounter": { "type": "number" }
                  }
                }
              },
              "required": [
                "id",
                "parentId",
                "name",
                "phoneNumber",
                "street",
                "houseNumber",
                "zipCode",
                "city",
                "country",
                "childrenInheritManifest",
                "createdAt",
                "updatedAt"
              ]
            },
            "description": "Tenant updated"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Tenant(s) not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a tenant",
        "operationId": "deleteTenantsOrganisationsTenantid",
        "description": "tenants<br/><br/>deleteTenants",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "tenantId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["tenants"],
        "security": [{ "jwt": [] }],
        "responses": {
          "204": { "description": "Tenant deleted" },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Tenant(s) not found"
          }
        }
      }
    },
    "/users/password/reset": {
      "get": {
        "summary": "Reset the users password",
        "operationId": "getUsersPasswordReset",
        "parameters": [
          {
            "type": "string",
            "description": "valid email / null and empty values are not allowed",
            "x-format": { "email": true },
            "name": "email",
            "in": "query",
            "required": true
          }
        ],
        "tags": ["users"],
        "security": [{ "jwt": [] }],
        "responses": {
          "204": { "description": "Password reset mail sent" },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          }
        }
      }
    },
    "/users/{userId}/roles": {
      "get": {
        "summary": "Get users roles",
        "operationId": "getUsersUseridRoles",
        "description": "roles<br/><br/>viewUserRoles",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "min(1), null and empty values are not allowed",
            "default": 1,
            "minimum": 1,
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "min(1) / max is set by config pageEntries, null and empty values are not allowed",
            "default": 10,
            "minimum": 1,
            "maximum": 5000,
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sort by \"name\" or other resource property, null not allowed",
            "default": "id",
            "name": "sortBy",
            "in": "query"
          },
          {
            "type": "string",
            "description": "valid - \"asc\" and \"desc\", null and empty string not allowed",
            "default": "asc",
            "enum": ["asc", "desc"],
            "name": "sortOrder",
            "in": "query"
          }
        ],
        "tags": ["users"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "type": "object",
                  "properties": {
                    "offset": { "type": "integer" },
                    "limit": { "type": "integer" },
                    "total": { "type": "integer" }
                  },
                  "required": ["offset", "limit", "total"]
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "role": { "type": "string" },
                      "editable": { "type": "boolean" },
                      "deletable": { "type": "boolean" },
                      "organisationId": { "type": "number", "minimum": 1 },
                      "resources": {
                        "type": "array",
                        "description": "Resources and permissions",
                        "items": {
                          "type": "object",
                          "properties": {
                            "resource": {
                              "type": "string",
                              "description": "Resource name",
                              "enum": [
                                "roles",
                                "usersAndOrganisations",
                                "devices",
                                "containers",
                                "tenants",
                                "edgeos",
                                "webhooks",
                                "groups",
                                "thirdpartyAppsPts",
                                "dashboards",
                                "keys"
                              ]
                            },
                            "permissions": {
                              "type": "array",
                              "description": "List of resource permissions, min(1), null or empty values are not allowed",
                              "minItems": 1,
                              "items": {
                                "type": "string",
                                "default": "permission.securityLevel"
                              }
                            }
                          },
                          "required": ["resource"]
                        }
                      }
                    },
                    "required": ["role", "organisationId", "resources"]
                  }
                }
              },
              "required": ["roles"]
            },
            "description": "Return roles"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "User not found"
          }
        }
      }
    },
    "/containers/{containerId}/versions/{versionId}": {
      "get": {
        "summary": "Get container's versions",
        "operationId": "getContainersContaineridVersionsVersionid",
        "description": "containers<br/><br/>viewContainers",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / uuid_v4",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "name": "containerId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / uuid_v4",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "name": "versionId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["containers"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Random uuid v4.",
                  "default": "7adb258e-3ee7-4299-bcb9-513fab03f7d4",
                  "x-format": { "guid": { "version": "uuidv4" } }
                },
                "version": { "type": "string", "description": "Version name" },
                "useGlobalCredentials": {
                  "type": "boolean",
                  "description": "Use global credentials"
                },
                "releaseNotes": {
                  "type": "string",
                  "description": "Release notes"
                },
                "imageUri": { "type": "string", "description": "Image URI" },
                "registryType": {
                  "type": "string",
                  "description": "Registry type",
                  "enum": ["public", "private"]
                },
                "credentials": {
                  "type": "object",
                  "properties": {
                    "address": { "type": "string" },
                    "username": { "type": "string" }
                  }
                },
                "processorArchitecture": {
                  "type": "string",
                  "description": "Processor architecture",
                  "enum": [
                    "Linux-X86",
                    "Linux-X64",
                    "Linux-ARM32V7",
                    "Linux-ARM64V8",
                    "All"
                  ]
                },
                "containerCreateOptions": {
                  "type": "object",
                  "description": "See latest Docker documentation",
                  "x-meta": { "swaggerType": "object" },
                  "properties": {
                    "Hostname": { "type": "string" },
                    "Domainname": { "type": "string" },
                    "User": { "type": "string" },
                    "AttachStdin": { "type": "boolean" },
                    "AttachStdout": { "type": "boolean" },
                    "AttachStderr": { "type": "boolean" },
                    "ExposedPorts": {
                      "type": "object",
                      "properties": { "string": { "type": "object" } }
                    },
                    "Tty": { "type": "boolean" },
                    "OpenStdin": { "type": "boolean" },
                    "StdinOnce": { "type": "boolean" },
                    "Env": {
                      "type": "string",
                      "x-alternatives": [
                        { "type": "string" },
                        { "type": "array", "items": { "type": "string" } }
                      ]
                    },
                    "Cmd": {
                      "type": "string",
                      "x-alternatives": [
                        { "type": "string" },
                        { "type": "array", "items": { "type": "string" } }
                      ]
                    },
                    "Healthcheck": {
                      "type": "object",
                      "properties": {
                        "Test": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "Interval": {
                          "type": "string",
                          "enum": [0],
                          "x-alternatives": [
                            { "type": "string", "enum": [0] },
                            { "type": "integer", "minimum": 1000000 }
                          ]
                        },
                        "Timeout": {
                          "type": "string",
                          "enum": [0],
                          "x-alternatives": [
                            { "type": "string", "enum": [0] },
                            { "type": "integer", "minimum": 1000000 }
                          ]
                        },
                        "Retries": { "type": "integer", "minimum": 0 },
                        "StartPeriod": {
                          "type": "string",
                          "enum": [0],
                          "x-alternatives": [
                            { "type": "string", "enum": [0] },
                            { "type": "integer", "minimum": 1000000 }
                          ]
                        }
                      }
                    },
                    "ArgsEscaped": { "type": "boolean" },
                    "Image": { "type": "string" },
                    "Volumes": {
                      "type": "object",
                      "properties": { "string": { "type": "object" } }
                    },
                    "WorkingDir": { "type": "string" },
                    "Entrypoint": {
                      "x-alternatives": [
                        { "type": "array", "items": { "type": "string" } },
                        { "type": "string" }
                      ],
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "NetworkDisabled": { "type": "boolean" },
                    "MacAddress": {
                      "type": "string",
                      "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$"
                    },
                    "OnBuild": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "Labels": {
                      "type": "object",
                      "properties": { "string": { "type": "string" } }
                    },
                    "StopSignal": { "type": "string" },
                    "StopTimeout": { "type": "integer", "minimum": 0 },
                    "Shell": { "type": "array", "items": { "type": "string" } },
                    "HostConfig": {
                      "type": "object",
                      "properties": {
                        "MaximumIOps": { "type": "integer" },
                        "MaximumIOBps": { "type": "integer" },
                        "CpuShares": { "type": "integer" },
                        "Memory": { "type": "integer" },
                        "CgroupParent": { "type": "string" },
                        "BlkioWeight": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 1000
                        },
                        "BlkioWeightDevice": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Weight": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceReadBps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceWriteBps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceReadIOps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceWriteIOps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "CpuPeriod": { "type": "integer" },
                        "CpuQuota": { "type": "integer" },
                        "CpuRealtimePeriod": { "type": "integer" },
                        "CpuRealtimeRuntime": { "type": "integer" },
                        "CpusetCpus": { "type": "string" },
                        "CpusetMems": { "type": "string" },
                        "Devices": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "PathOnHost": { "type": "string" },
                              "PathInContainer": { "type": "string" },
                              "CgroupPermissions": { "type": "string" }
                            }
                          }
                        },
                        "DeviceCgroupRules": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "DiskQuota": { "type": "integer" },
                        "KernelMemory": { "type": "integer" },
                        "MemoryReservation": { "type": "integer" },
                        "MemorySwap": { "type": "integer" },
                        "MemorySwappiness": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 100
                        },
                        "NanoCPUs": { "type": "integer" },
                        "OomKillDisable": { "type": "boolean" },
                        "PidsLimit": { "type": "integer" },
                        "Ulimits": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Name": { "type": "string" },
                              "Soft": { "type": "integer" },
                              "Hard": { "type": "integer" }
                            }
                          }
                        },
                        "CpuCount": { "type": "integer" },
                        "CpuPercent": { "type": "integer" },
                        "IOMaximumIOps": { "type": "integer" },
                        "IOMaximumBandwidth": { "type": "integer" },
                        "Binds": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "pattern": ".+:.+(:.+)?"
                          }
                        },
                        "ContainerIDFile": { "type": "string" },
                        "LogConfig": {
                          "type": "object",
                          "properties": {
                            "Type": {
                              "type": "string",
                              "enum": [
                                "json-file",
                                "syslog",
                                "journald",
                                "gelf",
                                "fluentd",
                                "awslogs",
                                "splunk",
                                "etwlogs",
                                "none"
                              ]
                            },
                            "Config": {
                              "type": "object",
                              "properties": { "string": { "type": "string" } }
                            }
                          }
                        },
                        "NetworkMode": {
                          "type": "string",
                          "enum": ["bridge", "host", "none"],
                          "x-alternatives": [
                            {
                              "type": "string",
                              "enum": ["bridge", "host", "none"]
                            },
                            { "type": "string", "pattern": "^container:.*$" }
                          ]
                        },
                        "PortBindings": {
                          "type": "object",
                          "properties": {
                            "string": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "HostIp": { "type": "string" },
                                  "HostPort": { "type": "string" }
                                }
                              }
                            }
                          }
                        },
                        "RestartPolicy": {
                          "type": "object",
                          "properties": {
                            "Name": {
                              "type": "string",
                              "enum": ["always", "unless-stopped", "on-failure"]
                            },
                            "MaximumRetryCount": { "type": "integer" }
                          }
                        },
                        "AutoRemove": { "type": "boolean" },
                        "VolumeDriver": { "type": "string" },
                        "VolumesFrom": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "pattern": "^.+(:(ro|rw))?$"
                          }
                        },
                        "Mounts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Target": { "type": "string" },
                              "Source": { "type": "string" },
                              "Type": {
                                "type": "string",
                                "enum": ["bind", "volume", "tmpfs"]
                              },
                              "ReadOnly": { "type": "boolean" },
                              "Consistency": { "type": "string" },
                              "BindOptions": {
                                "type": "object",
                                "properties": {
                                  "Propagation": {
                                    "type": "string",
                                    "enum": [
                                      "private",
                                      "rprivate",
                                      "shared",
                                      "rshared",
                                      "slave",
                                      "rslave"
                                    ]
                                  }
                                }
                              },
                              "VolumeOptions": {
                                "type": "object",
                                "properties": {
                                  "NoCopy": { "type": "boolean" },
                                  "Labels": {
                                    "type": "object",
                                    "properties": {
                                      "string": { "type": "string" }
                                    }
                                  },
                                  "DriverConfig": {
                                    "type": "object",
                                    "properties": {
                                      "Name": { "type": "string" },
                                      "Options": {
                                        "type": "object",
                                        "properties": {
                                          "string": { "type": "string" }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "TmpfsOptions": {
                                "type": "object",
                                "properties": {
                                  "SizeBytes": { "type": "integer" },
                                  "Mode": { "type": "integer" }
                                }
                              }
                            }
                          }
                        },
                        "CapAdd": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "CapDrop": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "Dns": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "DnsOptions": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "DnsSearch": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "ExtraHosts": {
                          "type": "array",
                          "items": { "type": "string", "pattern": "^.+:.+$" }
                        },
                        "GroupAdd": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "IpcMode": { "type": "string" },
                        "Cgroup": { "type": "string" },
                        "Links": {
                          "type": "array",
                          "items": { "type": "string", "pattern": "^.+:.+$" }
                        },
                        "OomScoreAdj": { "type": "integer" },
                        "PidMode": {
                          "type": "string",
                          "pattern": "^.+(:.+)?$"
                        },
                        "Privileged": { "type": "boolean" },
                        "PublishAllPorts": { "type": "boolean" },
                        "ReadonlyRootfs": { "type": "boolean" },
                        "SecurityOpt": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "StorageOpt": {
                          "type": "object",
                          "properties": { "string": { "type": "string" } }
                        },
                        "Tmpfs": {
                          "type": "object",
                          "properties": { "string": { "type": "string" } }
                        },
                        "UTSMode": { "type": "string" },
                        "UsernsMode": { "type": "string" },
                        "ShmSize": { "type": "integer", "minimum": 0 },
                        "Sysctls": {
                          "type": "object",
                          "properties": { "string": { "type": "string" } }
                        },
                        "Runtime": { "type": "string" },
                        "ConsoleSize": {
                          "type": "array",
                          "x-constraint": { "length": 2 },
                          "items": { "type": "integer", "minimum": 0 }
                        },
                        "Isolation": {
                          "type": "string",
                          "enum": ["default", "process", "hyperv"]
                        }
                      }
                    },
                    "NetworkingConfig": {
                      "type": "object",
                      "properties": {
                        "EndpointsConfig": {
                          "type": "object",
                          "properties": {
                            "string": {
                              "type": "object",
                              "properties": {
                                "IPAMConfig": {
                                  "type": "object",
                                  "properties": {
                                    "IPv4Address": {
                                      "type": "string",
                                      "x-format": {
                                        "ip": {
                                          "cidr": "optional",
                                          "version": ["ipv4"]
                                        }
                                      }
                                    },
                                    "IPv6Address": {
                                      "type": "string",
                                      "x-format": {
                                        "ip": {
                                          "cidr": "optional",
                                          "version": ["ipv6"]
                                        }
                                      }
                                    },
                                    "LinkLocalIPs": {
                                      "type": "array",
                                      "items": { "type": "string" }
                                    }
                                  }
                                },
                                "Links": {
                                  "type": "array",
                                  "items": { "type": "string" }
                                },
                                "Aliases": {
                                  "type": "array",
                                  "items": { "type": "string" }
                                },
                                "NetworkId": { "type": "string" },
                                "EndpointId": { "type": "string" },
                                "Gateway": { "type": "string" },
                                "IPAddress": {
                                  "type": "string",
                                  "x-format": {
                                    "ip": {
                                      "cidr": "optional",
                                      "version": ["ipv4"]
                                    }
                                  }
                                },
                                "IPPrefixLen": { "type": "integer" },
                                "IPv6Gateway": { "type": "string" },
                                "GlobalIPv6Address": {
                                  "type": "string",
                                  "x-format": {
                                    "ip": {
                                      "cidr": "optional",
                                      "version": ["ipv6"]
                                    }
                                  }
                                },
                                "GlobalIPv6PrefixLen": { "type": "integer" },
                                "MacAddress": { "type": "string" }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "containerTwinDesiredOptions": { "type": "object" },
                "environmentVariables": {
                  "type": "array",
                  "description": "An array of object containing environment variables",
                  "x-meta": { "swaggerType": "array" },
                  "x-constraint": { "unique": "key" },
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": { "type": "string" },
                      "value": { "type": "string" }
                    },
                    "required": ["key", "value"]
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.766Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.766Z"
                }
              }
            },
            "description": "Retrieve container's version"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Container(s) not found / Container version not found"
          }
        }
      },
      "put": {
        "summary": "Update container version",
        "operationId": "putContainersContaineridVersionsVersionid",
        "description": "containers<br/><br/>updateContainers",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / uuid_v4",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "name": "containerId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / uuid_v4",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "name": "versionId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Version name",
            "name": "version",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Image URI",
            "name": "imageUri",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Release notes, max(3000)",
            "maxLength": 3000,
            "name": "releaseNotes",
            "in": "formData"
          },
          {
            "type": "boolean",
            "description": "Use global credentials",
            "name": "useGlobalCredentials",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Registry type",
            "enum": ["public", "private"],
            "name": "registryType",
            "in": "formData"
          },
          {
            "type": "string",
            "default": {},
            "name": "credentials",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Processor architecture",
            "enum": [
              "Linux-X86",
              "Linux-X64",
              "Linux-ARM32V7",
              "Linux-ARM64V8",
              "All"
            ],
            "name": "processorArchitecture",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "See latest Docker documentation",
            "x-meta": { "swaggerType": "object" },
            "name": "containerCreateOptions",
            "in": "formData",
            "x-type": "object",
            "x-properties": {
              "Hostname": { "type": "string" },
              "Domainname": { "type": "string" },
              "User": { "type": "string" },
              "AttachStdin": { "type": "boolean" },
              "AttachStdout": { "type": "boolean" },
              "AttachStderr": { "type": "boolean" },
              "ExposedPorts": {
                "type": "object",
                "x-properties": { "string": { "type": "object" } }
              },
              "Tty": { "type": "boolean" },
              "OpenStdin": { "type": "boolean" },
              "StdinOnce": { "type": "boolean" },
              "Env": {
                "type": "string",
                "x-alternatives": [
                  { "type": "string" },
                  {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "Env"
                  }
                ]
              },
              "Cmd": {
                "type": "string",
                "x-alternatives": [
                  { "type": "string" },
                  {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "Cmd"
                  }
                ]
              },
              "Healthcheck": {
                "type": "object",
                "x-properties": {
                  "Test": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "Test"
                  },
                  "Interval": {
                    "type": "string",
                    "enum": [0],
                    "x-alternatives": [
                      { "type": "string", "enum": [0] },
                      { "type": "integer", "minimum": 1000000 }
                    ]
                  },
                  "Timeout": {
                    "type": "string",
                    "enum": [0],
                    "x-alternatives": [
                      { "type": "string", "enum": [0] },
                      { "type": "integer", "minimum": 1000000 }
                    ]
                  },
                  "Retries": { "type": "integer", "minimum": 0 },
                  "StartPeriod": {
                    "type": "string",
                    "enum": [0],
                    "x-alternatives": [
                      { "type": "string", "enum": [0] },
                      { "type": "integer", "minimum": 1000000 }
                    ]
                  }
                }
              },
              "ArgsEscaped": { "type": "boolean" },
              "Image": { "type": "string" },
              "Volumes": {
                "type": "object",
                "x-properties": { "string": { "type": "object" } }
              },
              "WorkingDir": { "type": "string" },
              "Entrypoint": {
                "type": "array",
                "items": { "type": "string" },
                "collectionFormat": "multi",
                "x-alternatives": [
                  {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "Entrypoint"
                  },
                  { "type": "string" }
                ]
              },
              "NetworkDisabled": { "type": "boolean" },
              "MacAddress": {
                "type": "string",
                "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$"
              },
              "OnBuild": {
                "type": "array",
                "items": { "type": "string" },
                "collectionFormat": "multi",
                "name": "OnBuild"
              },
              "Labels": {
                "type": "object",
                "x-properties": { "string": { "type": "string" } }
              },
              "StopSignal": { "type": "string" },
              "StopTimeout": { "type": "integer", "minimum": 0 },
              "Shell": {
                "type": "array",
                "items": { "type": "string" },
                "collectionFormat": "multi",
                "name": "Shell"
              },
              "HostConfig": {
                "type": "object",
                "x-properties": {
                  "MaximumIOps": { "type": "integer" },
                  "MaximumIOBps": { "type": "integer" },
                  "CpuShares": { "type": "integer" },
                  "Memory": { "type": "integer" },
                  "CgroupParent": { "type": "string" },
                  "BlkioWeight": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 1000
                  },
                  "BlkioWeightDevice": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Path": { "type": "string" },
                        "Weight": { "type": "integer", "minimum": 0 }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "BlkioWeightDevice"
                  },
                  "BlkioDeviceReadBps": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Path": { "type": "string" },
                        "Rate": { "type": "integer", "minimum": 0 }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "BlkioDeviceReadBps"
                  },
                  "BlkioDeviceWriteBps": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Path": { "type": "string" },
                        "Rate": { "type": "integer", "minimum": 0 }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "BlkioDeviceWriteBps"
                  },
                  "BlkioDeviceReadIOps": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Path": { "type": "string" },
                        "Rate": { "type": "integer", "minimum": 0 }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "BlkioDeviceReadIOps"
                  },
                  "BlkioDeviceWriteIOps": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Path": { "type": "string" },
                        "Rate": { "type": "integer", "minimum": 0 }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "BlkioDeviceWriteIOps"
                  },
                  "CpuPeriod": { "type": "integer" },
                  "CpuQuota": { "type": "integer" },
                  "CpuRealtimePeriod": { "type": "integer" },
                  "CpuRealtimeRuntime": { "type": "integer" },
                  "CpusetCpus": { "type": "string" },
                  "CpusetMems": { "type": "string" },
                  "Devices": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "PathOnHost": { "type": "string" },
                        "PathInContainer": { "type": "string" },
                        "CgroupPermissions": { "type": "string" }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "Devices"
                  },
                  "DeviceCgroupRules": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "DeviceCgroupRules"
                  },
                  "DiskQuota": { "type": "integer" },
                  "KernelMemory": { "type": "integer" },
                  "MemoryReservation": { "type": "integer" },
                  "MemorySwap": { "type": "integer" },
                  "MemorySwappiness": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 100
                  },
                  "NanoCPUs": { "type": "integer" },
                  "OomKillDisable": { "type": "boolean" },
                  "PidsLimit": { "type": "integer" },
                  "Ulimits": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Name": { "type": "string" },
                        "Soft": { "type": "integer" },
                        "Hard": { "type": "integer" }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "Ulimits"
                  },
                  "CpuCount": { "type": "integer" },
                  "CpuPercent": { "type": "integer" },
                  "IOMaximumIOps": { "type": "integer" },
                  "IOMaximumBandwidth": { "type": "integer" },
                  "Binds": {
                    "type": "array",
                    "items": { "type": "string", "pattern": ".+:.+(:.+)?" },
                    "collectionFormat": "multi",
                    "name": "Binds"
                  },
                  "ContainerIDFile": { "type": "string" },
                  "LogConfig": {
                    "type": "object",
                    "x-properties": {
                      "Type": {
                        "type": "string",
                        "enum": [
                          "json-file",
                          "syslog",
                          "journald",
                          "gelf",
                          "fluentd",
                          "awslogs",
                          "splunk",
                          "etwlogs",
                          "none"
                        ]
                      },
                      "Config": {
                        "type": "object",
                        "x-properties": { "string": { "type": "string" } }
                      }
                    }
                  },
                  "NetworkMode": {
                    "type": "string",
                    "enum": ["bridge", "host", "none"],
                    "x-alternatives": [
                      { "type": "string", "enum": ["bridge", "host", "none"] },
                      { "type": "string", "pattern": "^container:.*$" }
                    ]
                  },
                  "PortBindings": {
                    "type": "object",
                    "x-properties": {
                      "string": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "x-properties": {
                            "HostIp": { "type": "string" },
                            "HostPort": { "type": "string" }
                          }
                        },
                        "collectionFormat": "multi",
                        "name": "string"
                      }
                    }
                  },
                  "RestartPolicy": {
                    "type": "object",
                    "x-properties": {
                      "Name": {
                        "type": "string",
                        "enum": ["always", "unless-stopped", "on-failure"]
                      },
                      "MaximumRetryCount": { "type": "integer" }
                    }
                  },
                  "AutoRemove": { "type": "boolean" },
                  "VolumeDriver": { "type": "string" },
                  "VolumesFrom": {
                    "type": "array",
                    "items": { "type": "string", "pattern": "^.+(:(ro|rw))?$" },
                    "collectionFormat": "multi",
                    "name": "VolumesFrom"
                  },
                  "Mounts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Target": { "type": "string" },
                        "Source": { "type": "string" },
                        "Type": {
                          "type": "string",
                          "enum": ["bind", "volume", "tmpfs"]
                        },
                        "ReadOnly": { "type": "boolean" },
                        "Consistency": { "type": "string" },
                        "BindOptions": {
                          "type": "object",
                          "x-properties": {
                            "Propagation": {
                              "type": "string",
                              "enum": [
                                "private",
                                "rprivate",
                                "shared",
                                "rshared",
                                "slave",
                                "rslave"
                              ]
                            }
                          }
                        },
                        "VolumeOptions": {
                          "type": "object",
                          "x-properties": {
                            "NoCopy": { "type": "boolean" },
                            "Labels": {
                              "type": "object",
                              "x-properties": { "string": { "type": "string" } }
                            },
                            "DriverConfig": {
                              "type": "object",
                              "x-properties": {
                                "Name": { "type": "string" },
                                "Options": {
                                  "type": "object",
                                  "x-properties": {
                                    "string": { "type": "string" }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "TmpfsOptions": {
                          "type": "object",
                          "x-properties": {
                            "SizeBytes": { "type": "integer" },
                            "Mode": { "type": "integer" }
                          }
                        }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "Mounts"
                  },
                  "CapAdd": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "CapAdd"
                  },
                  "CapDrop": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "CapDrop"
                  },
                  "Dns": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "Dns"
                  },
                  "DnsOptions": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "DnsOptions"
                  },
                  "DnsSearch": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "DnsSearch"
                  },
                  "ExtraHosts": {
                    "type": "array",
                    "items": { "type": "string", "pattern": "^.+:.+$" },
                    "collectionFormat": "multi",
                    "name": "ExtraHosts"
                  },
                  "GroupAdd": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "GroupAdd"
                  },
                  "IpcMode": { "type": "string" },
                  "Cgroup": { "type": "string" },
                  "Links": {
                    "type": "array",
                    "items": { "type": "string", "pattern": "^.+:.+$" },
                    "collectionFormat": "multi",
                    "name": "Links"
                  },
                  "OomScoreAdj": { "type": "integer" },
                  "PidMode": { "type": "string", "pattern": "^.+(:.+)?$" },
                  "Privileged": { "type": "boolean" },
                  "PublishAllPorts": { "type": "boolean" },
                  "ReadonlyRootfs": { "type": "boolean" },
                  "SecurityOpt": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "SecurityOpt"
                  },
                  "StorageOpt": {
                    "type": "object",
                    "x-properties": { "string": { "type": "string" } }
                  },
                  "Tmpfs": {
                    "type": "object",
                    "x-properties": { "string": { "type": "string" } }
                  },
                  "UTSMode": { "type": "string" },
                  "UsernsMode": { "type": "string" },
                  "ShmSize": { "type": "integer", "minimum": 0 },
                  "Sysctls": {
                    "type": "object",
                    "x-properties": { "string": { "type": "string" } }
                  },
                  "Runtime": { "type": "string" },
                  "ConsoleSize": {
                    "type": "array",
                    "x-constraint": { "length": 2 },
                    "items": { "type": "integer", "minimum": 0 },
                    "collectionFormat": "multi",
                    "name": "ConsoleSize"
                  },
                  "Isolation": {
                    "type": "string",
                    "enum": ["default", "process", "hyperv"]
                  }
                }
              },
              "NetworkingConfig": {
                "type": "object",
                "x-properties": {
                  "EndpointsConfig": {
                    "type": "object",
                    "x-properties": {
                      "string": {
                        "type": "object",
                        "x-properties": {
                          "IPAMConfig": {
                            "type": "object",
                            "x-properties": {
                              "IPv4Address": {
                                "type": "string",
                                "x-format": {
                                  "ip": {
                                    "cidr": "optional",
                                    "version": ["ipv4"]
                                  }
                                }
                              },
                              "IPv6Address": {
                                "type": "string",
                                "x-format": {
                                  "ip": {
                                    "cidr": "optional",
                                    "version": ["ipv6"]
                                  }
                                }
                              },
                              "LinkLocalIPs": {
                                "type": "array",
                                "items": { "type": "string" },
                                "collectionFormat": "multi",
                                "name": "LinkLocalIPs"
                              }
                            }
                          },
                          "Links": {
                            "type": "array",
                            "items": { "type": "string" },
                            "collectionFormat": "multi",
                            "name": "Links"
                          },
                          "Aliases": {
                            "type": "array",
                            "items": { "type": "string" },
                            "collectionFormat": "multi",
                            "name": "Aliases"
                          },
                          "NetworkId": { "type": "string" },
                          "EndpointId": { "type": "string" },
                          "Gateway": { "type": "string" },
                          "IPAddress": {
                            "type": "string",
                            "x-format": {
                              "ip": { "cidr": "optional", "version": ["ipv4"] }
                            }
                          },
                          "IPPrefixLen": { "type": "integer" },
                          "IPv6Gateway": { "type": "string" },
                          "GlobalIPv6Address": {
                            "type": "string",
                            "x-format": {
                              "ip": { "cidr": "optional", "version": ["ipv6"] }
                            }
                          },
                          "GlobalIPv6PrefixLen": { "type": "integer" },
                          "MacAddress": { "type": "string" }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "string",
            "description": "JSON / See Azure documentation",
            "x-meta": { "swaggerType": "object" },
            "name": "containerTwinDesiredOptions",
            "in": "formData",
            "x-type": "object"
          },
          {
            "type": "array",
            "description": "An array of object containing environment variables",
            "x-meta": { "swaggerType": "array" },
            "x-constraint": { "unique": "key" },
            "items": {
              "type": "string",
              "x-type": "object",
              "x-properties": {
                "key": { "type": "string" },
                "value": { "type": "string" }
              }
            },
            "collectionFormat": "multi",
            "name": "environmentVariables",
            "in": "formData"
          }
        ],
        "consumes": ["multipart/form-data"],
        "tags": ["containers"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Random uuid v4.",
                  "default": "7adb258e-3ee7-4299-bcb9-513fab03f7d4",
                  "x-format": { "guid": { "version": "uuidv4" } }
                },
                "version": { "type": "string", "description": "Version name" },
                "useGlobalCredentials": {
                  "type": "boolean",
                  "description": "Use global credentials"
                },
                "releaseNotes": {
                  "type": "string",
                  "description": "Release notes"
                },
                "imageUri": { "type": "string", "description": "Image URI" },
                "registryType": {
                  "type": "string",
                  "description": "Registry type",
                  "enum": ["public", "private"]
                },
                "credentials": {
                  "type": "object",
                  "properties": {
                    "address": { "type": "string" },
                    "username": { "type": "string" }
                  }
                },
                "processorArchitecture": {
                  "type": "string",
                  "description": "Processor architecture",
                  "enum": [
                    "Linux-X86",
                    "Linux-X64",
                    "Linux-ARM32V7",
                    "Linux-ARM64V8",
                    "All"
                  ]
                },
                "containerCreateOptions": {
                  "type": "object",
                  "description": "See latest Docker documentation",
                  "x-meta": { "swaggerType": "object" },
                  "properties": {
                    "Hostname": { "type": "string" },
                    "Domainname": { "type": "string" },
                    "User": { "type": "string" },
                    "AttachStdin": { "type": "boolean" },
                    "AttachStdout": { "type": "boolean" },
                    "AttachStderr": { "type": "boolean" },
                    "ExposedPorts": {
                      "type": "object",
                      "properties": { "string": { "type": "object" } }
                    },
                    "Tty": { "type": "boolean" },
                    "OpenStdin": { "type": "boolean" },
                    "StdinOnce": { "type": "boolean" },
                    "Env": {
                      "type": "string",
                      "x-alternatives": [
                        { "type": "string" },
                        { "type": "array", "items": { "type": "string" } }
                      ]
                    },
                    "Cmd": {
                      "type": "string",
                      "x-alternatives": [
                        { "type": "string" },
                        { "type": "array", "items": { "type": "string" } }
                      ]
                    },
                    "Healthcheck": {
                      "type": "object",
                      "properties": {
                        "Test": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "Interval": {
                          "type": "string",
                          "enum": [0],
                          "x-alternatives": [
                            { "type": "string", "enum": [0] },
                            { "type": "integer", "minimum": 1000000 }
                          ]
                        },
                        "Timeout": {
                          "type": "string",
                          "enum": [0],
                          "x-alternatives": [
                            { "type": "string", "enum": [0] },
                            { "type": "integer", "minimum": 1000000 }
                          ]
                        },
                        "Retries": { "type": "integer", "minimum": 0 },
                        "StartPeriod": {
                          "type": "string",
                          "enum": [0],
                          "x-alternatives": [
                            { "type": "string", "enum": [0] },
                            { "type": "integer", "minimum": 1000000 }
                          ]
                        }
                      }
                    },
                    "ArgsEscaped": { "type": "boolean" },
                    "Image": { "type": "string" },
                    "Volumes": {
                      "type": "object",
                      "properties": { "string": { "type": "object" } }
                    },
                    "WorkingDir": { "type": "string" },
                    "Entrypoint": {
                      "x-alternatives": [
                        { "type": "array", "items": { "type": "string" } },
                        { "type": "string" }
                      ],
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "NetworkDisabled": { "type": "boolean" },
                    "MacAddress": {
                      "type": "string",
                      "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$"
                    },
                    "OnBuild": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "Labels": {
                      "type": "object",
                      "properties": { "string": { "type": "string" } }
                    },
                    "StopSignal": { "type": "string" },
                    "StopTimeout": { "type": "integer", "minimum": 0 },
                    "Shell": { "type": "array", "items": { "type": "string" } },
                    "HostConfig": {
                      "type": "object",
                      "properties": {
                        "MaximumIOps": { "type": "integer" },
                        "MaximumIOBps": { "type": "integer" },
                        "CpuShares": { "type": "integer" },
                        "Memory": { "type": "integer" },
                        "CgroupParent": { "type": "string" },
                        "BlkioWeight": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 1000
                        },
                        "BlkioWeightDevice": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Weight": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceReadBps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceWriteBps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceReadIOps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceWriteIOps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "CpuPeriod": { "type": "integer" },
                        "CpuQuota": { "type": "integer" },
                        "CpuRealtimePeriod": { "type": "integer" },
                        "CpuRealtimeRuntime": { "type": "integer" },
                        "CpusetCpus": { "type": "string" },
                        "CpusetMems": { "type": "string" },
                        "Devices": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "PathOnHost": { "type": "string" },
                              "PathInContainer": { "type": "string" },
                              "CgroupPermissions": { "type": "string" }
                            }
                          }
                        },
                        "DeviceCgroupRules": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "DiskQuota": { "type": "integer" },
                        "KernelMemory": { "type": "integer" },
                        "MemoryReservation": { "type": "integer" },
                        "MemorySwap": { "type": "integer" },
                        "MemorySwappiness": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 100
                        },
                        "NanoCPUs": { "type": "integer" },
                        "OomKillDisable": { "type": "boolean" },
                        "PidsLimit": { "type": "integer" },
                        "Ulimits": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Name": { "type": "string" },
                              "Soft": { "type": "integer" },
                              "Hard": { "type": "integer" }
                            }
                          }
                        },
                        "CpuCount": { "type": "integer" },
                        "CpuPercent": { "type": "integer" },
                        "IOMaximumIOps": { "type": "integer" },
                        "IOMaximumBandwidth": { "type": "integer" },
                        "Binds": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "pattern": ".+:.+(:.+)?"
                          }
                        },
                        "ContainerIDFile": { "type": "string" },
                        "LogConfig": {
                          "type": "object",
                          "properties": {
                            "Type": {
                              "type": "string",
                              "enum": [
                                "json-file",
                                "syslog",
                                "journald",
                                "gelf",
                                "fluentd",
                                "awslogs",
                                "splunk",
                                "etwlogs",
                                "none"
                              ]
                            },
                            "Config": {
                              "type": "object",
                              "properties": { "string": { "type": "string" } }
                            }
                          }
                        },
                        "NetworkMode": {
                          "type": "string",
                          "enum": ["bridge", "host", "none"],
                          "x-alternatives": [
                            {
                              "type": "string",
                              "enum": ["bridge", "host", "none"]
                            },
                            { "type": "string", "pattern": "^container:.*$" }
                          ]
                        },
                        "PortBindings": {
                          "type": "object",
                          "properties": {
                            "string": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "HostIp": { "type": "string" },
                                  "HostPort": { "type": "string" }
                                }
                              }
                            }
                          }
                        },
                        "RestartPolicy": {
                          "type": "object",
                          "properties": {
                            "Name": {
                              "type": "string",
                              "enum": ["always", "unless-stopped", "on-failure"]
                            },
                            "MaximumRetryCount": { "type": "integer" }
                          }
                        },
                        "AutoRemove": { "type": "boolean" },
                        "VolumeDriver": { "type": "string" },
                        "VolumesFrom": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "pattern": "^.+(:(ro|rw))?$"
                          }
                        },
                        "Mounts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Target": { "type": "string" },
                              "Source": { "type": "string" },
                              "Type": {
                                "type": "string",
                                "enum": ["bind", "volume", "tmpfs"]
                              },
                              "ReadOnly": { "type": "boolean" },
                              "Consistency": { "type": "string" },
                              "BindOptions": {
                                "type": "object",
                                "properties": {
                                  "Propagation": {
                                    "type": "string",
                                    "enum": [
                                      "private",
                                      "rprivate",
                                      "shared",
                                      "rshared",
                                      "slave",
                                      "rslave"
                                    ]
                                  }
                                }
                              },
                              "VolumeOptions": {
                                "type": "object",
                                "properties": {
                                  "NoCopy": { "type": "boolean" },
                                  "Labels": {
                                    "type": "object",
                                    "properties": {
                                      "string": { "type": "string" }
                                    }
                                  },
                                  "DriverConfig": {
                                    "type": "object",
                                    "properties": {
                                      "Name": { "type": "string" },
                                      "Options": {
                                        "type": "object",
                                        "properties": {
                                          "string": { "type": "string" }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "TmpfsOptions": {
                                "type": "object",
                                "properties": {
                                  "SizeBytes": { "type": "integer" },
                                  "Mode": { "type": "integer" }
                                }
                              }
                            }
                          }
                        },
                        "CapAdd": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "CapDrop": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "Dns": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "DnsOptions": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "DnsSearch": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "ExtraHosts": {
                          "type": "array",
                          "items": { "type": "string", "pattern": "^.+:.+$" }
                        },
                        "GroupAdd": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "IpcMode": { "type": "string" },
                        "Cgroup": { "type": "string" },
                        "Links": {
                          "type": "array",
                          "items": { "type": "string", "pattern": "^.+:.+$" }
                        },
                        "OomScoreAdj": { "type": "integer" },
                        "PidMode": {
                          "type": "string",
                          "pattern": "^.+(:.+)?$"
                        },
                        "Privileged": { "type": "boolean" },
                        "PublishAllPorts": { "type": "boolean" },
                        "ReadonlyRootfs": { "type": "boolean" },
                        "SecurityOpt": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "StorageOpt": {
                          "type": "object",
                          "properties": { "string": { "type": "string" } }
                        },
                        "Tmpfs": {
                          "type": "object",
                          "properties": { "string": { "type": "string" } }
                        },
                        "UTSMode": { "type": "string" },
                        "UsernsMode": { "type": "string" },
                        "ShmSize": { "type": "integer", "minimum": 0 },
                        "Sysctls": {
                          "type": "object",
                          "properties": { "string": { "type": "string" } }
                        },
                        "Runtime": { "type": "string" },
                        "ConsoleSize": {
                          "type": "array",
                          "x-constraint": { "length": 2 },
                          "items": { "type": "integer", "minimum": 0 }
                        },
                        "Isolation": {
                          "type": "string",
                          "enum": ["default", "process", "hyperv"]
                        }
                      }
                    },
                    "NetworkingConfig": {
                      "type": "object",
                      "properties": {
                        "EndpointsConfig": {
                          "type": "object",
                          "properties": {
                            "string": {
                              "type": "object",
                              "properties": {
                                "IPAMConfig": {
                                  "type": "object",
                                  "properties": {
                                    "IPv4Address": {
                                      "type": "string",
                                      "x-format": {
                                        "ip": {
                                          "cidr": "optional",
                                          "version": ["ipv4"]
                                        }
                                      }
                                    },
                                    "IPv6Address": {
                                      "type": "string",
                                      "x-format": {
                                        "ip": {
                                          "cidr": "optional",
                                          "version": ["ipv6"]
                                        }
                                      }
                                    },
                                    "LinkLocalIPs": {
                                      "type": "array",
                                      "items": { "type": "string" }
                                    }
                                  }
                                },
                                "Links": {
                                  "type": "array",
                                  "items": { "type": "string" }
                                },
                                "Aliases": {
                                  "type": "array",
                                  "items": { "type": "string" }
                                },
                                "NetworkId": { "type": "string" },
                                "EndpointId": { "type": "string" },
                                "Gateway": { "type": "string" },
                                "IPAddress": {
                                  "type": "string",
                                  "x-format": {
                                    "ip": {
                                      "cidr": "optional",
                                      "version": ["ipv4"]
                                    }
                                  }
                                },
                                "IPPrefixLen": { "type": "integer" },
                                "IPv6Gateway": { "type": "string" },
                                "GlobalIPv6Address": {
                                  "type": "string",
                                  "x-format": {
                                    "ip": {
                                      "cidr": "optional",
                                      "version": ["ipv6"]
                                    }
                                  }
                                },
                                "GlobalIPv6PrefixLen": { "type": "integer" },
                                "MacAddress": { "type": "string" }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "containerTwinDesiredOptions": { "type": "object" },
                "environmentVariables": {
                  "type": "array",
                  "description": "An array of object containing environment variables",
                  "x-meta": { "swaggerType": "array" },
                  "x-constraint": { "unique": "key" },
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": { "type": "string" },
                      "value": { "type": "string" }
                    },
                    "required": ["key", "value"]
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.766Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.766Z"
                }
              }
            },
            "description": "Container version modified"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Container(s) not found / Container version not found"
          }
        }
      },
      "delete": {
        "summary": "Delete container version",
        "operationId": "deleteContainersContaineridVersionsVersionid",
        "description": "containers<br/><br/>deleteContainers",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / uuid_v4",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "name": "containerId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / uuid_v4",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "name": "versionId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["containers"],
        "security": [{ "jwt": [] }],
        "responses": {
          "204": { "description": "Container version deleted" },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Container(s) not found / Container version not found"
          }
        }
      }
    },
    "/dashboards/{dashboardId}/panels/{panelId}": {
      "get": {
        "summary": "Get a specific dashboard panel",
        "operationId": "getDashboardsDashboardidPanelsPanelid",
        "description": "dashboards<br/><br/>viewDashboards",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "dashboardId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "panelId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["dashboards"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "title": { "type": "string" },
                "layoutPosX": { "type": "number" },
                "layoutPosY": { "type": "number" },
                "layoutWidth": { "type": "number" },
                "layoutHeight": { "type": "number" },
                "type": { "type": "string" },
                "visualisation": { "type": "object" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:08.141Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:08.141Z"
                }
              },
              "required": ["id"]
            },
            "description": "Return panel"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Dashboard(s) not found / DashboardPanel(s) not found"
          }
        }
      },
      "put": {
        "summary": "Update dashboard panel",
        "operationId": "putDashboardsDashboardidPanelsPanelid",
        "description": "dashboards<br/><br/>updateDashboards",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "dashboardId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "panelId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": { "type": "string", "maxLength": 255 },
                "layoutPosX": { "type": "number", "minimum": 0 },
                "layoutPosY": { "type": "number", "minimum": 0 },
                "layoutWidth": { "type": "number", "minimum": 0 },
                "layoutHeight": { "type": "number", "minimum": 0 },
                "type": { "type": "string", "maxLength": 255 },
                "visualisation": { "type": "object" }
              }
            }
          }
        ],
        "tags": ["dashboards"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "title": { "type": "string" },
                "layoutPosX": { "type": "number" },
                "layoutPosY": { "type": "number" },
                "layoutWidth": { "type": "number" },
                "layoutHeight": { "type": "number" },
                "type": { "type": "string" },
                "visualisation": { "type": "object" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:08.141Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:08.141Z"
                }
              },
              "required": ["id"]
            },
            "description": "Dashboard Panel modified"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Dashboard(s) not found / DashboardPanel(s) not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a dashboard panel by id",
        "operationId": "deleteDashboardsDashboardidPanelsPanelid",
        "description": "dashboards<br/><br/>deleteDashboards",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "dashboardId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "panelId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["dashboards"],
        "security": [{ "jwt": [] }],
        "responses": {
          "204": { "description": "Dashboard panel deleted" },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Dashboard(s) not found / DashboardPanel(s) not found"
          }
        }
      }
    },
    "/devices/{deviceId}/deployment-manifests/check": {
      "get": {
        "summary": "Checks the actuality of sensorEDGE OS and containers ",
        "operationId": "getDevicesDeviceidDeploymentmanifestsCheck",
        "description": "devices<br/><br/>viewDeviceDetails",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["sensorEdgeDeploymentManifests"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "newContainers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": { "type": "string" },
                      "releaseNotes": {
                        "type": "array",
                        "items": { "type": "string" }
                      }
                    }
                  }
                },
                "removedContainers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": { "type": "string" },
                      "releaseNotes": {
                        "type": "array",
                        "items": { "type": "string" }
                      }
                    }
                  }
                },
                "updatedContainers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": { "type": "string" },
                      "releaseNotes": {
                        "type": "array",
                        "items": { "type": "string" }
                      }
                    }
                  }
                },
                "osUpdates": {
                  "type": "object",
                  "properties": {
                    "version": { "type": "string" },
                    "name": { "type": "string" },
                    "type": { "type": "string" },
                    "notes": { "type": "string" }
                  }
                }
              }
            },
            "description": "Retrieve sensorEDGE software updates"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device(s) not found"
          }
        }
      }
    },
    "/devices/{deviceId}/containers/routes": {
      "get": {
        "summary": "Gets all device container routes",
        "operationId": "getDevicesDeviceidContainersRoutes",
        "description": "devices<br/><br/>viewRoutes",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["deviceContainers"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "routes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string" },
                      "name": {
                        "type": "string",
                        "pattern": "^[a-zA-Z_0-9]+$"
                      },
                      "source": { "type": "string" },
                      "condition": { "type": "string" },
                      "target": { "type": "string" },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "createdAt",
                        "default": "2021-05-21T06:02:08.312Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "updatedAt",
                        "default": "2021-05-21T06:02:08.312Z"
                      }
                    },
                    "required": ["id", "name", "source", "target"]
                  }
                }
              },
              "required": ["routes"]
            },
            "description": "Device routes"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device(s) not found"
          }
        }
      },
      "post": {
        "summary": "Adds a device container route to device",
        "operationId": "postDevicesDeviceidContainersRoutes",
        "description": "devices<br/><br/>createRoutes",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Route name",
                  "minLength": 1,
                  "maxLength": 64,
                  "pattern": "^[a-zA-Z_0-9]+$"
                },
                "source": {
                  "type": "string",
                  "description": "Source",
                  "minLength": 1,
                  "maxLength": 64
                },
                "condition": { "type": "string", "description": "Condition" },
                "target": {
                  "type": "string",
                  "description": "Target",
                  "minLength": 1,
                  "maxLength": 64
                }
              },
              "required": ["name", "source", "target"]
            }
          }
        ],
        "tags": ["deviceContainers"],
        "security": [{ "jwt": [] }],
        "responses": {
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "name": { "type": "string", "pattern": "^[a-zA-Z_0-9]+$" },
                "source": { "type": "string" },
                "condition": { "type": "string" },
                "target": { "type": "string" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:08.312Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:08.312Z"
                }
              },
              "required": ["id", "name", "source", "target"]
            },
            "description": "Container route added to device"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device(s) not found"
          }
        }
      }
    },
    "/devices/{deviceId}/containers/installed": {
      "get": {
        "summary": "Get list of already installed containers into device",
        "operationId": "getDevicesDeviceidContainersInstalled",
        "description": "devices<br/><br/>viewDeviceDetails",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "min(1), null and empty values are not allowed",
            "default": 1,
            "minimum": 1,
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "min(1) / max is set by config pageEntries, null and empty values are not allowed",
            "default": 10,
            "minimum": 1,
            "maximum": 5000,
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sort by \"name\" or other resource property, null not allowed",
            "default": "id",
            "name": "sortBy",
            "in": "query"
          },
          {
            "type": "string",
            "description": "valid - \"asc\" and \"desc\", null and empty string not allowed",
            "default": "asc",
            "enum": ["asc", "desc"],
            "name": "sortOrder",
            "in": "query"
          }
        ],
        "tags": ["deviceContainers"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "type": "object",
                  "properties": {
                    "offset": { "type": "integer" },
                    "limit": { "type": "integer" },
                    "total": { "type": "integer" }
                  },
                  "required": ["offset", "limit", "total"]
                },
                "installed": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Random uuid v4.",
                        "default": "7adb258e-3ee7-4299-bcb9-513fab03f7d4",
                        "x-format": { "guid": { "version": "uuidv4" } }
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Random uuid v4.",
                        "default": "7adb258e-3ee7-4299-bcb9-513fab03f7d4",
                        "x-format": { "guid": { "version": "uuidv4" } }
                      },
                      "organisation": { "type": "string" },
                      "displayName": { "type": "string" },
                      "containerName": { "type": "string" },
                      "image": { "type": "string" },
                      "icon": { "type": "string" },
                      "type": { "type": "string" },
                      "version": { "type": "string" },
                      "restartPolicy": {
                        "type": "string",
                        "enum": ["always", "never", "on-failed", "on-unhealthy"]
                      },
                      "desiredStatus": {
                        "type": "string",
                        "enum": ["stopped", "running"]
                      },
                      "status": { "type": "string" },
                      "imageUri": { "type": "string" },
                      "registryType": {
                        "type": "string",
                        "enum": ["public", "private"]
                      },
                      "credentials": {
                        "type": "object",
                        "properties": {
                          "address": { "type": "string" },
                          "username": { "type": "string" }
                        }
                      },
                      "processorArchitecture": {
                        "type": "string",
                        "description": "Processor architecture",
                        "enum": [
                          "Linux-X86",
                          "Linux-X64",
                          "Linux-ARM32V7",
                          "Linux-ARM64V8",
                          "All"
                        ]
                      },
                      "settingsPageId": {
                        "type": "string",
                        "enum": [
                          "gatewayTelemetry",
                          "networkTopology",
                          "opcuaPublisher",
                          "ainConnector",
                          "netFieldProxy",
                          "netFieldAppPlatformConnector"
                        ]
                      },
                      "shortDescription": { "type": "string", "maxLength": 60 },
                      "description": { "type": "string", "maxLength": 3000 },
                      "releaseNotes": {
                        "type": "array",
                        "items": { "type": "string" }
                      },
                      "category": {
                        "type": "string",
                        "enum": [
                          "Receiver",
                          "Connectivity",
                          "Data Acquisition",
                          "IT/Cloud Connectors",
                          "Services",
                          "Applications"
                        ]
                      },
                      "containerCreateOptions": {
                        "type": "object",
                        "description": "See latest Docker documentation",
                        "x-meta": { "swaggerType": "object" },
                        "properties": {
                          "Hostname": { "type": "string" },
                          "Domainname": { "type": "string" },
                          "User": { "type": "string" },
                          "AttachStdin": { "type": "boolean" },
                          "AttachStdout": { "type": "boolean" },
                          "AttachStderr": { "type": "boolean" },
                          "ExposedPorts": {
                            "type": "object",
                            "properties": { "string": { "type": "object" } }
                          },
                          "Tty": { "type": "boolean" },
                          "OpenStdin": { "type": "boolean" },
                          "StdinOnce": { "type": "boolean" },
                          "Env": {
                            "type": "string",
                            "x-alternatives": [
                              { "type": "string" },
                              { "type": "array", "items": { "type": "string" } }
                            ]
                          },
                          "Cmd": {
                            "type": "string",
                            "x-alternatives": [
                              { "type": "string" },
                              { "type": "array", "items": { "type": "string" } }
                            ]
                          },
                          "Healthcheck": {
                            "type": "object",
                            "properties": {
                              "Test": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "Interval": {
                                "type": "string",
                                "enum": [0],
                                "x-alternatives": [
                                  { "type": "string", "enum": [0] },
                                  { "type": "integer", "minimum": 1000000 }
                                ]
                              },
                              "Timeout": {
                                "type": "string",
                                "enum": [0],
                                "x-alternatives": [
                                  { "type": "string", "enum": [0] },
                                  { "type": "integer", "minimum": 1000000 }
                                ]
                              },
                              "Retries": { "type": "integer", "minimum": 0 },
                              "StartPeriod": {
                                "type": "string",
                                "enum": [0],
                                "x-alternatives": [
                                  { "type": "string", "enum": [0] },
                                  { "type": "integer", "minimum": 1000000 }
                                ]
                              }
                            }
                          },
                          "ArgsEscaped": { "type": "boolean" },
                          "Image": { "type": "string" },
                          "Volumes": {
                            "type": "object",
                            "properties": { "string": { "type": "object" } }
                          },
                          "WorkingDir": { "type": "string" },
                          "Entrypoint": {
                            "x-alternatives": [
                              {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              { "type": "string" }
                            ],
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "NetworkDisabled": { "type": "boolean" },
                          "MacAddress": {
                            "type": "string",
                            "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$"
                          },
                          "OnBuild": {
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "Labels": {
                            "type": "object",
                            "properties": { "string": { "type": "string" } }
                          },
                          "StopSignal": { "type": "string" },
                          "StopTimeout": { "type": "integer", "minimum": 0 },
                          "Shell": {
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "HostConfig": {
                            "type": "object",
                            "properties": {
                              "MaximumIOps": { "type": "integer" },
                              "MaximumIOBps": { "type": "integer" },
                              "CpuShares": { "type": "integer" },
                              "Memory": { "type": "integer" },
                              "CgroupParent": { "type": "string" },
                              "BlkioWeight": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 1000
                              },
                              "BlkioWeightDevice": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Weight": {
                                      "type": "integer",
                                      "minimum": 0
                                    }
                                  }
                                }
                              },
                              "BlkioDeviceReadBps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Rate": { "type": "integer", "minimum": 0 }
                                  }
                                }
                              },
                              "BlkioDeviceWriteBps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Rate": { "type": "integer", "minimum": 0 }
                                  }
                                }
                              },
                              "BlkioDeviceReadIOps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Rate": { "type": "integer", "minimum": 0 }
                                  }
                                }
                              },
                              "BlkioDeviceWriteIOps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Rate": { "type": "integer", "minimum": 0 }
                                  }
                                }
                              },
                              "CpuPeriod": { "type": "integer" },
                              "CpuQuota": { "type": "integer" },
                              "CpuRealtimePeriod": { "type": "integer" },
                              "CpuRealtimeRuntime": { "type": "integer" },
                              "CpusetCpus": { "type": "string" },
                              "CpusetMems": { "type": "string" },
                              "Devices": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "PathOnHost": { "type": "string" },
                                    "PathInContainer": { "type": "string" },
                                    "CgroupPermissions": { "type": "string" }
                                  }
                                }
                              },
                              "DeviceCgroupRules": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "DiskQuota": { "type": "integer" },
                              "KernelMemory": { "type": "integer" },
                              "MemoryReservation": { "type": "integer" },
                              "MemorySwap": { "type": "integer" },
                              "MemorySwappiness": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 100
                              },
                              "NanoCPUs": { "type": "integer" },
                              "OomKillDisable": { "type": "boolean" },
                              "PidsLimit": { "type": "integer" },
                              "Ulimits": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Name": { "type": "string" },
                                    "Soft": { "type": "integer" },
                                    "Hard": { "type": "integer" }
                                  }
                                }
                              },
                              "CpuCount": { "type": "integer" },
                              "CpuPercent": { "type": "integer" },
                              "IOMaximumIOps": { "type": "integer" },
                              "IOMaximumBandwidth": { "type": "integer" },
                              "Binds": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": ".+:.+(:.+)?"
                                }
                              },
                              "ContainerIDFile": { "type": "string" },
                              "LogConfig": {
                                "type": "object",
                                "properties": {
                                  "Type": {
                                    "type": "string",
                                    "enum": [
                                      "json-file",
                                      "syslog",
                                      "journald",
                                      "gelf",
                                      "fluentd",
                                      "awslogs",
                                      "splunk",
                                      "etwlogs",
                                      "none"
                                    ]
                                  },
                                  "Config": {
                                    "type": "object",
                                    "properties": {
                                      "string": { "type": "string" }
                                    }
                                  }
                                }
                              },
                              "NetworkMode": {
                                "type": "string",
                                "enum": ["bridge", "host", "none"],
                                "x-alternatives": [
                                  {
                                    "type": "string",
                                    "enum": ["bridge", "host", "none"]
                                  },
                                  {
                                    "type": "string",
                                    "pattern": "^container:.*$"
                                  }
                                ]
                              },
                              "PortBindings": {
                                "type": "object",
                                "properties": {
                                  "string": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "HostIp": { "type": "string" },
                                        "HostPort": { "type": "string" }
                                      }
                                    }
                                  }
                                }
                              },
                              "RestartPolicy": {
                                "type": "object",
                                "properties": {
                                  "Name": {
                                    "type": "string",
                                    "enum": [
                                      "always",
                                      "unless-stopped",
                                      "on-failure"
                                    ]
                                  },
                                  "MaximumRetryCount": { "type": "integer" }
                                }
                              },
                              "AutoRemove": { "type": "boolean" },
                              "VolumeDriver": { "type": "string" },
                              "VolumesFrom": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": "^.+(:(ro|rw))?$"
                                }
                              },
                              "Mounts": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Target": { "type": "string" },
                                    "Source": { "type": "string" },
                                    "Type": {
                                      "type": "string",
                                      "enum": ["bind", "volume", "tmpfs"]
                                    },
                                    "ReadOnly": { "type": "boolean" },
                                    "Consistency": { "type": "string" },
                                    "BindOptions": {
                                      "type": "object",
                                      "properties": {
                                        "Propagation": {
                                          "type": "string",
                                          "enum": [
                                            "private",
                                            "rprivate",
                                            "shared",
                                            "rshared",
                                            "slave",
                                            "rslave"
                                          ]
                                        }
                                      }
                                    },
                                    "VolumeOptions": {
                                      "type": "object",
                                      "properties": {
                                        "NoCopy": { "type": "boolean" },
                                        "Labels": {
                                          "type": "object",
                                          "properties": {
                                            "string": { "type": "string" }
                                          }
                                        },
                                        "DriverConfig": {
                                          "type": "object",
                                          "properties": {
                                            "Name": { "type": "string" },
                                            "Options": {
                                              "type": "object",
                                              "properties": {
                                                "string": { "type": "string" }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "TmpfsOptions": {
                                      "type": "object",
                                      "properties": {
                                        "SizeBytes": { "type": "integer" },
                                        "Mode": { "type": "integer" }
                                      }
                                    }
                                  }
                                }
                              },
                              "CapAdd": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "CapDrop": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "Dns": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "DnsOptions": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "DnsSearch": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "ExtraHosts": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": "^.+:.+$"
                                }
                              },
                              "GroupAdd": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "IpcMode": { "type": "string" },
                              "Cgroup": { "type": "string" },
                              "Links": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": "^.+:.+$"
                                }
                              },
                              "OomScoreAdj": { "type": "integer" },
                              "PidMode": {
                                "type": "string",
                                "pattern": "^.+(:.+)?$"
                              },
                              "Privileged": { "type": "boolean" },
                              "PublishAllPorts": { "type": "boolean" },
                              "ReadonlyRootfs": { "type": "boolean" },
                              "SecurityOpt": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "StorageOpt": {
                                "type": "object",
                                "properties": { "string": { "type": "string" } }
                              },
                              "Tmpfs": {
                                "type": "object",
                                "properties": { "string": { "type": "string" } }
                              },
                              "UTSMode": { "type": "string" },
                              "UsernsMode": { "type": "string" },
                              "ShmSize": { "type": "integer", "minimum": 0 },
                              "Sysctls": {
                                "type": "object",
                                "properties": { "string": { "type": "string" } }
                              },
                              "Runtime": { "type": "string" },
                              "ConsoleSize": {
                                "type": "array",
                                "x-constraint": { "length": 2 },
                                "items": { "type": "integer", "minimum": 0 }
                              },
                              "Isolation": {
                                "type": "string",
                                "enum": ["default", "process", "hyperv"]
                              }
                            }
                          },
                          "NetworkingConfig": {
                            "type": "object",
                            "properties": {
                              "EndpointsConfig": {
                                "type": "object",
                                "properties": {
                                  "string": {
                                    "type": "object",
                                    "properties": {
                                      "IPAMConfig": {
                                        "type": "object",
                                        "properties": {
                                          "IPv4Address": {
                                            "type": "string",
                                            "x-format": {
                                              "ip": {
                                                "cidr": "optional",
                                                "version": ["ipv4"]
                                              }
                                            }
                                          },
                                          "IPv6Address": {
                                            "type": "string",
                                            "x-format": {
                                              "ip": {
                                                "cidr": "optional",
                                                "version": ["ipv6"]
                                              }
                                            }
                                          },
                                          "LinkLocalIPs": {
                                            "type": "array",
                                            "items": { "type": "string" }
                                          }
                                        }
                                      },
                                      "Links": {
                                        "type": "array",
                                        "items": { "type": "string" }
                                      },
                                      "Aliases": {
                                        "type": "array",
                                        "items": { "type": "string" }
                                      },
                                      "NetworkId": { "type": "string" },
                                      "EndpointId": { "type": "string" },
                                      "Gateway": { "type": "string" },
                                      "IPAddress": {
                                        "type": "string",
                                        "x-format": {
                                          "ip": {
                                            "cidr": "optional",
                                            "version": ["ipv4"]
                                          }
                                        }
                                      },
                                      "IPPrefixLen": { "type": "integer" },
                                      "IPv6Gateway": { "type": "string" },
                                      "GlobalIPv6Address": {
                                        "type": "string",
                                        "x-format": {
                                          "ip": {
                                            "cidr": "optional",
                                            "version": ["ipv6"]
                                          }
                                        }
                                      },
                                      "GlobalIPv6PrefixLen": {
                                        "type": "integer"
                                      },
                                      "MacAddress": { "type": "string" }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "containerTwinDesiredOptions": { "type": "object" },
                      "containerTwinReportedProperties": { "type": "object" },
                      "environmentVariables": {
                        "type": "array",
                        "description": "An array of object containing environment variables",
                        "x-meta": { "swaggerType": "array" },
                        "x-constraint": { "unique": "key" },
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": { "type": "string" },
                            "value": { "type": "string" }
                          },
                          "required": ["key", "value"]
                        }
                      },
                      "startupOrder": { "type": "number" },
                      "deployedAt": { "type": "string", "format": "date" }
                    }
                  }
                }
              }
            },
            "description": "Retrieve list of installed containers on device"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device(s) not found"
          }
        }
      }
    },
    "/devices/{deviceId}/custom-fields/{fieldId}": {
      "get": {
        "summary": "Get custom field from device",
        "operationId": "getDevicesDeviceidCustomfieldsFieldid",
        "description": "devices<br/><br/>viewDeviceDetails",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Custom field Id",
            "name": "fieldId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["deviceCustomFields"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "deviceId": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "fieldId": {
                  "type": "string",
                  "description": "Custom field Id"
                },
                "fieldValue": { "type": "string" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:08.516Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:08.516Z"
                }
              },
              "required": ["id", "deviceId", "fieldId", "fieldValue"]
            },
            "description": "Custom Field"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device(s) not found / FieldId not found"
          }
        }
      },
      "put": {
        "summary": "Update custom fields from device",
        "operationId": "putDevicesDeviceidCustomfieldsFieldid",
        "description": "devices<br/><br/>updateDevices",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Custom field Id",
            "name": "fieldId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": { "fieldValue": { "type": "string" } },
              "required": ["fieldValue"]
            }
          }
        ],
        "tags": ["deviceCustomFields"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "deviceId": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "fieldId": {
                  "type": "string",
                  "description": "Custom field Id"
                },
                "fieldValue": { "type": "string" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:08.516Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:08.516Z"
                }
              },
              "required": ["id", "deviceId", "fieldId", "fieldValue"]
            },
            "description": "Custom Field updated"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device(s) not found / FieldId not found"
          }
        }
      },
      "delete": {
        "summary": "Delete custom field from a device",
        "operationId": "deleteDevicesDeviceidCustomfieldsFieldid",
        "description": "devices<br/><br/>updateDevices",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Custom field Id",
            "name": "fieldId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["deviceCustomFields"],
        "security": [{ "jwt": [] }],
        "responses": {
          "204": { "description": "Custom Field deleted" },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device(s) not found / FieldId not found"
          }
        }
      }
    },
    "/devices/{deviceId}/containers/deployable": {
      "get": {
        "summary": "Get list of deployable (available) containers for specific device",
        "operationId": "getDevicesDeviceidContainersDeployable",
        "description": "devices<br/><br/>viewDeviceDetails",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "min(1), null and empty values are not allowed",
            "default": 1,
            "minimum": 1,
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "min(1) / max is set by config pageEntries, null and empty values are not allowed",
            "default": 10,
            "minimum": 1,
            "maximum": 5000,
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sort by \"name\" or other resource property, null not allowed",
            "default": "id",
            "name": "sortBy",
            "in": "query"
          },
          {
            "type": "string",
            "description": "valid - \"asc\" and \"desc\", null and empty string not allowed",
            "default": "asc",
            "enum": ["asc", "desc"],
            "name": "sortOrder",
            "in": "query"
          }
        ],
        "tags": ["deviceContainers"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "type": "object",
                  "properties": {
                    "offset": { "type": "integer" },
                    "limit": { "type": "integer" },
                    "total": { "type": "integer" }
                  },
                  "required": ["offset", "limit", "total"]
                },
                "deployable": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Random uuid v4.",
                        "default": "7adb258e-3ee7-4299-bcb9-513fab03f7d4",
                        "x-format": { "guid": { "version": "uuidv4" } }
                      },
                      "image": { "type": "string" },
                      "organisationId": { "type": "number" },
                      "organisation": { "type": "string" },
                      "containerAccess": {
                        "type": "string",
                        "description": "Container access",
                        "enum": ["public", "private"]
                      },
                      "status": { "type": "string" },
                      "displayName": {
                        "type": "string",
                        "description": "Display name"
                      },
                      "containerName": {
                        "type": "string",
                        "description": "Container name"
                      },
                      "icon": {
                        "type": "string",
                        "description": "Icon name",
                        "enum": [
                          "american sign language interpreting",
                          "assistive listening systems",
                          "audio description",
                          "blind",
                          "braille",
                          "closed captioning",
                          "closed captioning outline",
                          "deaf",
                          "low vision",
                          "phone volume",
                          "question circle",
                          "question circle outline",
                          "sign language",
                          "tty",
                          "universal access",
                          "wheelchair",
                          "angle double down",
                          "angle double left",
                          "angle double right",
                          "angle double up",
                          "angle down",
                          "angle left",
                          "angle right",
                          "angle up",
                          "arrow alternate circle down",
                          "arrow alternate circle down outline",
                          "arrow alternate circle left",
                          "arrow alternate circle left outline",
                          "arrow alternate circle right",
                          "arrow alternate circle right outline",
                          "arrow alternate circle up",
                          "arrow alternate circle up outline",
                          "arrow circle down",
                          "arrow circle left",
                          "arrow circle right",
                          "arrow circle up",
                          "arrow down",
                          "arrow left",
                          "arrow right",
                          "arrow up",
                          "arrows alternate",
                          "arrows alternate horizontal",
                          "arrows alternate vertical",
                          "caret down",
                          "caret left",
                          "caret right",
                          "caret square down",
                          "caret square down outline",
                          "caret square left",
                          "caret square left outline",
                          "caret square right",
                          "caret square right outline",
                          "caret square up",
                          "caret square up outline",
                          "caret up",
                          "cart arrow down",
                          "chart line",
                          "chevron circle down",
                          "chevron circle left",
                          "chevron circle right",
                          "chevron circle up",
                          "chevron down",
                          "chevron left",
                          "chevron right",
                          "chevron up",
                          "cloud download",
                          "cloud upload",
                          "download",
                          "exchange",
                          "expand arrows alternate",
                          "external alternate",
                          "external square alternate",
                          "hand point down",
                          "hand point down outline",
                          "hand point left",
                          "hand point left outline",
                          "hand point right",
                          "hand point right outline",
                          "hand point up",
                          "hand point up outline",
                          "hand pointer",
                          "hand pointer outline",
                          "history",
                          "level down alternate",
                          "level up alternate",
                          "location arrow",
                          "long arrow alternate down",
                          "long arrow alternate left",
                          "long arrow alternate right",
                          "long arrow alternate up",
                          "mouse pointer",
                          "play",
                          "random",
                          "recycle",
                          "redo",
                          "redo alternate",
                          "reply",
                          "reply all",
                          "retweet",
                          "share",
                          "share square",
                          "share square outline",
                          "sign-in",
                          "sign-out",
                          "sign-in alternate",
                          "sign-out alternate",
                          "sort",
                          "sort alphabet down",
                          "sort alphabet up",
                          "sort amount down",
                          "sort amount up",
                          "sort down",
                          "sort numeric down",
                          "sort numeric up",
                          "sort up",
                          "sync",
                          "sync alternate",
                          "text height",
                          "text width",
                          "undo",
                          "undo alternate",
                          "upload",
                          "zoom-in",
                          "zoom-out",
                          "backward",
                          "circle",
                          "circle outline",
                          "compress",
                          "eject",
                          "expand",
                          "fast backward",
                          "fast forward",
                          "file audio",
                          "file audio outline",
                          "file video",
                          "file video outline",
                          "film",
                          "forward",
                          "headphones",
                          "microphone",
                          "microphone slash",
                          "music",
                          "pause",
                          "pause circle",
                          "pause circle outline",
                          "play circle",
                          "play circle outline",
                          "podcast",
                          "rss",
                          "rss square",
                          "step backward",
                          "step forward",
                          "stop",
                          "stop circle",
                          "stop circle outline",
                          "video",
                          "volume down",
                          "volume off",
                          "volume up",
                          "address book",
                          "address book outline",
                          "address card",
                          "address card outline",
                          "archive",
                          "balance scale",
                          "birthday cake",
                          "book",
                          "briefcase",
                          "building",
                          "building outline",
                          "bullhorn",
                          "bullseye",
                          "calculator",
                          "calendar",
                          "calendar outline",
                          "calendar alternate",
                          "calendar alternate outline",
                          "certificate",
                          "chart area",
                          "chart bar",
                          "chart bar outline",
                          "chart pie",
                          "clipboard",
                          "clipboard outline",
                          "coffee",
                          "columns",
                          "compass",
                          "compass outline",
                          "copy",
                          "copy outline",
                          "copyright",
                          "copyright outline",
                          "cut",
                          "edit",
                          "edit outline",
                          "envelope",
                          "envelope outline",
                          "envelope open",
                          "envelope open outline",
                          "envelope square",
                          "eraser",
                          "fax",
                          "file",
                          "file outline",
                          "file alternate",
                          "file alternate outline",
                          "folder",
                          "folder outline",
                          "folder open",
                          "folder open outline",
                          "globe",
                          "industry",
                          "paperclip",
                          "paste",
                          "pen square",
                          "pencil alternate",
                          "percent",
                          "phone",
                          "phone square",
                          "registered",
                          "registered outline",
                          "save",
                          "save outline",
                          "sitemap",
                          "sticky note",
                          "sticky note outline",
                          "suitcase",
                          "table",
                          "tag",
                          "tags",
                          "tasks",
                          "thumbtack",
                          "trademark",
                          "chess",
                          "chess bishop",
                          "chess board",
                          "chess king",
                          "chess knight",
                          "chess pawn",
                          "chess queen",
                          "chess rook",
                          "square full",
                          "barcode",
                          "bath",
                          "bug",
                          "code",
                          "code branch",
                          "file code",
                          "file code outline",
                          "filter",
                          "fire extinguisher",
                          "keyboard",
                          "keyboard outline",
                          "microchip",
                          "qrcode",
                          "shield alternate",
                          "terminal",
                          "user secret",
                          "window close",
                          "window close outline",
                          "window maximize",
                          "window maximize outline",
                          "window minimize",
                          "window minimize outline",
                          "window restore",
                          "window restore outline",
                          "at",
                          "bell",
                          "bell outline",
                          "bell slash",
                          "bell slash outline",
                          "comment",
                          "comment outline",
                          "comment alternate",
                          "comment alternate outline",
                          "comments",
                          "comments outline",
                          "inbox",
                          "language",
                          "mobile",
                          "mobile alternate",
                          "paper plane",
                          "paper plane outline",
                          "wifi",
                          "desktop",
                          "hdd",
                          "hdd outline",
                          "laptop",
                          "plug",
                          "power off",
                          "print",
                          "server",
                          "tablet",
                          "tablet alternate",
                          "tv",
                          "dollar sign",
                          "euro sign",
                          "lira sign",
                          "money bill alternate",
                          "money bill alternate outline",
                          "pound sign",
                          "ruble sign",
                          "rupee sign",
                          "shekel sign",
                          "won sign",
                          "yen sign",
                          "calendar check",
                          "calendar check outline",
                          "calendar minus",
                          "calendar minus outline",
                          "calendar plus",
                          "calendar plus outline",
                          "calendar times",
                          "calendar times outline",
                          "clock",
                          "clock outline",
                          "hourglass",
                          "hourglass outline",
                          "hourglass end",
                          "hourglass half",
                          "hourglass start",
                          "stopwatch",
                          "adjust",
                          "clone",
                          "clone outline",
                          "crop",
                          "crosshairs",
                          "eye",
                          "eye dropper",
                          "eye slash",
                          "eye slash outline",
                          "object group",
                          "object group outline",
                          "object ungroup",
                          "object ungroup outline",
                          "paint brush",
                          "tint",
                          "align center",
                          "align justify",
                          "align left",
                          "align right",
                          "bold",
                          "font",
                          "heading",
                          "i cursor",
                          "indent",
                          "italic",
                          "linkify",
                          "list",
                          "list alternate",
                          "list alternate outline",
                          "list ol",
                          "list ul",
                          "outdent",
                          "paragraph",
                          "quote left",
                          "quote right",
                          "strikethrough",
                          "subscript",
                          "superscript",
                          "th",
                          "th large",
                          "th list",
                          "trash",
                          "trash alternate",
                          "trash alternate outline",
                          "underline",
                          "unlink",
                          "file archive",
                          "file archive outline",
                          "file excel",
                          "file excel outline",
                          "file image",
                          "file image outline",
                          "file pdf",
                          "file pdf outline",
                          "file powerpoint",
                          "file powerpoint outline",
                          "file word",
                          "file word outline",
                          "genderless",
                          "mars",
                          "mars double",
                          "mars stroke",
                          "mars stroke horizontal",
                          "mars stroke vertical",
                          "mercury",
                          "neuter",
                          "transgender",
                          "transgender alternate",
                          "venus",
                          "venus double",
                          "venus mars",
                          "hand lizard",
                          "hand lizard outline",
                          "hand paper",
                          "hand paper outline",
                          "hand peace",
                          "hand peace outline",
                          "hand rock",
                          "hand rock outline",
                          "hand scissors",
                          "hand scissors outline",
                          "hand spock",
                          "hand spock outline",
                          "handshake",
                          "handshake outline",
                          "thumbs down",
                          "thumbs down outline",
                          "thumbs up",
                          "thumbs up outline",
                          "ambulance",
                          "h square",
                          "heart",
                          "heart outline",
                          "heartbeat",
                          "hospital",
                          "hospital outline",
                          "medkit",
                          "plus square",
                          "plus square outline",
                          "stethoscope",
                          "user md",
                          "bolt",
                          "camera",
                          "camera retro",
                          "id badge",
                          "id badge outline",
                          "id card",
                          "id card outline",
                          "image",
                          "image outline",
                          "images",
                          "images outline",
                          "sliders horizontal",
                          "ban",
                          "bars",
                          "beer",
                          "check",
                          "check circle",
                          "check circle outline",
                          "check square",
                          "check square outline",
                          "cloud",
                          "cog",
                          "cogs",
                          "database",
                          "dot circle",
                          "dot circle outline",
                          "ellipsis horizontal",
                          "ellipsis vertical",
                          "exclamation",
                          "exclamation circle",
                          "exclamation triangle",
                          "flag",
                          "flag outline",
                          "flag checkered",
                          "frown",
                          "frown outline",
                          "hashtag",
                          "home",
                          "info",
                          "info circle",
                          "magic",
                          "meh",
                          "meh outline",
                          "minus",
                          "minus circle",
                          "minus square",
                          "minus square outline",
                          "plus",
                          "plus circle",
                          "question",
                          "search",
                          "search minus",
                          "search plus",
                          "share alternate",
                          "share alternate square",
                          "signal",
                          "smile",
                          "smile outline",
                          "star",
                          "star outline",
                          "star half",
                          "star half outline",
                          "times",
                          "times circle",
                          "times circle outline",
                          "toggle off",
                          "toggle on",
                          "trophy",
                          "user",
                          "user outline",
                          "user circle",
                          "user circle outline",
                          "box",
                          "boxes",
                          "clipboard check",
                          "clipboard list",
                          "dolly",
                          "dolly flatbed",
                          "pallet",
                          "shipping fast",
                          "truck",
                          "warehouse",
                          "anchor",
                          "bed",
                          "bicycle",
                          "binoculars",
                          "bomb",
                          "bookmark",
                          "bookmark outline",
                          "car",
                          "fighter jet",
                          "fire",
                          "flask",
                          "gamepad",
                          "gavel",
                          "gift",
                          "glass martini",
                          "graduation cap",
                          "key",
                          "leaf",
                          "lemon",
                          "lemon outline",
                          "life ring",
                          "life ring outline",
                          "lightbulb",
                          "lightbulb outline",
                          "magnet",
                          "male",
                          "map",
                          "map outline",
                          "map marker",
                          "map marker alternate",
                          "map pin",
                          "map signs",
                          "motorcycle",
                          "newspaper",
                          "newspaper outline",
                          "paw",
                          "plane",
                          "road",
                          "rocket",
                          "ship",
                          "shopping bag",
                          "shopping basket",
                          "shopping cart",
                          "shower",
                          "street view",
                          "subway",
                          "taxi",
                          "ticket alternate",
                          "train",
                          "tree",
                          "umbrella",
                          "university",
                          "utensil spoon",
                          "utensils",
                          "wrench",
                          "band aid",
                          "dna",
                          "first aid",
                          "hospital symbol",
                          "pills",
                          "syringe",
                          "thermometer",
                          "weight",
                          "bus",
                          "cube",
                          "cubes",
                          "futbol",
                          "futbol outline",
                          "gem",
                          "gem outline",
                          "lock",
                          "lock open",
                          "moon",
                          "moon outline",
                          "puzzle piece",
                          "snowflake",
                          "snowflake outline",
                          "space shuttle",
                          "sun",
                          "sun outline",
                          "tachometer alternate",
                          "unlock",
                          "unlock alternate",
                          "cart plus",
                          "credit card",
                          "credit card outline",
                          "square",
                          "square outline",
                          "asterisk",
                          "circle notch",
                          "spinner",
                          "baseball ball",
                          "basketball ball",
                          "bowling ball",
                          "football ball",
                          "golf ball",
                          "hockey puck",
                          "quidditch",
                          "table tennis",
                          "volleyball ball",
                          "battery empty",
                          "battery full",
                          "battery half",
                          "battery quarter",
                          "battery three quarters",
                          "sign in alternate",
                          "sign out alternate",
                          "thermometer empty",
                          "thermometer full",
                          "thermometer half",
                          "thermometer quarter",
                          "thermometer three quarters",
                          "child",
                          "female",
                          "user plus",
                          "user times",
                          "users",
                          "500px",
                          "accessible",
                          "accusoft",
                          "adn",
                          "adversal",
                          "affiliatetheme",
                          "algolia",
                          "amazon",
                          "amazon pay",
                          "amilia",
                          "android",
                          "angellist",
                          "angrycreative",
                          "angular",
                          "app store",
                          "app store ios",
                          "apper",
                          "apple",
                          "apple pay",
                          "asymmetrik",
                          "audible",
                          "autoprefixer",
                          "avianex",
                          "aviato",
                          "aws",
                          "bandcamp",
                          "behance",
                          "behance square",
                          "bimobject",
                          "bitbucket",
                          "bitcoin",
                          "bity",
                          "black tie",
                          "blackberry",
                          "blogger",
                          "blogger b",
                          "bluetooth",
                          "bluetooth b",
                          "btc",
                          "buromobelexperte",
                          "buysellads",
                          "cc amazon pay",
                          "cc amex",
                          "cc apple pay",
                          "cc diners club",
                          "cc discover",
                          "cc jcb",
                          "cc mastercard",
                          "cc paypal",
                          "cc stripe",
                          "cc visa",
                          "centercode",
                          "chrome",
                          "cloudscale",
                          "cloudsmith",
                          "cloudversify",
                          "codepen",
                          "codiepie",
                          "connectdevelop",
                          "contao",
                          "cpanel",
                          "creative commons",
                          "css3",
                          "css3 alternate",
                          "cuttlefish",
                          "d and d",
                          "dashcube",
                          "delicious",
                          "deploydog",
                          "deskpro",
                          "deviantart",
                          "digg",
                          "digital ocean",
                          "discord",
                          "discourse",
                          "dochub",
                          "docker",
                          "draft2digital",
                          "dribbble",
                          "dribbble square",
                          "dropbox",
                          "drupal",
                          "dyalog",
                          "earlybirds",
                          "edge",
                          "elementor",
                          "ember",
                          "empire",
                          "envira",
                          "erlang",
                          "ethereum",
                          "etsy",
                          "expeditedssl",
                          "facebook",
                          "facebook f",
                          "facebook messenger",
                          "facebook square",
                          "firefox",
                          "first order",
                          "firstdraft",
                          "flickr",
                          "flipboard",
                          "fly",
                          "font awesome",
                          "font awesome alternate",
                          "font awesome flag",
                          "fonticons",
                          "fonticons fi",
                          "fort awesome",
                          "fort awesome alternate",
                          "forumbee",
                          "foursquare",
                          "free code camp",
                          "freebsd",
                          "get pocket",
                          "gg",
                          "gg circle",
                          "git",
                          "git square",
                          "github",
                          "github alternate",
                          "github square",
                          "gitkraken",
                          "gitlab",
                          "gitter",
                          "glide",
                          "glide g",
                          "gofore",
                          "goodreads",
                          "goodreads g",
                          "google",
                          "google drive",
                          "google play",
                          "google plus",
                          "google plus g",
                          "google plus square",
                          "google wallet",
                          "gratipay",
                          "grav",
                          "gripfire",
                          "grunt",
                          "gulp",
                          "hacker news",
                          "hacker news square",
                          "hips",
                          "hire a helper",
                          "hooli",
                          "hotjar",
                          "houzz",
                          "html5",
                          "hubspot",
                          "imdb",
                          "instagram",
                          "internet explorer",
                          "ioxhost",
                          "itunes",
                          "itunes note",
                          "jenkins",
                          "joget",
                          "joomla",
                          "js",
                          "js square",
                          "jsfiddle",
                          "keycdn",
                          "kickstarter",
                          "kickstarter k",
                          "korvue",
                          "laravel",
                          "lastfm",
                          "lastfm square",
                          "leanpub",
                          "less",
                          "linechat",
                          "linkedin",
                          "linkedin alternate",
                          "linode",
                          "linux",
                          "lyft",
                          "magento",
                          "maxcdn",
                          "medapps",
                          "medium",
                          "medium m",
                          "medrt",
                          "meetup",
                          "microsoft",
                          "mix",
                          "mixcloud",
                          "mizuni",
                          "modx",
                          "monero",
                          "napster",
                          "nintendo switch",
                          "node",
                          "node js",
                          "npm",
                          "ns8",
                          "nutritionix",
                          "odnoklassniki",
                          "odnoklassniki square",
                          "opencart",
                          "openid",
                          "opera",
                          "optin monster",
                          "osi",
                          "page4",
                          "pagelines",
                          "palfed",
                          "patreon",
                          "paypal",
                          "periscope",
                          "phabricator",
                          "phoenix framework",
                          "php",
                          "pied piper",
                          "pied piper alternate",
                          "pied piper pp",
                          "pinterest",
                          "pinterest p",
                          "pinterest square",
                          "playstation",
                          "product hunt",
                          "pushed",
                          "python",
                          "qq",
                          "quinscape",
                          "quora",
                          "ravelry",
                          "react",
                          "rebel",
                          "redriver",
                          "reddit",
                          "reddit alien",
                          "reddit square",
                          "rendact",
                          "renren",
                          "replyd",
                          "resolving",
                          "rocketchat",
                          "rockrms",
                          "safari",
                          "sass",
                          "schlix",
                          "scribd",
                          "searchengin",
                          "sellcast",
                          "sellsy",
                          "servicestack",
                          "shirtsinbulk",
                          "simplybuilt",
                          "sistrix",
                          "skyatlas",
                          "skype",
                          "slack",
                          "slack hash",
                          "slideshare",
                          "snapchat",
                          "snapchat ghost",
                          "snapchat square",
                          "soundcloud",
                          "speakap",
                          "spotify",
                          "stack exchange",
                          "stack overflow",
                          "staylinked",
                          "steam",
                          "steam square",
                          "steam symbol",
                          "sticker mule",
                          "strava",
                          "stripe",
                          "stripe s",
                          "studiovinari",
                          "stumbleupon",
                          "stumbleupon circle",
                          "superpowers",
                          "supple",
                          "telegram",
                          "telegram plane",
                          "tencent weibo",
                          "themeisle",
                          "trello",
                          "tripadvisor",
                          "tumblr",
                          "tumblr square",
                          "twitch",
                          "twitter",
                          "twitter square",
                          "typo3",
                          "uber",
                          "uikit",
                          "uniregistry",
                          "untappd",
                          "usb",
                          "ussunnah",
                          "vaadin",
                          "viacoin",
                          "viadeo",
                          "viadeo square",
                          "viber",
                          "vimeo",
                          "vimeo square",
                          "vimeo v",
                          "vine",
                          "vk",
                          "vnv",
                          "vuejs",
                          "wechat",
                          "weibo",
                          "weixin",
                          "whatsapp",
                          "whatsapp square",
                          "whmcs",
                          "wikipedia w",
                          "windows",
                          "wordpress",
                          "wordpress simple",
                          "wpbeginner",
                          "wpexplorer",
                          "wpforms",
                          "xbox",
                          "xing",
                          "xing square",
                          "y combinator",
                          "yahoo",
                          "yandex",
                          "yandex international",
                          "yelp",
                          "yoast",
                          "youtube",
                          "youtube square",
                          "chess rock",
                          "ordered list",
                          "unordered list",
                          "user doctor",
                          "shield",
                          "puzzle",
                          "add circle",
                          "add square",
                          "add to calendar",
                          "add to cart",
                          "add user",
                          "add",
                          "alarm mute",
                          "alarm",
                          "ald",
                          "als",
                          "announcement",
                          "area chart",
                          "area graph",
                          "arrow down cart",
                          "asexual",
                          "asl interpreting",
                          "asl",
                          "assistive listening devices",
                          "attach",
                          "attention",
                          "balance",
                          "bar",
                          "bathtub",
                          "battery four",
                          "battery high",
                          "battery low",
                          "battery one",
                          "battery three",
                          "battery two",
                          "battery zero",
                          "birthday",
                          "block layout",
                          "bluetooth alternative",
                          "broken chain",
                          "browser",
                          "call square",
                          "call",
                          "cancel",
                          "cart",
                          "cc",
                          "chain",
                          "chat",
                          "checked calendar",
                          "checkmark",
                          "circle notched",
                          "close",
                          "cny",
                          "cocktail",
                          "commenting",
                          "computer",
                          "configure",
                          "content",
                          "deafness",
                          "delete calendar",
                          "delete",
                          "detective",
                          "discussions",
                          "doctor",
                          "dollar",
                          "dont",
                          "drivers license",
                          "dropdown",
                          "emergency",
                          "envira gallery",
                          "erase",
                          "eur",
                          "euro",
                          "eyedropper",
                          "factory",
                          "favorite",
                          "feed",
                          "female homosexual",
                          "file text",
                          "file text outline",
                          "find",
                          "fork",
                          "game",
                          "gay",
                          "gbp",
                          "google plus circle",
                          "google plus official",
                          "grab",
                          "graduation",
                          "grid layout",
                          "group",
                          "h",
                          "hand victory",
                          "handicap",
                          "hard of hearing",
                          "header",
                          "help circle",
                          "help",
                          "heterosexual",
                          "hide",
                          "hotel",
                          "hourglass four",
                          "hourglass full",
                          "hourglass one",
                          "hourglass three",
                          "hourglass two",
                          "idea",
                          "ils",
                          "in cart",
                          "inr",
                          "intergender",
                          "intersex",
                          "jpy",
                          "krw",
                          "lab",
                          "law",
                          "legal",
                          "lesbian",
                          "lightning",
                          "like",
                          "line graph",
                          "linkedin square",
                          "lira",
                          "list layout",
                          "magnify",
                          "mail forward",
                          "mail square",
                          "mail",
                          "male homosexual",
                          "man",
                          "marker",
                          "mars alternate",
                          "mars horizontal",
                          "mars vertical",
                          "microsoft edge",
                          "military",
                          "ms edge",
                          "mute",
                          "new pied piper",
                          "non binary transgender",
                          "numbered list",
                          "options",
                          "other gender horizontal",
                          "other gender vertical",
                          "other gender",
                          "payment",
                          "paypal card",
                          "pencil square",
                          "photo",
                          "picture",
                          "pie chart",
                          "pie graph",
                          "pied piper hat",
                          "pin",
                          "plus cart",
                          "point",
                          "pointing down",
                          "pointing left",
                          "pointing right",
                          "pointing up",
                          "pound",
                          "power cord",
                          "power",
                          "privacy",
                          "r circle",
                          "rain",
                          "record",
                          "refresh",
                          "remove circle",
                          "remove from calendar",
                          "remove user",
                          "remove",
                          "repeat",
                          "rmb",
                          "rouble",
                          "rub",
                          "ruble",
                          "rupee",
                          "s15",
                          "selected radio",
                          "send",
                          "setting",
                          "settings",
                          "shekel",
                          "sheqel",
                          "shipping",
                          "shop",
                          "shuffle",
                          "shutdown",
                          "sidebar",
                          "signing",
                          "signup",
                          "sliders",
                          "soccer",
                          "sort alphabet ascending",
                          "sort alphabet descending",
                          "sort ascending",
                          "sort content ascending",
                          "sort content descending",
                          "sort descending",
                          "sort numeric ascending",
                          "sort numeric descending",
                          "sound",
                          "spy",
                          "stripe card",
                          "student",
                          "talk",
                          "target",
                          "teletype",
                          "television",
                          "text cursor",
                          "text telephone",
                          "theme",
                          "thumb tack",
                          "time",
                          "tm",
                          "toggle down",
                          "toggle left",
                          "toggle right",
                          "toggle up",
                          "translate",
                          "travel",
                          "treatment",
                          "triangle down",
                          "triangle left",
                          "triangle right",
                          "triangle up",
                          "try",
                          "unhide",
                          "unlinkify",
                          "unmute",
                          "usd",
                          "user cancel",
                          "user close",
                          "user delete",
                          "user x",
                          "vcard",
                          "video camera",
                          "video play",
                          "volume control phone",
                          "wait",
                          "warning circle",
                          "warning sign",
                          "warning",
                          "wi-fi",
                          "winner",
                          "wizard",
                          "woman",
                          "won",
                          "wordpress beginner",
                          "wordpress forms",
                          "world",
                          "write square",
                          "x",
                          "yen",
                          "zip",
                          "zoom in",
                          "zoom out",
                          "zoom",
                          "bitbucket square",
                          "checkmark box",
                          "circle thin",
                          "compose",
                          "conversation",
                          "credit card alternative",
                          "currency",
                          "dashboard",
                          "diamond",
                          "disk",
                          "external share",
                          "external square",
                          "external",
                          "facebook official",
                          "food",
                          "hourglass zero",
                          "level down",
                          "level up",
                          "log out",
                          "meanpath",
                          "money",
                          "move",
                          "pencil",
                          "protect",
                          "radio",
                          "remove bookmark",
                          "resize horizontal",
                          "resize vertical",
                          "sign in",
                          "sign out",
                          "spoon",
                          "star half empty",
                          "star half full",
                          "ticket",
                          "times rectangle",
                          "write"
                        ]
                      },
                      "type": { "type": "string" },
                      "restartPolicy": {
                        "type": "string",
                        "description": "Restart policy"
                      },
                      "desiredStatus": {
                        "type": "string",
                        "description": "Desired status",
                        "enum": ["stopped", "running"]
                      },
                      "registryType": {
                        "type": "string",
                        "description": "Registry type",
                        "enum": ["public", "private"]
                      },
                      "category": {
                        "type": "string",
                        "description": "Container categories",
                        "enum": [
                          "Receiver",
                          "Connectivity",
                          "Data Acquisition",
                          "IT/Cloud Connectors",
                          "Services",
                          "Applications"
                        ]
                      },
                      "settingsPageId": {
                        "type": "string",
                        "description": "Settings page",
                        "enum": [
                          "gatewayTelemetry",
                          "networkTopology",
                          "opcuaPublisher",
                          "ainConnector",
                          "netFieldProxy",
                          "netFieldAppPlatformConnector"
                        ]
                      },
                      "shortDescription": {
                        "type": "string",
                        "description": "Short description, max(60)",
                        "maxLength": 60
                      },
                      "description": {
                        "type": "string",
                        "description": "Description, max(3000)",
                        "maxLength": 3000
                      },
                      "credentials": {
                        "type": "object",
                        "properties": {
                          "address": { "type": "string" },
                          "username": { "type": "string" }
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "createdAt",
                        "default": "2021-05-21T06:02:08.687Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "updatedAt",
                        "default": "2021-05-21T06:02:08.687Z"
                      }
                    }
                  }
                }
              }
            },
            "description": "Retrieve list of installed containers on device"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device(s) not found"
          }
        }
      }
    },
    "/devices/{deviceId}/containers/{containerId}": {
      "get": {
        "summary": "Get information about specific container, installed into device",
        "operationId": "getDevicesDeviceidContainersContainerid",
        "description": "devices<br/><br/>viewDeviceDetails",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / uuid_v4",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "name": "containerId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["deviceContainers"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Random uuid v4.",
                  "default": "7adb258e-3ee7-4299-bcb9-513fab03f7d4",
                  "x-format": { "guid": { "version": "uuidv4" } }
                },
                "referenceId": {
                  "type": "string",
                  "description": "Random uuid v4.",
                  "default": "7adb258e-3ee7-4299-bcb9-513fab03f7d4",
                  "x-format": { "guid": { "version": "uuidv4" } }
                },
                "organisation": { "type": "string" },
                "displayName": { "type": "string" },
                "containerName": { "type": "string" },
                "image": { "type": "string" },
                "icon": { "type": "string" },
                "type": { "type": "string" },
                "version": { "type": "string" },
                "restartPolicy": {
                  "type": "string",
                  "enum": ["always", "never", "on-failed", "on-unhealthy"]
                },
                "desiredStatus": {
                  "type": "string",
                  "enum": ["stopped", "running"]
                },
                "status": { "type": "string" },
                "imageUri": { "type": "string" },
                "registryType": {
                  "type": "string",
                  "enum": ["public", "private"]
                },
                "credentials": {
                  "type": "object",
                  "properties": {
                    "address": { "type": "string" },
                    "username": { "type": "string" }
                  }
                },
                "processorArchitecture": {
                  "type": "string",
                  "description": "Processor architecture",
                  "enum": [
                    "Linux-X86",
                    "Linux-X64",
                    "Linux-ARM32V7",
                    "Linux-ARM64V8",
                    "All"
                  ]
                },
                "settingsPageId": {
                  "type": "string",
                  "enum": [
                    "gatewayTelemetry",
                    "networkTopology",
                    "opcuaPublisher",
                    "ainConnector",
                    "netFieldProxy",
                    "netFieldAppPlatformConnector"
                  ]
                },
                "shortDescription": { "type": "string", "maxLength": 60 },
                "description": { "type": "string", "maxLength": 3000 },
                "releaseNotes": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "category": {
                  "type": "string",
                  "enum": [
                    "Receiver",
                    "Connectivity",
                    "Data Acquisition",
                    "IT/Cloud Connectors",
                    "Services",
                    "Applications"
                  ]
                },
                "containerCreateOptions": {
                  "type": "object",
                  "description": "See latest Docker documentation",
                  "x-meta": { "swaggerType": "object" },
                  "properties": {
                    "Hostname": { "type": "string" },
                    "Domainname": { "type": "string" },
                    "User": { "type": "string" },
                    "AttachStdin": { "type": "boolean" },
                    "AttachStdout": { "type": "boolean" },
                    "AttachStderr": { "type": "boolean" },
                    "ExposedPorts": {
                      "type": "object",
                      "properties": { "string": { "type": "object" } }
                    },
                    "Tty": { "type": "boolean" },
                    "OpenStdin": { "type": "boolean" },
                    "StdinOnce": { "type": "boolean" },
                    "Env": {
                      "type": "string",
                      "x-alternatives": [
                        { "type": "string" },
                        { "type": "array", "items": { "type": "string" } }
                      ]
                    },
                    "Cmd": {
                      "type": "string",
                      "x-alternatives": [
                        { "type": "string" },
                        { "type": "array", "items": { "type": "string" } }
                      ]
                    },
                    "Healthcheck": {
                      "type": "object",
                      "properties": {
                        "Test": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "Interval": {
                          "type": "string",
                          "enum": [0],
                          "x-alternatives": [
                            { "type": "string", "enum": [0] },
                            { "type": "integer", "minimum": 1000000 }
                          ]
                        },
                        "Timeout": {
                          "type": "string",
                          "enum": [0],
                          "x-alternatives": [
                            { "type": "string", "enum": [0] },
                            { "type": "integer", "minimum": 1000000 }
                          ]
                        },
                        "Retries": { "type": "integer", "minimum": 0 },
                        "StartPeriod": {
                          "type": "string",
                          "enum": [0],
                          "x-alternatives": [
                            { "type": "string", "enum": [0] },
                            { "type": "integer", "minimum": 1000000 }
                          ]
                        }
                      }
                    },
                    "ArgsEscaped": { "type": "boolean" },
                    "Image": { "type": "string" },
                    "Volumes": {
                      "type": "object",
                      "properties": { "string": { "type": "object" } }
                    },
                    "WorkingDir": { "type": "string" },
                    "Entrypoint": {
                      "x-alternatives": [
                        { "type": "array", "items": { "type": "string" } },
                        { "type": "string" }
                      ],
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "NetworkDisabled": { "type": "boolean" },
                    "MacAddress": {
                      "type": "string",
                      "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$"
                    },
                    "OnBuild": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "Labels": {
                      "type": "object",
                      "properties": { "string": { "type": "string" } }
                    },
                    "StopSignal": { "type": "string" },
                    "StopTimeout": { "type": "integer", "minimum": 0 },
                    "Shell": { "type": "array", "items": { "type": "string" } },
                    "HostConfig": {
                      "type": "object",
                      "properties": {
                        "MaximumIOps": { "type": "integer" },
                        "MaximumIOBps": { "type": "integer" },
                        "CpuShares": { "type": "integer" },
                        "Memory": { "type": "integer" },
                        "CgroupParent": { "type": "string" },
                        "BlkioWeight": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 1000
                        },
                        "BlkioWeightDevice": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Weight": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceReadBps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceWriteBps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceReadIOps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceWriteIOps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "CpuPeriod": { "type": "integer" },
                        "CpuQuota": { "type": "integer" },
                        "CpuRealtimePeriod": { "type": "integer" },
                        "CpuRealtimeRuntime": { "type": "integer" },
                        "CpusetCpus": { "type": "string" },
                        "CpusetMems": { "type": "string" },
                        "Devices": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "PathOnHost": { "type": "string" },
                              "PathInContainer": { "type": "string" },
                              "CgroupPermissions": { "type": "string" }
                            }
                          }
                        },
                        "DeviceCgroupRules": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "DiskQuota": { "type": "integer" },
                        "KernelMemory": { "type": "integer" },
                        "MemoryReservation": { "type": "integer" },
                        "MemorySwap": { "type": "integer" },
                        "MemorySwappiness": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 100
                        },
                        "NanoCPUs": { "type": "integer" },
                        "OomKillDisable": { "type": "boolean" },
                        "PidsLimit": { "type": "integer" },
                        "Ulimits": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Name": { "type": "string" },
                              "Soft": { "type": "integer" },
                              "Hard": { "type": "integer" }
                            }
                          }
                        },
                        "CpuCount": { "type": "integer" },
                        "CpuPercent": { "type": "integer" },
                        "IOMaximumIOps": { "type": "integer" },
                        "IOMaximumBandwidth": { "type": "integer" },
                        "Binds": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "pattern": ".+:.+(:.+)?"
                          }
                        },
                        "ContainerIDFile": { "type": "string" },
                        "LogConfig": {
                          "type": "object",
                          "properties": {
                            "Type": {
                              "type": "string",
                              "enum": [
                                "json-file",
                                "syslog",
                                "journald",
                                "gelf",
                                "fluentd",
                                "awslogs",
                                "splunk",
                                "etwlogs",
                                "none"
                              ]
                            },
                            "Config": {
                              "type": "object",
                              "properties": { "string": { "type": "string" } }
                            }
                          }
                        },
                        "NetworkMode": {
                          "type": "string",
                          "enum": ["bridge", "host", "none"],
                          "x-alternatives": [
                            {
                              "type": "string",
                              "enum": ["bridge", "host", "none"]
                            },
                            { "type": "string", "pattern": "^container:.*$" }
                          ]
                        },
                        "PortBindings": {
                          "type": "object",
                          "properties": {
                            "string": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "HostIp": { "type": "string" },
                                  "HostPort": { "type": "string" }
                                }
                              }
                            }
                          }
                        },
                        "RestartPolicy": {
                          "type": "object",
                          "properties": {
                            "Name": {
                              "type": "string",
                              "enum": ["always", "unless-stopped", "on-failure"]
                            },
                            "MaximumRetryCount": { "type": "integer" }
                          }
                        },
                        "AutoRemove": { "type": "boolean" },
                        "VolumeDriver": { "type": "string" },
                        "VolumesFrom": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "pattern": "^.+(:(ro|rw))?$"
                          }
                        },
                        "Mounts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Target": { "type": "string" },
                              "Source": { "type": "string" },
                              "Type": {
                                "type": "string",
                                "enum": ["bind", "volume", "tmpfs"]
                              },
                              "ReadOnly": { "type": "boolean" },
                              "Consistency": { "type": "string" },
                              "BindOptions": {
                                "type": "object",
                                "properties": {
                                  "Propagation": {
                                    "type": "string",
                                    "enum": [
                                      "private",
                                      "rprivate",
                                      "shared",
                                      "rshared",
                                      "slave",
                                      "rslave"
                                    ]
                                  }
                                }
                              },
                              "VolumeOptions": {
                                "type": "object",
                                "properties": {
                                  "NoCopy": { "type": "boolean" },
                                  "Labels": {
                                    "type": "object",
                                    "properties": {
                                      "string": { "type": "string" }
                                    }
                                  },
                                  "DriverConfig": {
                                    "type": "object",
                                    "properties": {
                                      "Name": { "type": "string" },
                                      "Options": {
                                        "type": "object",
                                        "properties": {
                                          "string": { "type": "string" }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "TmpfsOptions": {
                                "type": "object",
                                "properties": {
                                  "SizeBytes": { "type": "integer" },
                                  "Mode": { "type": "integer" }
                                }
                              }
                            }
                          }
                        },
                        "CapAdd": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "CapDrop": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "Dns": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "DnsOptions": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "DnsSearch": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "ExtraHosts": {
                          "type": "array",
                          "items": { "type": "string", "pattern": "^.+:.+$" }
                        },
                        "GroupAdd": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "IpcMode": { "type": "string" },
                        "Cgroup": { "type": "string" },
                        "Links": {
                          "type": "array",
                          "items": { "type": "string", "pattern": "^.+:.+$" }
                        },
                        "OomScoreAdj": { "type": "integer" },
                        "PidMode": {
                          "type": "string",
                          "pattern": "^.+(:.+)?$"
                        },
                        "Privileged": { "type": "boolean" },
                        "PublishAllPorts": { "type": "boolean" },
                        "ReadonlyRootfs": { "type": "boolean" },
                        "SecurityOpt": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "StorageOpt": {
                          "type": "object",
                          "properties": { "string": { "type": "string" } }
                        },
                        "Tmpfs": {
                          "type": "object",
                          "properties": { "string": { "type": "string" } }
                        },
                        "UTSMode": { "type": "string" },
                        "UsernsMode": { "type": "string" },
                        "ShmSize": { "type": "integer", "minimum": 0 },
                        "Sysctls": {
                          "type": "object",
                          "properties": { "string": { "type": "string" } }
                        },
                        "Runtime": { "type": "string" },
                        "ConsoleSize": {
                          "type": "array",
                          "x-constraint": { "length": 2 },
                          "items": { "type": "integer", "minimum": 0 }
                        },
                        "Isolation": {
                          "type": "string",
                          "enum": ["default", "process", "hyperv"]
                        }
                      }
                    },
                    "NetworkingConfig": {
                      "type": "object",
                      "properties": {
                        "EndpointsConfig": {
                          "type": "object",
                          "properties": {
                            "string": {
                              "type": "object",
                              "properties": {
                                "IPAMConfig": {
                                  "type": "object",
                                  "properties": {
                                    "IPv4Address": {
                                      "type": "string",
                                      "x-format": {
                                        "ip": {
                                          "cidr": "optional",
                                          "version": ["ipv4"]
                                        }
                                      }
                                    },
                                    "IPv6Address": {
                                      "type": "string",
                                      "x-format": {
                                        "ip": {
                                          "cidr": "optional",
                                          "version": ["ipv6"]
                                        }
                                      }
                                    },
                                    "LinkLocalIPs": {
                                      "type": "array",
                                      "items": { "type": "string" }
                                    }
                                  }
                                },
                                "Links": {
                                  "type": "array",
                                  "items": { "type": "string" }
                                },
                                "Aliases": {
                                  "type": "array",
                                  "items": { "type": "string" }
                                },
                                "NetworkId": { "type": "string" },
                                "EndpointId": { "type": "string" },
                                "Gateway": { "type": "string" },
                                "IPAddress": {
                                  "type": "string",
                                  "x-format": {
                                    "ip": {
                                      "cidr": "optional",
                                      "version": ["ipv4"]
                                    }
                                  }
                                },
                                "IPPrefixLen": { "type": "integer" },
                                "IPv6Gateway": { "type": "string" },
                                "GlobalIPv6Address": {
                                  "type": "string",
                                  "x-format": {
                                    "ip": {
                                      "cidr": "optional",
                                      "version": ["ipv6"]
                                    }
                                  }
                                },
                                "GlobalIPv6PrefixLen": { "type": "integer" },
                                "MacAddress": { "type": "string" }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "containerTwinDesiredOptions": { "type": "object" },
                "containerTwinReportedProperties": { "type": "object" },
                "environmentVariables": {
                  "type": "array",
                  "description": "An array of object containing environment variables",
                  "x-meta": { "swaggerType": "array" },
                  "x-constraint": { "unique": "key" },
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": { "type": "string" },
                      "value": { "type": "string" }
                    },
                    "required": ["key", "value"]
                  }
                },
                "startupOrder": { "type": "number" },
                "deployedAt": { "type": "string", "format": "date" }
              }
            },
            "description": "Retrieve a single installed container on device"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Container(s) not found / Device(s) not found"
          }
        }
      },
      "post": {
        "summary": "Installs (deploy) a container to device. Every container specified in the database has a set of properties.Some or all can be overridden via body attributes",
        "operationId": "postDevicesDeviceidContainersContainerid",
        "description": "devices<br/><br/>installContainers",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / uuid_v4",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "name": "containerId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Container version, null or empty not allowed",
            "name": "version",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Restart policy",
            "enum": ["always", "never", "on-failed", "on-unhealthy"],
            "name": "restartPolicy",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Desired status",
            "enum": ["stopped", "running"],
            "name": "desiredStatus",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "See latest Docker documentation",
            "x-meta": { "swaggerType": "object" },
            "name": "containerCreateOptions",
            "in": "formData",
            "x-type": "object",
            "x-properties": {
              "Hostname": { "type": "string" },
              "Domainname": { "type": "string" },
              "User": { "type": "string" },
              "AttachStdin": { "type": "boolean" },
              "AttachStdout": { "type": "boolean" },
              "AttachStderr": { "type": "boolean" },
              "ExposedPorts": {
                "type": "object",
                "x-properties": { "string": { "type": "object" } }
              },
              "Tty": { "type": "boolean" },
              "OpenStdin": { "type": "boolean" },
              "StdinOnce": { "type": "boolean" },
              "Env": {
                "type": "string",
                "x-alternatives": [
                  { "type": "string" },
                  {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "Env"
                  }
                ]
              },
              "Cmd": {
                "type": "string",
                "x-alternatives": [
                  { "type": "string" },
                  {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "Cmd"
                  }
                ]
              },
              "Healthcheck": {
                "type": "object",
                "x-properties": {
                  "Test": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "Test"
                  },
                  "Interval": {
                    "type": "string",
                    "enum": [0],
                    "x-alternatives": [
                      { "type": "string", "enum": [0] },
                      { "type": "integer", "minimum": 1000000 }
                    ]
                  },
                  "Timeout": {
                    "type": "string",
                    "enum": [0],
                    "x-alternatives": [
                      { "type": "string", "enum": [0] },
                      { "type": "integer", "minimum": 1000000 }
                    ]
                  },
                  "Retries": { "type": "integer", "minimum": 0 },
                  "StartPeriod": {
                    "type": "string",
                    "enum": [0],
                    "x-alternatives": [
                      { "type": "string", "enum": [0] },
                      { "type": "integer", "minimum": 1000000 }
                    ]
                  }
                }
              },
              "ArgsEscaped": { "type": "boolean" },
              "Image": { "type": "string" },
              "Volumes": {
                "type": "object",
                "x-properties": { "string": { "type": "object" } }
              },
              "WorkingDir": { "type": "string" },
              "Entrypoint": {
                "type": "array",
                "items": { "type": "string" },
                "collectionFormat": "multi",
                "x-alternatives": [
                  {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "Entrypoint"
                  },
                  { "type": "string" }
                ]
              },
              "NetworkDisabled": { "type": "boolean" },
              "MacAddress": {
                "type": "string",
                "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$"
              },
              "OnBuild": {
                "type": "array",
                "items": { "type": "string" },
                "collectionFormat": "multi",
                "name": "OnBuild"
              },
              "Labels": {
                "type": "object",
                "x-properties": { "string": { "type": "string" } }
              },
              "StopSignal": { "type": "string" },
              "StopTimeout": { "type": "integer", "minimum": 0 },
              "Shell": {
                "type": "array",
                "items": { "type": "string" },
                "collectionFormat": "multi",
                "name": "Shell"
              },
              "HostConfig": {
                "type": "object",
                "x-properties": {
                  "MaximumIOps": { "type": "integer" },
                  "MaximumIOBps": { "type": "integer" },
                  "CpuShares": { "type": "integer" },
                  "Memory": { "type": "integer" },
                  "CgroupParent": { "type": "string" },
                  "BlkioWeight": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 1000
                  },
                  "BlkioWeightDevice": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Path": { "type": "string" },
                        "Weight": { "type": "integer", "minimum": 0 }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "BlkioWeightDevice"
                  },
                  "BlkioDeviceReadBps": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Path": { "type": "string" },
                        "Rate": { "type": "integer", "minimum": 0 }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "BlkioDeviceReadBps"
                  },
                  "BlkioDeviceWriteBps": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Path": { "type": "string" },
                        "Rate": { "type": "integer", "minimum": 0 }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "BlkioDeviceWriteBps"
                  },
                  "BlkioDeviceReadIOps": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Path": { "type": "string" },
                        "Rate": { "type": "integer", "minimum": 0 }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "BlkioDeviceReadIOps"
                  },
                  "BlkioDeviceWriteIOps": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Path": { "type": "string" },
                        "Rate": { "type": "integer", "minimum": 0 }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "BlkioDeviceWriteIOps"
                  },
                  "CpuPeriod": { "type": "integer" },
                  "CpuQuota": { "type": "integer" },
                  "CpuRealtimePeriod": { "type": "integer" },
                  "CpuRealtimeRuntime": { "type": "integer" },
                  "CpusetCpus": { "type": "string" },
                  "CpusetMems": { "type": "string" },
                  "Devices": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "PathOnHost": { "type": "string" },
                        "PathInContainer": { "type": "string" },
                        "CgroupPermissions": { "type": "string" }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "Devices"
                  },
                  "DeviceCgroupRules": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "DeviceCgroupRules"
                  },
                  "DiskQuota": { "type": "integer" },
                  "KernelMemory": { "type": "integer" },
                  "MemoryReservation": { "type": "integer" },
                  "MemorySwap": { "type": "integer" },
                  "MemorySwappiness": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 100
                  },
                  "NanoCPUs": { "type": "integer" },
                  "OomKillDisable": { "type": "boolean" },
                  "PidsLimit": { "type": "integer" },
                  "Ulimits": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Name": { "type": "string" },
                        "Soft": { "type": "integer" },
                        "Hard": { "type": "integer" }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "Ulimits"
                  },
                  "CpuCount": { "type": "integer" },
                  "CpuPercent": { "type": "integer" },
                  "IOMaximumIOps": { "type": "integer" },
                  "IOMaximumBandwidth": { "type": "integer" },
                  "Binds": {
                    "type": "array",
                    "items": { "type": "string", "pattern": ".+:.+(:.+)?" },
                    "collectionFormat": "multi",
                    "name": "Binds"
                  },
                  "ContainerIDFile": { "type": "string" },
                  "LogConfig": {
                    "type": "object",
                    "x-properties": {
                      "Type": {
                        "type": "string",
                        "enum": [
                          "json-file",
                          "syslog",
                          "journald",
                          "gelf",
                          "fluentd",
                          "awslogs",
                          "splunk",
                          "etwlogs",
                          "none"
                        ]
                      },
                      "Config": {
                        "type": "object",
                        "x-properties": { "string": { "type": "string" } }
                      }
                    }
                  },
                  "NetworkMode": {
                    "type": "string",
                    "enum": ["bridge", "host", "none"],
                    "x-alternatives": [
                      { "type": "string", "enum": ["bridge", "host", "none"] },
                      { "type": "string", "pattern": "^container:.*$" }
                    ]
                  },
                  "PortBindings": {
                    "type": "object",
                    "x-properties": {
                      "string": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "x-properties": {
                            "HostIp": { "type": "string" },
                            "HostPort": { "type": "string" }
                          }
                        },
                        "collectionFormat": "multi",
                        "name": "string"
                      }
                    }
                  },
                  "RestartPolicy": {
                    "type": "object",
                    "x-properties": {
                      "Name": {
                        "type": "string",
                        "enum": ["always", "unless-stopped", "on-failure"]
                      },
                      "MaximumRetryCount": { "type": "integer" }
                    }
                  },
                  "AutoRemove": { "type": "boolean" },
                  "VolumeDriver": { "type": "string" },
                  "VolumesFrom": {
                    "type": "array",
                    "items": { "type": "string", "pattern": "^.+(:(ro|rw))?$" },
                    "collectionFormat": "multi",
                    "name": "VolumesFrom"
                  },
                  "Mounts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Target": { "type": "string" },
                        "Source": { "type": "string" },
                        "Type": {
                          "type": "string",
                          "enum": ["bind", "volume", "tmpfs"]
                        },
                        "ReadOnly": { "type": "boolean" },
                        "Consistency": { "type": "string" },
                        "BindOptions": {
                          "type": "object",
                          "x-properties": {
                            "Propagation": {
                              "type": "string",
                              "enum": [
                                "private",
                                "rprivate",
                                "shared",
                                "rshared",
                                "slave",
                                "rslave"
                              ]
                            }
                          }
                        },
                        "VolumeOptions": {
                          "type": "object",
                          "x-properties": {
                            "NoCopy": { "type": "boolean" },
                            "Labels": {
                              "type": "object",
                              "x-properties": { "string": { "type": "string" } }
                            },
                            "DriverConfig": {
                              "type": "object",
                              "x-properties": {
                                "Name": { "type": "string" },
                                "Options": {
                                  "type": "object",
                                  "x-properties": {
                                    "string": { "type": "string" }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "TmpfsOptions": {
                          "type": "object",
                          "x-properties": {
                            "SizeBytes": { "type": "integer" },
                            "Mode": { "type": "integer" }
                          }
                        }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "Mounts"
                  },
                  "CapAdd": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "CapAdd"
                  },
                  "CapDrop": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "CapDrop"
                  },
                  "Dns": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "Dns"
                  },
                  "DnsOptions": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "DnsOptions"
                  },
                  "DnsSearch": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "DnsSearch"
                  },
                  "ExtraHosts": {
                    "type": "array",
                    "items": { "type": "string", "pattern": "^.+:.+$" },
                    "collectionFormat": "multi",
                    "name": "ExtraHosts"
                  },
                  "GroupAdd": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "GroupAdd"
                  },
                  "IpcMode": { "type": "string" },
                  "Cgroup": { "type": "string" },
                  "Links": {
                    "type": "array",
                    "items": { "type": "string", "pattern": "^.+:.+$" },
                    "collectionFormat": "multi",
                    "name": "Links"
                  },
                  "OomScoreAdj": { "type": "integer" },
                  "PidMode": { "type": "string", "pattern": "^.+(:.+)?$" },
                  "Privileged": { "type": "boolean" },
                  "PublishAllPorts": { "type": "boolean" },
                  "ReadonlyRootfs": { "type": "boolean" },
                  "SecurityOpt": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "SecurityOpt"
                  },
                  "StorageOpt": {
                    "type": "object",
                    "x-properties": { "string": { "type": "string" } }
                  },
                  "Tmpfs": {
                    "type": "object",
                    "x-properties": { "string": { "type": "string" } }
                  },
                  "UTSMode": { "type": "string" },
                  "UsernsMode": { "type": "string" },
                  "ShmSize": { "type": "integer", "minimum": 0 },
                  "Sysctls": {
                    "type": "object",
                    "x-properties": { "string": { "type": "string" } }
                  },
                  "Runtime": { "type": "string" },
                  "ConsoleSize": {
                    "type": "array",
                    "x-constraint": { "length": 2 },
                    "items": { "type": "integer", "minimum": 0 },
                    "collectionFormat": "multi",
                    "name": "ConsoleSize"
                  },
                  "Isolation": {
                    "type": "string",
                    "enum": ["default", "process", "hyperv"]
                  }
                }
              },
              "NetworkingConfig": {
                "type": "object",
                "x-properties": {
                  "EndpointsConfig": {
                    "type": "object",
                    "x-properties": {
                      "string": {
                        "type": "object",
                        "x-properties": {
                          "IPAMConfig": {
                            "type": "object",
                            "x-properties": {
                              "IPv4Address": {
                                "type": "string",
                                "x-format": {
                                  "ip": {
                                    "cidr": "optional",
                                    "version": ["ipv4"]
                                  }
                                }
                              },
                              "IPv6Address": {
                                "type": "string",
                                "x-format": {
                                  "ip": {
                                    "cidr": "optional",
                                    "version": ["ipv6"]
                                  }
                                }
                              },
                              "LinkLocalIPs": {
                                "type": "array",
                                "items": { "type": "string" },
                                "collectionFormat": "multi",
                                "name": "LinkLocalIPs"
                              }
                            }
                          },
                          "Links": {
                            "type": "array",
                            "items": { "type": "string" },
                            "collectionFormat": "multi",
                            "name": "Links"
                          },
                          "Aliases": {
                            "type": "array",
                            "items": { "type": "string" },
                            "collectionFormat": "multi",
                            "name": "Aliases"
                          },
                          "NetworkId": { "type": "string" },
                          "EndpointId": { "type": "string" },
                          "Gateway": { "type": "string" },
                          "IPAddress": {
                            "type": "string",
                            "x-format": {
                              "ip": { "cidr": "optional", "version": ["ipv4"] }
                            }
                          },
                          "IPPrefixLen": { "type": "integer" },
                          "IPv6Gateway": { "type": "string" },
                          "GlobalIPv6Address": {
                            "type": "string",
                            "x-format": {
                              "ip": { "cidr": "optional", "version": ["ipv6"] }
                            }
                          },
                          "GlobalIPv6PrefixLen": { "type": "integer" },
                          "MacAddress": { "type": "string" }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "string",
            "description": "JSON / See Azure documentation",
            "x-meta": { "swaggerType": "object" },
            "name": "containerTwinDesiredOptions",
            "in": "formData",
            "x-type": "object"
          },
          {
            "type": "array",
            "description": "An array of object containing environment variables",
            "x-meta": { "swaggerType": "array" },
            "x-constraint": { "unique": "key" },
            "items": {
              "type": "string",
              "x-type": "object",
              "x-properties": {
                "key": { "type": "string" },
                "value": { "type": "string" }
              }
            },
            "collectionFormat": "multi",
            "name": "environmentVariables",
            "in": "formData"
          },
          { "type": "number", "name": "startupOrder", "in": "formData" },
          {
            "type": "boolean",
            "default": false,
            "name": "useProxySettings",
            "in": "formData"
          }
        ],
        "consumes": ["multipart/form-data"],
        "tags": ["deviceContainers"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Random uuid v4.",
                  "default": "7adb258e-3ee7-4299-bcb9-513fab03f7d4",
                  "x-format": { "guid": { "version": "uuidv4" } }
                },
                "referenceId": {
                  "type": "string",
                  "description": "Random uuid v4.",
                  "default": "7adb258e-3ee7-4299-bcb9-513fab03f7d4",
                  "x-format": { "guid": { "version": "uuidv4" } }
                },
                "organisation": { "type": "string" },
                "displayName": { "type": "string" },
                "containerName": { "type": "string" },
                "image": { "type": "string" },
                "icon": { "type": "string" },
                "type": { "type": "string" },
                "version": { "type": "string" },
                "restartPolicy": {
                  "type": "string",
                  "enum": ["always", "never", "on-failed", "on-unhealthy"]
                },
                "desiredStatus": {
                  "type": "string",
                  "enum": ["stopped", "running"]
                },
                "status": { "type": "string" },
                "imageUri": { "type": "string" },
                "registryType": {
                  "type": "string",
                  "enum": ["public", "private"]
                },
                "credentials": {
                  "type": "object",
                  "properties": {
                    "address": { "type": "string" },
                    "username": { "type": "string" }
                  }
                },
                "processorArchitecture": {
                  "type": "string",
                  "description": "Processor architecture",
                  "enum": [
                    "Linux-X86",
                    "Linux-X64",
                    "Linux-ARM32V7",
                    "Linux-ARM64V8",
                    "All"
                  ]
                },
                "settingsPageId": {
                  "type": "string",
                  "enum": [
                    "gatewayTelemetry",
                    "networkTopology",
                    "opcuaPublisher",
                    "ainConnector",
                    "netFieldProxy",
                    "netFieldAppPlatformConnector"
                  ]
                },
                "shortDescription": { "type": "string", "maxLength": 60 },
                "description": { "type": "string", "maxLength": 3000 },
                "releaseNotes": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "category": {
                  "type": "string",
                  "enum": [
                    "Receiver",
                    "Connectivity",
                    "Data Acquisition",
                    "IT/Cloud Connectors",
                    "Services",
                    "Applications"
                  ]
                },
                "containerCreateOptions": {
                  "type": "object",
                  "description": "See latest Docker documentation",
                  "x-meta": { "swaggerType": "object" },
                  "properties": {
                    "Hostname": { "type": "string" },
                    "Domainname": { "type": "string" },
                    "User": { "type": "string" },
                    "AttachStdin": { "type": "boolean" },
                    "AttachStdout": { "type": "boolean" },
                    "AttachStderr": { "type": "boolean" },
                    "ExposedPorts": {
                      "type": "object",
                      "properties": { "string": { "type": "object" } }
                    },
                    "Tty": { "type": "boolean" },
                    "OpenStdin": { "type": "boolean" },
                    "StdinOnce": { "type": "boolean" },
                    "Env": {
                      "type": "string",
                      "x-alternatives": [
                        { "type": "string" },
                        { "type": "array", "items": { "type": "string" } }
                      ]
                    },
                    "Cmd": {
                      "type": "string",
                      "x-alternatives": [
                        { "type": "string" },
                        { "type": "array", "items": { "type": "string" } }
                      ]
                    },
                    "Healthcheck": {
                      "type": "object",
                      "properties": {
                        "Test": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "Interval": {
                          "type": "string",
                          "enum": [0],
                          "x-alternatives": [
                            { "type": "string", "enum": [0] },
                            { "type": "integer", "minimum": 1000000 }
                          ]
                        },
                        "Timeout": {
                          "type": "string",
                          "enum": [0],
                          "x-alternatives": [
                            { "type": "string", "enum": [0] },
                            { "type": "integer", "minimum": 1000000 }
                          ]
                        },
                        "Retries": { "type": "integer", "minimum": 0 },
                        "StartPeriod": {
                          "type": "string",
                          "enum": [0],
                          "x-alternatives": [
                            { "type": "string", "enum": [0] },
                            { "type": "integer", "minimum": 1000000 }
                          ]
                        }
                      }
                    },
                    "ArgsEscaped": { "type": "boolean" },
                    "Image": { "type": "string" },
                    "Volumes": {
                      "type": "object",
                      "properties": { "string": { "type": "object" } }
                    },
                    "WorkingDir": { "type": "string" },
                    "Entrypoint": {
                      "x-alternatives": [
                        { "type": "array", "items": { "type": "string" } },
                        { "type": "string" }
                      ],
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "NetworkDisabled": { "type": "boolean" },
                    "MacAddress": {
                      "type": "string",
                      "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$"
                    },
                    "OnBuild": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "Labels": {
                      "type": "object",
                      "properties": { "string": { "type": "string" } }
                    },
                    "StopSignal": { "type": "string" },
                    "StopTimeout": { "type": "integer", "minimum": 0 },
                    "Shell": { "type": "array", "items": { "type": "string" } },
                    "HostConfig": {
                      "type": "object",
                      "properties": {
                        "MaximumIOps": { "type": "integer" },
                        "MaximumIOBps": { "type": "integer" },
                        "CpuShares": { "type": "integer" },
                        "Memory": { "type": "integer" },
                        "CgroupParent": { "type": "string" },
                        "BlkioWeight": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 1000
                        },
                        "BlkioWeightDevice": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Weight": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceReadBps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceWriteBps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceReadIOps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceWriteIOps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "CpuPeriod": { "type": "integer" },
                        "CpuQuota": { "type": "integer" },
                        "CpuRealtimePeriod": { "type": "integer" },
                        "CpuRealtimeRuntime": { "type": "integer" },
                        "CpusetCpus": { "type": "string" },
                        "CpusetMems": { "type": "string" },
                        "Devices": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "PathOnHost": { "type": "string" },
                              "PathInContainer": { "type": "string" },
                              "CgroupPermissions": { "type": "string" }
                            }
                          }
                        },
                        "DeviceCgroupRules": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "DiskQuota": { "type": "integer" },
                        "KernelMemory": { "type": "integer" },
                        "MemoryReservation": { "type": "integer" },
                        "MemorySwap": { "type": "integer" },
                        "MemorySwappiness": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 100
                        },
                        "NanoCPUs": { "type": "integer" },
                        "OomKillDisable": { "type": "boolean" },
                        "PidsLimit": { "type": "integer" },
                        "Ulimits": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Name": { "type": "string" },
                              "Soft": { "type": "integer" },
                              "Hard": { "type": "integer" }
                            }
                          }
                        },
                        "CpuCount": { "type": "integer" },
                        "CpuPercent": { "type": "integer" },
                        "IOMaximumIOps": { "type": "integer" },
                        "IOMaximumBandwidth": { "type": "integer" },
                        "Binds": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "pattern": ".+:.+(:.+)?"
                          }
                        },
                        "ContainerIDFile": { "type": "string" },
                        "LogConfig": {
                          "type": "object",
                          "properties": {
                            "Type": {
                              "type": "string",
                              "enum": [
                                "json-file",
                                "syslog",
                                "journald",
                                "gelf",
                                "fluentd",
                                "awslogs",
                                "splunk",
                                "etwlogs",
                                "none"
                              ]
                            },
                            "Config": {
                              "type": "object",
                              "properties": { "string": { "type": "string" } }
                            }
                          }
                        },
                        "NetworkMode": {
                          "type": "string",
                          "enum": ["bridge", "host", "none"],
                          "x-alternatives": [
                            {
                              "type": "string",
                              "enum": ["bridge", "host", "none"]
                            },
                            { "type": "string", "pattern": "^container:.*$" }
                          ]
                        },
                        "PortBindings": {
                          "type": "object",
                          "properties": {
                            "string": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "HostIp": { "type": "string" },
                                  "HostPort": { "type": "string" }
                                }
                              }
                            }
                          }
                        },
                        "RestartPolicy": {
                          "type": "object",
                          "properties": {
                            "Name": {
                              "type": "string",
                              "enum": ["always", "unless-stopped", "on-failure"]
                            },
                            "MaximumRetryCount": { "type": "integer" }
                          }
                        },
                        "AutoRemove": { "type": "boolean" },
                        "VolumeDriver": { "type": "string" },
                        "VolumesFrom": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "pattern": "^.+(:(ro|rw))?$"
                          }
                        },
                        "Mounts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Target": { "type": "string" },
                              "Source": { "type": "string" },
                              "Type": {
                                "type": "string",
                                "enum": ["bind", "volume", "tmpfs"]
                              },
                              "ReadOnly": { "type": "boolean" },
                              "Consistency": { "type": "string" },
                              "BindOptions": {
                                "type": "object",
                                "properties": {
                                  "Propagation": {
                                    "type": "string",
                                    "enum": [
                                      "private",
                                      "rprivate",
                                      "shared",
                                      "rshared",
                                      "slave",
                                      "rslave"
                                    ]
                                  }
                                }
                              },
                              "VolumeOptions": {
                                "type": "object",
                                "properties": {
                                  "NoCopy": { "type": "boolean" },
                                  "Labels": {
                                    "type": "object",
                                    "properties": {
                                      "string": { "type": "string" }
                                    }
                                  },
                                  "DriverConfig": {
                                    "type": "object",
                                    "properties": {
                                      "Name": { "type": "string" },
                                      "Options": {
                                        "type": "object",
                                        "properties": {
                                          "string": { "type": "string" }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "TmpfsOptions": {
                                "type": "object",
                                "properties": {
                                  "SizeBytes": { "type": "integer" },
                                  "Mode": { "type": "integer" }
                                }
                              }
                            }
                          }
                        },
                        "CapAdd": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "CapDrop": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "Dns": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "DnsOptions": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "DnsSearch": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "ExtraHosts": {
                          "type": "array",
                          "items": { "type": "string", "pattern": "^.+:.+$" }
                        },
                        "GroupAdd": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "IpcMode": { "type": "string" },
                        "Cgroup": { "type": "string" },
                        "Links": {
                          "type": "array",
                          "items": { "type": "string", "pattern": "^.+:.+$" }
                        },
                        "OomScoreAdj": { "type": "integer" },
                        "PidMode": {
                          "type": "string",
                          "pattern": "^.+(:.+)?$"
                        },
                        "Privileged": { "type": "boolean" },
                        "PublishAllPorts": { "type": "boolean" },
                        "ReadonlyRootfs": { "type": "boolean" },
                        "SecurityOpt": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "StorageOpt": {
                          "type": "object",
                          "properties": { "string": { "type": "string" } }
                        },
                        "Tmpfs": {
                          "type": "object",
                          "properties": { "string": { "type": "string" } }
                        },
                        "UTSMode": { "type": "string" },
                        "UsernsMode": { "type": "string" },
                        "ShmSize": { "type": "integer", "minimum": 0 },
                        "Sysctls": {
                          "type": "object",
                          "properties": { "string": { "type": "string" } }
                        },
                        "Runtime": { "type": "string" },
                        "ConsoleSize": {
                          "type": "array",
                          "x-constraint": { "length": 2 },
                          "items": { "type": "integer", "minimum": 0 }
                        },
                        "Isolation": {
                          "type": "string",
                          "enum": ["default", "process", "hyperv"]
                        }
                      }
                    },
                    "NetworkingConfig": {
                      "type": "object",
                      "properties": {
                        "EndpointsConfig": {
                          "type": "object",
                          "properties": {
                            "string": {
                              "type": "object",
                              "properties": {
                                "IPAMConfig": {
                                  "type": "object",
                                  "properties": {
                                    "IPv4Address": {
                                      "type": "string",
                                      "x-format": {
                                        "ip": {
                                          "cidr": "optional",
                                          "version": ["ipv4"]
                                        }
                                      }
                                    },
                                    "IPv6Address": {
                                      "type": "string",
                                      "x-format": {
                                        "ip": {
                                          "cidr": "optional",
                                          "version": ["ipv6"]
                                        }
                                      }
                                    },
                                    "LinkLocalIPs": {
                                      "type": "array",
                                      "items": { "type": "string" }
                                    }
                                  }
                                },
                                "Links": {
                                  "type": "array",
                                  "items": { "type": "string" }
                                },
                                "Aliases": {
                                  "type": "array",
                                  "items": { "type": "string" }
                                },
                                "NetworkId": { "type": "string" },
                                "EndpointId": { "type": "string" },
                                "Gateway": { "type": "string" },
                                "IPAddress": {
                                  "type": "string",
                                  "x-format": {
                                    "ip": {
                                      "cidr": "optional",
                                      "version": ["ipv4"]
                                    }
                                  }
                                },
                                "IPPrefixLen": { "type": "integer" },
                                "IPv6Gateway": { "type": "string" },
                                "GlobalIPv6Address": {
                                  "type": "string",
                                  "x-format": {
                                    "ip": {
                                      "cidr": "optional",
                                      "version": ["ipv6"]
                                    }
                                  }
                                },
                                "GlobalIPv6PrefixLen": { "type": "integer" },
                                "MacAddress": { "type": "string" }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "containerTwinDesiredOptions": { "type": "object" },
                "containerTwinReportedProperties": { "type": "object" },
                "environmentVariables": {
                  "type": "array",
                  "description": "An array of object containing environment variables",
                  "x-meta": { "swaggerType": "array" },
                  "x-constraint": { "unique": "key" },
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": { "type": "string" },
                      "value": { "type": "string" }
                    },
                    "required": ["key", "value"]
                  }
                },
                "startupOrder": { "type": "number" },
                "deployedAt": { "type": "string", "format": "date" }
              }
            },
            "description": "Container installed"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device(s) not found / Container(s) not found"
          }
        }
      },
      "put": {
        "summary": "Update (redeploy) device container. Every container specified in the database has a set of properties.Some or all can be overridden via body attributes",
        "operationId": "putDevicesDeviceidContainersContainerid",
        "description": "devices<br/><br/>updateDevices",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / uuid_v4",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "name": "containerId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Container version, null or empty not allowed",
            "name": "version",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Restart policy",
            "enum": ["always", "never", "on-failed", "on-unhealthy"],
            "name": "restartPolicy",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Desired status",
            "enum": ["stopped", "running"],
            "name": "desiredStatus",
            "in": "formData"
          },
          { "type": "boolean", "name": "useProxySettings", "in": "formData" },
          {
            "type": "string",
            "description": "See latest Docker documentation",
            "x-meta": { "swaggerType": "object" },
            "name": "containerCreateOptions",
            "in": "formData",
            "x-type": "object",
            "x-properties": {
              "Hostname": { "type": "string" },
              "Domainname": { "type": "string" },
              "User": { "type": "string" },
              "AttachStdin": { "type": "boolean" },
              "AttachStdout": { "type": "boolean" },
              "AttachStderr": { "type": "boolean" },
              "ExposedPorts": {
                "type": "object",
                "x-properties": { "string": { "type": "object" } }
              },
              "Tty": { "type": "boolean" },
              "OpenStdin": { "type": "boolean" },
              "StdinOnce": { "type": "boolean" },
              "Env": {
                "type": "string",
                "x-alternatives": [
                  { "type": "string" },
                  {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "Env"
                  }
                ]
              },
              "Cmd": {
                "type": "string",
                "x-alternatives": [
                  { "type": "string" },
                  {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "Cmd"
                  }
                ]
              },
              "Healthcheck": {
                "type": "object",
                "x-properties": {
                  "Test": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "Test"
                  },
                  "Interval": {
                    "type": "string",
                    "enum": [0],
                    "x-alternatives": [
                      { "type": "string", "enum": [0] },
                      { "type": "integer", "minimum": 1000000 }
                    ]
                  },
                  "Timeout": {
                    "type": "string",
                    "enum": [0],
                    "x-alternatives": [
                      { "type": "string", "enum": [0] },
                      { "type": "integer", "minimum": 1000000 }
                    ]
                  },
                  "Retries": { "type": "integer", "minimum": 0 },
                  "StartPeriod": {
                    "type": "string",
                    "enum": [0],
                    "x-alternatives": [
                      { "type": "string", "enum": [0] },
                      { "type": "integer", "minimum": 1000000 }
                    ]
                  }
                }
              },
              "ArgsEscaped": { "type": "boolean" },
              "Image": { "type": "string" },
              "Volumes": {
                "type": "object",
                "x-properties": { "string": { "type": "object" } }
              },
              "WorkingDir": { "type": "string" },
              "Entrypoint": {
                "type": "array",
                "items": { "type": "string" },
                "collectionFormat": "multi",
                "x-alternatives": [
                  {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "Entrypoint"
                  },
                  { "type": "string" }
                ]
              },
              "NetworkDisabled": { "type": "boolean" },
              "MacAddress": {
                "type": "string",
                "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$"
              },
              "OnBuild": {
                "type": "array",
                "items": { "type": "string" },
                "collectionFormat": "multi",
                "name": "OnBuild"
              },
              "Labels": {
                "type": "object",
                "x-properties": { "string": { "type": "string" } }
              },
              "StopSignal": { "type": "string" },
              "StopTimeout": { "type": "integer", "minimum": 0 },
              "Shell": {
                "type": "array",
                "items": { "type": "string" },
                "collectionFormat": "multi",
                "name": "Shell"
              },
              "HostConfig": {
                "type": "object",
                "x-properties": {
                  "MaximumIOps": { "type": "integer" },
                  "MaximumIOBps": { "type": "integer" },
                  "CpuShares": { "type": "integer" },
                  "Memory": { "type": "integer" },
                  "CgroupParent": { "type": "string" },
                  "BlkioWeight": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 1000
                  },
                  "BlkioWeightDevice": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Path": { "type": "string" },
                        "Weight": { "type": "integer", "minimum": 0 }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "BlkioWeightDevice"
                  },
                  "BlkioDeviceReadBps": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Path": { "type": "string" },
                        "Rate": { "type": "integer", "minimum": 0 }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "BlkioDeviceReadBps"
                  },
                  "BlkioDeviceWriteBps": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Path": { "type": "string" },
                        "Rate": { "type": "integer", "minimum": 0 }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "BlkioDeviceWriteBps"
                  },
                  "BlkioDeviceReadIOps": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Path": { "type": "string" },
                        "Rate": { "type": "integer", "minimum": 0 }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "BlkioDeviceReadIOps"
                  },
                  "BlkioDeviceWriteIOps": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Path": { "type": "string" },
                        "Rate": { "type": "integer", "minimum": 0 }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "BlkioDeviceWriteIOps"
                  },
                  "CpuPeriod": { "type": "integer" },
                  "CpuQuota": { "type": "integer" },
                  "CpuRealtimePeriod": { "type": "integer" },
                  "CpuRealtimeRuntime": { "type": "integer" },
                  "CpusetCpus": { "type": "string" },
                  "CpusetMems": { "type": "string" },
                  "Devices": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "PathOnHost": { "type": "string" },
                        "PathInContainer": { "type": "string" },
                        "CgroupPermissions": { "type": "string" }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "Devices"
                  },
                  "DeviceCgroupRules": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "DeviceCgroupRules"
                  },
                  "DiskQuota": { "type": "integer" },
                  "KernelMemory": { "type": "integer" },
                  "MemoryReservation": { "type": "integer" },
                  "MemorySwap": { "type": "integer" },
                  "MemorySwappiness": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 100
                  },
                  "NanoCPUs": { "type": "integer" },
                  "OomKillDisable": { "type": "boolean" },
                  "PidsLimit": { "type": "integer" },
                  "Ulimits": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Name": { "type": "string" },
                        "Soft": { "type": "integer" },
                        "Hard": { "type": "integer" }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "Ulimits"
                  },
                  "CpuCount": { "type": "integer" },
                  "CpuPercent": { "type": "integer" },
                  "IOMaximumIOps": { "type": "integer" },
                  "IOMaximumBandwidth": { "type": "integer" },
                  "Binds": {
                    "type": "array",
                    "items": { "type": "string", "pattern": ".+:.+(:.+)?" },
                    "collectionFormat": "multi",
                    "name": "Binds"
                  },
                  "ContainerIDFile": { "type": "string" },
                  "LogConfig": {
                    "type": "object",
                    "x-properties": {
                      "Type": {
                        "type": "string",
                        "enum": [
                          "json-file",
                          "syslog",
                          "journald",
                          "gelf",
                          "fluentd",
                          "awslogs",
                          "splunk",
                          "etwlogs",
                          "none"
                        ]
                      },
                      "Config": {
                        "type": "object",
                        "x-properties": { "string": { "type": "string" } }
                      }
                    }
                  },
                  "NetworkMode": {
                    "type": "string",
                    "enum": ["bridge", "host", "none"],
                    "x-alternatives": [
                      { "type": "string", "enum": ["bridge", "host", "none"] },
                      { "type": "string", "pattern": "^container:.*$" }
                    ]
                  },
                  "PortBindings": {
                    "type": "object",
                    "x-properties": {
                      "string": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "x-properties": {
                            "HostIp": { "type": "string" },
                            "HostPort": { "type": "string" }
                          }
                        },
                        "collectionFormat": "multi",
                        "name": "string"
                      }
                    }
                  },
                  "RestartPolicy": {
                    "type": "object",
                    "x-properties": {
                      "Name": {
                        "type": "string",
                        "enum": ["always", "unless-stopped", "on-failure"]
                      },
                      "MaximumRetryCount": { "type": "integer" }
                    }
                  },
                  "AutoRemove": { "type": "boolean" },
                  "VolumeDriver": { "type": "string" },
                  "VolumesFrom": {
                    "type": "array",
                    "items": { "type": "string", "pattern": "^.+(:(ro|rw))?$" },
                    "collectionFormat": "multi",
                    "name": "VolumesFrom"
                  },
                  "Mounts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Target": { "type": "string" },
                        "Source": { "type": "string" },
                        "Type": {
                          "type": "string",
                          "enum": ["bind", "volume", "tmpfs"]
                        },
                        "ReadOnly": { "type": "boolean" },
                        "Consistency": { "type": "string" },
                        "BindOptions": {
                          "type": "object",
                          "x-properties": {
                            "Propagation": {
                              "type": "string",
                              "enum": [
                                "private",
                                "rprivate",
                                "shared",
                                "rshared",
                                "slave",
                                "rslave"
                              ]
                            }
                          }
                        },
                        "VolumeOptions": {
                          "type": "object",
                          "x-properties": {
                            "NoCopy": { "type": "boolean" },
                            "Labels": {
                              "type": "object",
                              "x-properties": { "string": { "type": "string" } }
                            },
                            "DriverConfig": {
                              "type": "object",
                              "x-properties": {
                                "Name": { "type": "string" },
                                "Options": {
                                  "type": "object",
                                  "x-properties": {
                                    "string": { "type": "string" }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "TmpfsOptions": {
                          "type": "object",
                          "x-properties": {
                            "SizeBytes": { "type": "integer" },
                            "Mode": { "type": "integer" }
                          }
                        }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "Mounts"
                  },
                  "CapAdd": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "CapAdd"
                  },
                  "CapDrop": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "CapDrop"
                  },
                  "Dns": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "Dns"
                  },
                  "DnsOptions": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "DnsOptions"
                  },
                  "DnsSearch": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "DnsSearch"
                  },
                  "ExtraHosts": {
                    "type": "array",
                    "items": { "type": "string", "pattern": "^.+:.+$" },
                    "collectionFormat": "multi",
                    "name": "ExtraHosts"
                  },
                  "GroupAdd": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "GroupAdd"
                  },
                  "IpcMode": { "type": "string" },
                  "Cgroup": { "type": "string" },
                  "Links": {
                    "type": "array",
                    "items": { "type": "string", "pattern": "^.+:.+$" },
                    "collectionFormat": "multi",
                    "name": "Links"
                  },
                  "OomScoreAdj": { "type": "integer" },
                  "PidMode": { "type": "string", "pattern": "^.+(:.+)?$" },
                  "Privileged": { "type": "boolean" },
                  "PublishAllPorts": { "type": "boolean" },
                  "ReadonlyRootfs": { "type": "boolean" },
                  "SecurityOpt": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "SecurityOpt"
                  },
                  "StorageOpt": {
                    "type": "object",
                    "x-properties": { "string": { "type": "string" } }
                  },
                  "Tmpfs": {
                    "type": "object",
                    "x-properties": { "string": { "type": "string" } }
                  },
                  "UTSMode": { "type": "string" },
                  "UsernsMode": { "type": "string" },
                  "ShmSize": { "type": "integer", "minimum": 0 },
                  "Sysctls": {
                    "type": "object",
                    "x-properties": { "string": { "type": "string" } }
                  },
                  "Runtime": { "type": "string" },
                  "ConsoleSize": {
                    "type": "array",
                    "x-constraint": { "length": 2 },
                    "items": { "type": "integer", "minimum": 0 },
                    "collectionFormat": "multi",
                    "name": "ConsoleSize"
                  },
                  "Isolation": {
                    "type": "string",
                    "enum": ["default", "process", "hyperv"]
                  }
                }
              },
              "NetworkingConfig": {
                "type": "object",
                "x-properties": {
                  "EndpointsConfig": {
                    "type": "object",
                    "x-properties": {
                      "string": {
                        "type": "object",
                        "x-properties": {
                          "IPAMConfig": {
                            "type": "object",
                            "x-properties": {
                              "IPv4Address": {
                                "type": "string",
                                "x-format": {
                                  "ip": {
                                    "cidr": "optional",
                                    "version": ["ipv4"]
                                  }
                                }
                              },
                              "IPv6Address": {
                                "type": "string",
                                "x-format": {
                                  "ip": {
                                    "cidr": "optional",
                                    "version": ["ipv6"]
                                  }
                                }
                              },
                              "LinkLocalIPs": {
                                "type": "array",
                                "items": { "type": "string" },
                                "collectionFormat": "multi",
                                "name": "LinkLocalIPs"
                              }
                            }
                          },
                          "Links": {
                            "type": "array",
                            "items": { "type": "string" },
                            "collectionFormat": "multi",
                            "name": "Links"
                          },
                          "Aliases": {
                            "type": "array",
                            "items": { "type": "string" },
                            "collectionFormat": "multi",
                            "name": "Aliases"
                          },
                          "NetworkId": { "type": "string" },
                          "EndpointId": { "type": "string" },
                          "Gateway": { "type": "string" },
                          "IPAddress": {
                            "type": "string",
                            "x-format": {
                              "ip": { "cidr": "optional", "version": ["ipv4"] }
                            }
                          },
                          "IPPrefixLen": { "type": "integer" },
                          "IPv6Gateway": { "type": "string" },
                          "GlobalIPv6Address": {
                            "type": "string",
                            "x-format": {
                              "ip": { "cidr": "optional", "version": ["ipv6"] }
                            }
                          },
                          "GlobalIPv6PrefixLen": { "type": "integer" },
                          "MacAddress": { "type": "string" }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "string",
            "description": "JSON / See Azure documentation",
            "x-meta": { "swaggerType": "object" },
            "name": "containerTwinDesiredOptions",
            "in": "formData",
            "x-type": "object"
          },
          {
            "type": "array",
            "description": "An array of object containing environment variables",
            "x-meta": { "swaggerType": "array" },
            "x-constraint": { "unique": "key" },
            "items": {
              "type": "string",
              "x-type": "object",
              "x-properties": {
                "key": { "type": "string" },
                "value": { "type": "string" }
              }
            },
            "collectionFormat": "multi",
            "name": "environmentVariables",
            "in": "formData"
          },
          { "type": "number", "name": "startupOrder", "in": "formData" }
        ],
        "consumes": ["multipart/form-data"],
        "tags": ["deviceContainers"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Random uuid v4.",
                  "default": "7adb258e-3ee7-4299-bcb9-513fab03f7d4",
                  "x-format": { "guid": { "version": "uuidv4" } }
                },
                "referenceId": {
                  "type": "string",
                  "description": "Random uuid v4.",
                  "default": "7adb258e-3ee7-4299-bcb9-513fab03f7d4",
                  "x-format": { "guid": { "version": "uuidv4" } }
                },
                "organisation": { "type": "string" },
                "displayName": { "type": "string" },
                "containerName": { "type": "string" },
                "image": { "type": "string" },
                "icon": { "type": "string" },
                "type": { "type": "string" },
                "version": { "type": "string" },
                "restartPolicy": {
                  "type": "string",
                  "enum": ["always", "never", "on-failed", "on-unhealthy"]
                },
                "desiredStatus": {
                  "type": "string",
                  "enum": ["stopped", "running"]
                },
                "status": { "type": "string" },
                "imageUri": { "type": "string" },
                "registryType": {
                  "type": "string",
                  "enum": ["public", "private"]
                },
                "credentials": {
                  "type": "object",
                  "properties": {
                    "address": { "type": "string" },
                    "username": { "type": "string" }
                  }
                },
                "processorArchitecture": {
                  "type": "string",
                  "description": "Processor architecture",
                  "enum": [
                    "Linux-X86",
                    "Linux-X64",
                    "Linux-ARM32V7",
                    "Linux-ARM64V8",
                    "All"
                  ]
                },
                "settingsPageId": {
                  "type": "string",
                  "enum": [
                    "gatewayTelemetry",
                    "networkTopology",
                    "opcuaPublisher",
                    "ainConnector",
                    "netFieldProxy",
                    "netFieldAppPlatformConnector"
                  ]
                },
                "shortDescription": { "type": "string", "maxLength": 60 },
                "description": { "type": "string", "maxLength": 3000 },
                "releaseNotes": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "category": {
                  "type": "string",
                  "enum": [
                    "Receiver",
                    "Connectivity",
                    "Data Acquisition",
                    "IT/Cloud Connectors",
                    "Services",
                    "Applications"
                  ]
                },
                "containerCreateOptions": {
                  "type": "object",
                  "description": "See latest Docker documentation",
                  "x-meta": { "swaggerType": "object" },
                  "properties": {
                    "Hostname": { "type": "string" },
                    "Domainname": { "type": "string" },
                    "User": { "type": "string" },
                    "AttachStdin": { "type": "boolean" },
                    "AttachStdout": { "type": "boolean" },
                    "AttachStderr": { "type": "boolean" },
                    "ExposedPorts": {
                      "type": "object",
                      "properties": { "string": { "type": "object" } }
                    },
                    "Tty": { "type": "boolean" },
                    "OpenStdin": { "type": "boolean" },
                    "StdinOnce": { "type": "boolean" },
                    "Env": {
                      "type": "string",
                      "x-alternatives": [
                        { "type": "string" },
                        { "type": "array", "items": { "type": "string" } }
                      ]
                    },
                    "Cmd": {
                      "type": "string",
                      "x-alternatives": [
                        { "type": "string" },
                        { "type": "array", "items": { "type": "string" } }
                      ]
                    },
                    "Healthcheck": {
                      "type": "object",
                      "properties": {
                        "Test": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "Interval": {
                          "type": "string",
                          "enum": [0],
                          "x-alternatives": [
                            { "type": "string", "enum": [0] },
                            { "type": "integer", "minimum": 1000000 }
                          ]
                        },
                        "Timeout": {
                          "type": "string",
                          "enum": [0],
                          "x-alternatives": [
                            { "type": "string", "enum": [0] },
                            { "type": "integer", "minimum": 1000000 }
                          ]
                        },
                        "Retries": { "type": "integer", "minimum": 0 },
                        "StartPeriod": {
                          "type": "string",
                          "enum": [0],
                          "x-alternatives": [
                            { "type": "string", "enum": [0] },
                            { "type": "integer", "minimum": 1000000 }
                          ]
                        }
                      }
                    },
                    "ArgsEscaped": { "type": "boolean" },
                    "Image": { "type": "string" },
                    "Volumes": {
                      "type": "object",
                      "properties": { "string": { "type": "object" } }
                    },
                    "WorkingDir": { "type": "string" },
                    "Entrypoint": {
                      "x-alternatives": [
                        { "type": "array", "items": { "type": "string" } },
                        { "type": "string" }
                      ],
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "NetworkDisabled": { "type": "boolean" },
                    "MacAddress": {
                      "type": "string",
                      "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$"
                    },
                    "OnBuild": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "Labels": {
                      "type": "object",
                      "properties": { "string": { "type": "string" } }
                    },
                    "StopSignal": { "type": "string" },
                    "StopTimeout": { "type": "integer", "minimum": 0 },
                    "Shell": { "type": "array", "items": { "type": "string" } },
                    "HostConfig": {
                      "type": "object",
                      "properties": {
                        "MaximumIOps": { "type": "integer" },
                        "MaximumIOBps": { "type": "integer" },
                        "CpuShares": { "type": "integer" },
                        "Memory": { "type": "integer" },
                        "CgroupParent": { "type": "string" },
                        "BlkioWeight": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 1000
                        },
                        "BlkioWeightDevice": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Weight": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceReadBps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceWriteBps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceReadIOps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceWriteIOps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "CpuPeriod": { "type": "integer" },
                        "CpuQuota": { "type": "integer" },
                        "CpuRealtimePeriod": { "type": "integer" },
                        "CpuRealtimeRuntime": { "type": "integer" },
                        "CpusetCpus": { "type": "string" },
                        "CpusetMems": { "type": "string" },
                        "Devices": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "PathOnHost": { "type": "string" },
                              "PathInContainer": { "type": "string" },
                              "CgroupPermissions": { "type": "string" }
                            }
                          }
                        },
                        "DeviceCgroupRules": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "DiskQuota": { "type": "integer" },
                        "KernelMemory": { "type": "integer" },
                        "MemoryReservation": { "type": "integer" },
                        "MemorySwap": { "type": "integer" },
                        "MemorySwappiness": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 100
                        },
                        "NanoCPUs": { "type": "integer" },
                        "OomKillDisable": { "type": "boolean" },
                        "PidsLimit": { "type": "integer" },
                        "Ulimits": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Name": { "type": "string" },
                              "Soft": { "type": "integer" },
                              "Hard": { "type": "integer" }
                            }
                          }
                        },
                        "CpuCount": { "type": "integer" },
                        "CpuPercent": { "type": "integer" },
                        "IOMaximumIOps": { "type": "integer" },
                        "IOMaximumBandwidth": { "type": "integer" },
                        "Binds": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "pattern": ".+:.+(:.+)?"
                          }
                        },
                        "ContainerIDFile": { "type": "string" },
                        "LogConfig": {
                          "type": "object",
                          "properties": {
                            "Type": {
                              "type": "string",
                              "enum": [
                                "json-file",
                                "syslog",
                                "journald",
                                "gelf",
                                "fluentd",
                                "awslogs",
                                "splunk",
                                "etwlogs",
                                "none"
                              ]
                            },
                            "Config": {
                              "type": "object",
                              "properties": { "string": { "type": "string" } }
                            }
                          }
                        },
                        "NetworkMode": {
                          "type": "string",
                          "enum": ["bridge", "host", "none"],
                          "x-alternatives": [
                            {
                              "type": "string",
                              "enum": ["bridge", "host", "none"]
                            },
                            { "type": "string", "pattern": "^container:.*$" }
                          ]
                        },
                        "PortBindings": {
                          "type": "object",
                          "properties": {
                            "string": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "HostIp": { "type": "string" },
                                  "HostPort": { "type": "string" }
                                }
                              }
                            }
                          }
                        },
                        "RestartPolicy": {
                          "type": "object",
                          "properties": {
                            "Name": {
                              "type": "string",
                              "enum": ["always", "unless-stopped", "on-failure"]
                            },
                            "MaximumRetryCount": { "type": "integer" }
                          }
                        },
                        "AutoRemove": { "type": "boolean" },
                        "VolumeDriver": { "type": "string" },
                        "VolumesFrom": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "pattern": "^.+(:(ro|rw))?$"
                          }
                        },
                        "Mounts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Target": { "type": "string" },
                              "Source": { "type": "string" },
                              "Type": {
                                "type": "string",
                                "enum": ["bind", "volume", "tmpfs"]
                              },
                              "ReadOnly": { "type": "boolean" },
                              "Consistency": { "type": "string" },
                              "BindOptions": {
                                "type": "object",
                                "properties": {
                                  "Propagation": {
                                    "type": "string",
                                    "enum": [
                                      "private",
                                      "rprivate",
                                      "shared",
                                      "rshared",
                                      "slave",
                                      "rslave"
                                    ]
                                  }
                                }
                              },
                              "VolumeOptions": {
                                "type": "object",
                                "properties": {
                                  "NoCopy": { "type": "boolean" },
                                  "Labels": {
                                    "type": "object",
                                    "properties": {
                                      "string": { "type": "string" }
                                    }
                                  },
                                  "DriverConfig": {
                                    "type": "object",
                                    "properties": {
                                      "Name": { "type": "string" },
                                      "Options": {
                                        "type": "object",
                                        "properties": {
                                          "string": { "type": "string" }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "TmpfsOptions": {
                                "type": "object",
                                "properties": {
                                  "SizeBytes": { "type": "integer" },
                                  "Mode": { "type": "integer" }
                                }
                              }
                            }
                          }
                        },
                        "CapAdd": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "CapDrop": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "Dns": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "DnsOptions": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "DnsSearch": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "ExtraHosts": {
                          "type": "array",
                          "items": { "type": "string", "pattern": "^.+:.+$" }
                        },
                        "GroupAdd": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "IpcMode": { "type": "string" },
                        "Cgroup": { "type": "string" },
                        "Links": {
                          "type": "array",
                          "items": { "type": "string", "pattern": "^.+:.+$" }
                        },
                        "OomScoreAdj": { "type": "integer" },
                        "PidMode": {
                          "type": "string",
                          "pattern": "^.+(:.+)?$"
                        },
                        "Privileged": { "type": "boolean" },
                        "PublishAllPorts": { "type": "boolean" },
                        "ReadonlyRootfs": { "type": "boolean" },
                        "SecurityOpt": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "StorageOpt": {
                          "type": "object",
                          "properties": { "string": { "type": "string" } }
                        },
                        "Tmpfs": {
                          "type": "object",
                          "properties": { "string": { "type": "string" } }
                        },
                        "UTSMode": { "type": "string" },
                        "UsernsMode": { "type": "string" },
                        "ShmSize": { "type": "integer", "minimum": 0 },
                        "Sysctls": {
                          "type": "object",
                          "properties": { "string": { "type": "string" } }
                        },
                        "Runtime": { "type": "string" },
                        "ConsoleSize": {
                          "type": "array",
                          "x-constraint": { "length": 2 },
                          "items": { "type": "integer", "minimum": 0 }
                        },
                        "Isolation": {
                          "type": "string",
                          "enum": ["default", "process", "hyperv"]
                        }
                      }
                    },
                    "NetworkingConfig": {
                      "type": "object",
                      "properties": {
                        "EndpointsConfig": {
                          "type": "object",
                          "properties": {
                            "string": {
                              "type": "object",
                              "properties": {
                                "IPAMConfig": {
                                  "type": "object",
                                  "properties": {
                                    "IPv4Address": {
                                      "type": "string",
                                      "x-format": {
                                        "ip": {
                                          "cidr": "optional",
                                          "version": ["ipv4"]
                                        }
                                      }
                                    },
                                    "IPv6Address": {
                                      "type": "string",
                                      "x-format": {
                                        "ip": {
                                          "cidr": "optional",
                                          "version": ["ipv6"]
                                        }
                                      }
                                    },
                                    "LinkLocalIPs": {
                                      "type": "array",
                                      "items": { "type": "string" }
                                    }
                                  }
                                },
                                "Links": {
                                  "type": "array",
                                  "items": { "type": "string" }
                                },
                                "Aliases": {
                                  "type": "array",
                                  "items": { "type": "string" }
                                },
                                "NetworkId": { "type": "string" },
                                "EndpointId": { "type": "string" },
                                "Gateway": { "type": "string" },
                                "IPAddress": {
                                  "type": "string",
                                  "x-format": {
                                    "ip": {
                                      "cidr": "optional",
                                      "version": ["ipv4"]
                                    }
                                  }
                                },
                                "IPPrefixLen": { "type": "integer" },
                                "IPv6Gateway": { "type": "string" },
                                "GlobalIPv6Address": {
                                  "type": "string",
                                  "x-format": {
                                    "ip": {
                                      "cidr": "optional",
                                      "version": ["ipv6"]
                                    }
                                  }
                                },
                                "GlobalIPv6PrefixLen": { "type": "integer" },
                                "MacAddress": { "type": "string" }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "containerTwinDesiredOptions": { "type": "object" },
                "containerTwinReportedProperties": { "type": "object" },
                "environmentVariables": {
                  "type": "array",
                  "description": "An array of object containing environment variables",
                  "x-meta": { "swaggerType": "array" },
                  "x-constraint": { "unique": "key" },
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": { "type": "string" },
                      "value": { "type": "string" }
                    },
                    "required": ["key", "value"]
                  }
                },
                "startupOrder": { "type": "number" },
                "deployedAt": { "type": "string", "format": "date" }
              }
            },
            "description": "Container modified"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device(s) not found / Container(s) not found"
          }
        }
      },
      "delete": {
        "summary": "Uninstall (delete) container from device",
        "operationId": "deleteDevicesDeviceidContainersContainerid",
        "description": "devices<br/><br/>updateDevices",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / uuid_v4",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "name": "containerId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["deviceContainers"],
        "security": [{ "jwt": [] }],
        "responses": {
          "204": { "description": "Device container deleted" },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device(s) not found / Container(s) not found"
          }
        }
      }
    },
    "/devices/{deviceId}/remote/credentials": {
      "get": {
        "summary": "Get remote device credentials",
        "operationId": "getDevicesDeviceidRemoteCredentials",
        "description": "devices<br/><br/>remoteDevices",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["remoteDevices"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "url": { "type": "string" },
                "username": { "type": "string" },
                "password": { "type": "string" },
                "directLink": { "type": "string" },
                "openVPNServer": {
                  "type": "object",
                  "properties": {
                    "port": { "type": "number" },
                    "proto": { "type": "string" },
                    "dev": { "type": "string" },
                    "cipher": { "type": "string" },
                    "secret": { "type": "string" },
                    "ifconfig": {
                      "type": "object",
                      "properties": {
                        "serverIP": {
                          "type": "string",
                          "x-format": {
                            "ip": { "cidr": "forbidden", "version": ["ipv4"] }
                          }
                        },
                        "clientIP": {
                          "type": "string",
                          "x-format": {
                            "ip": { "cidr": "forbidden", "version": ["ipv4"] }
                          }
                        }
                      }
                    },
                    "keepalive": {
                      "type": "object",
                      "properties": {
                        "interval": { "type": "number" },
                        "timeout": { "type": "number" }
                      }
                    }
                  }
                }
              },
              "required": ["url", "username", "password", "directLink"]
            },
            "description": "Retrieve credentials"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device(s) not found"
          }
        }
      }
    },
    "/organisations/{organisationId}/deployment-manifests/routes": {
      "get": {
        "summary": "Get deployment manifest routes by organisation",
        "operationId": "getOrganisationsOrganisationidDeploymentmanifestsRoutes",
        "description": "usersAndOrganisations<br/><br/>viewOrganisations",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "organisationId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "min(1), null and empty values are not allowed",
            "default": 1,
            "minimum": 1,
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "min(1) / max is set by config pageEntries, null and empty values are not allowed",
            "default": 10,
            "minimum": 1,
            "maximum": 5000,
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sort by \"name\" or other resource property, null not allowed",
            "default": "id",
            "name": "sortBy",
            "in": "query"
          },
          {
            "type": "string",
            "description": "valid - \"asc\" and \"desc\", null and empty string not allowed",
            "default": "asc",
            "enum": ["asc", "desc"],
            "name": "sortOrder",
            "in": "query"
          }
        ],
        "tags": ["organisationManifests"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "routes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string" },
                      "name": {
                        "type": "string",
                        "pattern": "^[a-zA-Z_0-9]+$"
                      },
                      "source": { "type": "string" },
                      "condition": { "type": "string" },
                      "target": { "type": "string" },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "createdAt",
                        "default": "2021-05-21T06:02:08.312Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "updatedAt",
                        "default": "2021-05-21T06:02:08.312Z"
                      }
                    },
                    "required": ["id", "name", "source", "target"]
                  }
                }
              },
              "required": ["routes"]
            },
            "description": "Manifest routes"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found"
          }
        }
      },
      "post": {
        "summary": "Add a route in the deployment manifest",
        "operationId": "postOrganisationsOrganisationidDeploymentmanifestsRoutes",
        "description": "usersAndOrganisations<br/><br/>updateOrganisations",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "organisationId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Route name",
                  "minLength": 1,
                  "maxLength": 64,
                  "pattern": "^[a-zA-Z_0-9]+$"
                },
                "source": {
                  "type": "string",
                  "description": "Source",
                  "minLength": 1,
                  "maxLength": 64
                },
                "condition": { "type": "string", "description": "Condition" },
                "target": {
                  "type": "string",
                  "description": "Target",
                  "minLength": 1,
                  "maxLength": 64
                }
              },
              "required": ["name", "source", "target"]
            }
          }
        ],
        "tags": ["organisationManifests"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "name": { "type": "string", "pattern": "^[a-zA-Z_0-9]+$" },
                "source": { "type": "string" },
                "condition": { "type": "string" },
                "target": { "type": "string" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:08.312Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:08.312Z"
                }
              },
              "required": ["id", "name", "source", "target"]
            },
            "description": "Route added to manifest"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found"
          }
        }
      }
    },
    "/organisations/{organisationId}/deployment-manifests/containers": {
      "get": {
        "summary": "Get deployment manifest containers by organisation",
        "operationId": "getOrganisationsOrganisationidDeploymentmanifestsContainers",
        "description": "usersAndOrganisations<br/><br/>viewOrganisations",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "organisationId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "min(1), null and empty values are not allowed",
            "default": 1,
            "minimum": 1,
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "min(1) / max is set by config pageEntries, null and empty values are not allowed",
            "default": 10,
            "minimum": 1,
            "maximum": 5000,
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Sort by \"name\" or other resource property, null not allowed",
            "default": "id",
            "name": "sortBy",
            "in": "query"
          },
          {
            "type": "string",
            "description": "valid - \"asc\" and \"desc\", null and empty string not allowed",
            "default": "asc",
            "enum": ["asc", "desc"],
            "name": "sortOrder",
            "in": "query"
          }
        ],
        "tags": ["organisationManifests"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "pagination": {
                  "type": "object",
                  "properties": {
                    "offset": { "type": "integer" },
                    "limit": { "type": "integer" },
                    "total": { "type": "integer" }
                  },
                  "required": ["offset", "limit", "total"]
                },
                "containers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Random uuid v4.",
                        "default": "7adb258e-3ee7-4299-bcb9-513fab03f7d4",
                        "x-format": { "guid": { "version": "uuidv4" } }
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Random uuid v4.",
                        "default": "7adb258e-3ee7-4299-bcb9-513fab03f7d4",
                        "x-format": { "guid": { "version": "uuidv4" } }
                      },
                      "organisation": { "type": "string" },
                      "displayName": { "type": "string" },
                      "containerName": { "type": "string" },
                      "image": { "type": "string" },
                      "icon": { "type": "string" },
                      "type": { "type": "string" },
                      "version": { "type": "string" },
                      "restartPolicy": {
                        "type": "string",
                        "enum": ["always", "never", "on-failed", "on-unhealthy"]
                      },
                      "desiredStatus": {
                        "type": "string",
                        "enum": ["stopped", "running"]
                      },
                      "status": { "type": "string" },
                      "imageUri": { "type": "string" },
                      "registryType": {
                        "type": "string",
                        "enum": ["public", "private"]
                      },
                      "credentials": {
                        "type": "object",
                        "properties": {
                          "address": { "type": "string" },
                          "username": { "type": "string" }
                        }
                      },
                      "processorArchitecture": {
                        "type": "string",
                        "description": "Processor architecture",
                        "enum": [
                          "Linux-X86",
                          "Linux-X64",
                          "Linux-ARM32V7",
                          "Linux-ARM64V8",
                          "All"
                        ]
                      },
                      "settingsPageId": {
                        "type": "string",
                        "enum": [
                          "gatewayTelemetry",
                          "networkTopology",
                          "opcuaPublisher",
                          "ainConnector",
                          "netFieldProxy",
                          "netFieldAppPlatformConnector"
                        ]
                      },
                      "shortDescription": { "type": "string", "maxLength": 60 },
                      "description": { "type": "string", "maxLength": 3000 },
                      "releaseNotes": {
                        "type": "array",
                        "items": { "type": "string" }
                      },
                      "category": {
                        "type": "string",
                        "enum": [
                          "Receiver",
                          "Connectivity",
                          "Data Acquisition",
                          "IT/Cloud Connectors",
                          "Services",
                          "Applications"
                        ]
                      },
                      "containerCreateOptions": {
                        "type": "object",
                        "description": "See latest Docker documentation",
                        "x-meta": { "swaggerType": "object" },
                        "properties": {
                          "Hostname": { "type": "string" },
                          "Domainname": { "type": "string" },
                          "User": { "type": "string" },
                          "AttachStdin": { "type": "boolean" },
                          "AttachStdout": { "type": "boolean" },
                          "AttachStderr": { "type": "boolean" },
                          "ExposedPorts": {
                            "type": "object",
                            "properties": { "string": { "type": "object" } }
                          },
                          "Tty": { "type": "boolean" },
                          "OpenStdin": { "type": "boolean" },
                          "StdinOnce": { "type": "boolean" },
                          "Env": {
                            "type": "string",
                            "x-alternatives": [
                              { "type": "string" },
                              { "type": "array", "items": { "type": "string" } }
                            ]
                          },
                          "Cmd": {
                            "type": "string",
                            "x-alternatives": [
                              { "type": "string" },
                              { "type": "array", "items": { "type": "string" } }
                            ]
                          },
                          "Healthcheck": {
                            "type": "object",
                            "properties": {
                              "Test": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "Interval": {
                                "type": "string",
                                "enum": [0],
                                "x-alternatives": [
                                  { "type": "string", "enum": [0] },
                                  { "type": "integer", "minimum": 1000000 }
                                ]
                              },
                              "Timeout": {
                                "type": "string",
                                "enum": [0],
                                "x-alternatives": [
                                  { "type": "string", "enum": [0] },
                                  { "type": "integer", "minimum": 1000000 }
                                ]
                              },
                              "Retries": { "type": "integer", "minimum": 0 },
                              "StartPeriod": {
                                "type": "string",
                                "enum": [0],
                                "x-alternatives": [
                                  { "type": "string", "enum": [0] },
                                  { "type": "integer", "minimum": 1000000 }
                                ]
                              }
                            }
                          },
                          "ArgsEscaped": { "type": "boolean" },
                          "Image": { "type": "string" },
                          "Volumes": {
                            "type": "object",
                            "properties": { "string": { "type": "object" } }
                          },
                          "WorkingDir": { "type": "string" },
                          "Entrypoint": {
                            "x-alternatives": [
                              {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              { "type": "string" }
                            ],
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "NetworkDisabled": { "type": "boolean" },
                          "MacAddress": {
                            "type": "string",
                            "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$"
                          },
                          "OnBuild": {
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "Labels": {
                            "type": "object",
                            "properties": { "string": { "type": "string" } }
                          },
                          "StopSignal": { "type": "string" },
                          "StopTimeout": { "type": "integer", "minimum": 0 },
                          "Shell": {
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "HostConfig": {
                            "type": "object",
                            "properties": {
                              "MaximumIOps": { "type": "integer" },
                              "MaximumIOBps": { "type": "integer" },
                              "CpuShares": { "type": "integer" },
                              "Memory": { "type": "integer" },
                              "CgroupParent": { "type": "string" },
                              "BlkioWeight": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 1000
                              },
                              "BlkioWeightDevice": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Weight": {
                                      "type": "integer",
                                      "minimum": 0
                                    }
                                  }
                                }
                              },
                              "BlkioDeviceReadBps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Rate": { "type": "integer", "minimum": 0 }
                                  }
                                }
                              },
                              "BlkioDeviceWriteBps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Rate": { "type": "integer", "minimum": 0 }
                                  }
                                }
                              },
                              "BlkioDeviceReadIOps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Rate": { "type": "integer", "minimum": 0 }
                                  }
                                }
                              },
                              "BlkioDeviceWriteIOps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Rate": { "type": "integer", "minimum": 0 }
                                  }
                                }
                              },
                              "CpuPeriod": { "type": "integer" },
                              "CpuQuota": { "type": "integer" },
                              "CpuRealtimePeriod": { "type": "integer" },
                              "CpuRealtimeRuntime": { "type": "integer" },
                              "CpusetCpus": { "type": "string" },
                              "CpusetMems": { "type": "string" },
                              "Devices": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "PathOnHost": { "type": "string" },
                                    "PathInContainer": { "type": "string" },
                                    "CgroupPermissions": { "type": "string" }
                                  }
                                }
                              },
                              "DeviceCgroupRules": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "DiskQuota": { "type": "integer" },
                              "KernelMemory": { "type": "integer" },
                              "MemoryReservation": { "type": "integer" },
                              "MemorySwap": { "type": "integer" },
                              "MemorySwappiness": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 100
                              },
                              "NanoCPUs": { "type": "integer" },
                              "OomKillDisable": { "type": "boolean" },
                              "PidsLimit": { "type": "integer" },
                              "Ulimits": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Name": { "type": "string" },
                                    "Soft": { "type": "integer" },
                                    "Hard": { "type": "integer" }
                                  }
                                }
                              },
                              "CpuCount": { "type": "integer" },
                              "CpuPercent": { "type": "integer" },
                              "IOMaximumIOps": { "type": "integer" },
                              "IOMaximumBandwidth": { "type": "integer" },
                              "Binds": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": ".+:.+(:.+)?"
                                }
                              },
                              "ContainerIDFile": { "type": "string" },
                              "LogConfig": {
                                "type": "object",
                                "properties": {
                                  "Type": {
                                    "type": "string",
                                    "enum": [
                                      "json-file",
                                      "syslog",
                                      "journald",
                                      "gelf",
                                      "fluentd",
                                      "awslogs",
                                      "splunk",
                                      "etwlogs",
                                      "none"
                                    ]
                                  },
                                  "Config": {
                                    "type": "object",
                                    "properties": {
                                      "string": { "type": "string" }
                                    }
                                  }
                                }
                              },
                              "NetworkMode": {
                                "type": "string",
                                "enum": ["bridge", "host", "none"],
                                "x-alternatives": [
                                  {
                                    "type": "string",
                                    "enum": ["bridge", "host", "none"]
                                  },
                                  {
                                    "type": "string",
                                    "pattern": "^container:.*$"
                                  }
                                ]
                              },
                              "PortBindings": {
                                "type": "object",
                                "properties": {
                                  "string": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "HostIp": { "type": "string" },
                                        "HostPort": { "type": "string" }
                                      }
                                    }
                                  }
                                }
                              },
                              "RestartPolicy": {
                                "type": "object",
                                "properties": {
                                  "Name": {
                                    "type": "string",
                                    "enum": [
                                      "always",
                                      "unless-stopped",
                                      "on-failure"
                                    ]
                                  },
                                  "MaximumRetryCount": { "type": "integer" }
                                }
                              },
                              "AutoRemove": { "type": "boolean" },
                              "VolumeDriver": { "type": "string" },
                              "VolumesFrom": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": "^.+(:(ro|rw))?$"
                                }
                              },
                              "Mounts": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Target": { "type": "string" },
                                    "Source": { "type": "string" },
                                    "Type": {
                                      "type": "string",
                                      "enum": ["bind", "volume", "tmpfs"]
                                    },
                                    "ReadOnly": { "type": "boolean" },
                                    "Consistency": { "type": "string" },
                                    "BindOptions": {
                                      "type": "object",
                                      "properties": {
                                        "Propagation": {
                                          "type": "string",
                                          "enum": [
                                            "private",
                                            "rprivate",
                                            "shared",
                                            "rshared",
                                            "slave",
                                            "rslave"
                                          ]
                                        }
                                      }
                                    },
                                    "VolumeOptions": {
                                      "type": "object",
                                      "properties": {
                                        "NoCopy": { "type": "boolean" },
                                        "Labels": {
                                          "type": "object",
                                          "properties": {
                                            "string": { "type": "string" }
                                          }
                                        },
                                        "DriverConfig": {
                                          "type": "object",
                                          "properties": {
                                            "Name": { "type": "string" },
                                            "Options": {
                                              "type": "object",
                                              "properties": {
                                                "string": { "type": "string" }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "TmpfsOptions": {
                                      "type": "object",
                                      "properties": {
                                        "SizeBytes": { "type": "integer" },
                                        "Mode": { "type": "integer" }
                                      }
                                    }
                                  }
                                }
                              },
                              "CapAdd": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "CapDrop": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "Dns": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "DnsOptions": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "DnsSearch": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "ExtraHosts": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": "^.+:.+$"
                                }
                              },
                              "GroupAdd": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "IpcMode": { "type": "string" },
                              "Cgroup": { "type": "string" },
                              "Links": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": "^.+:.+$"
                                }
                              },
                              "OomScoreAdj": { "type": "integer" },
                              "PidMode": {
                                "type": "string",
                                "pattern": "^.+(:.+)?$"
                              },
                              "Privileged": { "type": "boolean" },
                              "PublishAllPorts": { "type": "boolean" },
                              "ReadonlyRootfs": { "type": "boolean" },
                              "SecurityOpt": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "StorageOpt": {
                                "type": "object",
                                "properties": { "string": { "type": "string" } }
                              },
                              "Tmpfs": {
                                "type": "object",
                                "properties": { "string": { "type": "string" } }
                              },
                              "UTSMode": { "type": "string" },
                              "UsernsMode": { "type": "string" },
                              "ShmSize": { "type": "integer", "minimum": 0 },
                              "Sysctls": {
                                "type": "object",
                                "properties": { "string": { "type": "string" } }
                              },
                              "Runtime": { "type": "string" },
                              "ConsoleSize": {
                                "type": "array",
                                "x-constraint": { "length": 2 },
                                "items": { "type": "integer", "minimum": 0 }
                              },
                              "Isolation": {
                                "type": "string",
                                "enum": ["default", "process", "hyperv"]
                              }
                            }
                          },
                          "NetworkingConfig": {
                            "type": "object",
                            "properties": {
                              "EndpointsConfig": {
                                "type": "object",
                                "properties": {
                                  "string": {
                                    "type": "object",
                                    "properties": {
                                      "IPAMConfig": {
                                        "type": "object",
                                        "properties": {
                                          "IPv4Address": {
                                            "type": "string",
                                            "x-format": {
                                              "ip": {
                                                "cidr": "optional",
                                                "version": ["ipv4"]
                                              }
                                            }
                                          },
                                          "IPv6Address": {
                                            "type": "string",
                                            "x-format": {
                                              "ip": {
                                                "cidr": "optional",
                                                "version": ["ipv6"]
                                              }
                                            }
                                          },
                                          "LinkLocalIPs": {
                                            "type": "array",
                                            "items": { "type": "string" }
                                          }
                                        }
                                      },
                                      "Links": {
                                        "type": "array",
                                        "items": { "type": "string" }
                                      },
                                      "Aliases": {
                                        "type": "array",
                                        "items": { "type": "string" }
                                      },
                                      "NetworkId": { "type": "string" },
                                      "EndpointId": { "type": "string" },
                                      "Gateway": { "type": "string" },
                                      "IPAddress": {
                                        "type": "string",
                                        "x-format": {
                                          "ip": {
                                            "cidr": "optional",
                                            "version": ["ipv4"]
                                          }
                                        }
                                      },
                                      "IPPrefixLen": { "type": "integer" },
                                      "IPv6Gateway": { "type": "string" },
                                      "GlobalIPv6Address": {
                                        "type": "string",
                                        "x-format": {
                                          "ip": {
                                            "cidr": "optional",
                                            "version": ["ipv6"]
                                          }
                                        }
                                      },
                                      "GlobalIPv6PrefixLen": {
                                        "type": "integer"
                                      },
                                      "MacAddress": { "type": "string" }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "containerTwinDesiredOptions": { "type": "object" },
                      "containerTwinReportedProperties": { "type": "object" },
                      "environmentVariables": {
                        "type": "array",
                        "description": "An array of object containing environment variables",
                        "x-meta": { "swaggerType": "array" },
                        "x-constraint": { "unique": "key" },
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": { "type": "string" },
                            "value": { "type": "string" }
                          },
                          "required": ["key", "value"]
                        }
                      },
                      "startupOrder": { "type": "number" },
                      "deployedAt": { "type": "string", "format": "date" }
                    }
                  }
                }
              }
            },
            "description": "Manifest containers"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found"
          }
        }
      }
    },
    "/users/sensoredge/verify/resend": {
      "get": {
        "summary": "Resend user verification code to email address",
        "operationId": "getUsersSensoredgeVerifyResend",
        "parameters": [
          {
            "type": "string",
            "description": "valid email / null and empty values are not allowed",
            "x-format": { "email": true },
            "name": "email",
            "in": "query",
            "required": true
          }
        ],
        "tags": ["sensorEDGE"],
        "security": [{ "jwt": [] }],
        "responses": {
          "204": { "description": "User verification email send" },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          }
        }
      }
    },
    "/dashboards/{dashboardId}/panels/{panelId}/series": {
      "get": {
        "summary": "Get a list of series for a given panelId",
        "operationId": "getDashboardsDashboardidPanelsPanelidSeries",
        "description": "dashboards<br/><br/>viewDashboards",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "dashboardId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "panelId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["dashboards"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "dashboardSeries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The id property defines the unique id / objectId",
                        "pattern": "^[0-9a-fA-F]{24}$"
                      },
                      "deviceId": {
                        "type": "string",
                        "description": "The id property defines the unique id / objectId",
                        "pattern": "^[0-9a-fA-F]{24}$"
                      },
                      "deviceName": { "type": "string" },
                      "topic": { "type": "string" },
                      "columns": { "type": "string" },
                      "rows": { "type": "string" },
                      "visualisation": { "type": "object" },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "createdAt",
                        "default": "2021-05-21T06:02:08.859Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "updatedAt",
                        "default": "2021-05-21T06:02:08.859Z"
                      }
                    },
                    "required": [
                      "id",
                      "deviceId",
                      "deviceName",
                      "topic",
                      "columns",
                      "rows"
                    ]
                  }
                }
              },
              "required": ["dashboardSeries"]
            },
            "description": "Return series list"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Dashboard(s) not found / DashboardPanel(s) not found"
          }
        }
      },
      "post": {
        "summary": "Create a dashboard series",
        "operationId": "postDashboardsDashboardidPanelsPanelidSeries",
        "description": "dashboards<br/><br/>createDashboards",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "dashboardId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "panelId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "deviceId": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "topic": { "type": "string" },
                "columns": { "type": "string" },
                "rows": { "type": "string" },
                "visualisation": { "type": "object" }
              },
              "required": ["deviceId", "topic", "columns", "rows"]
            }
          }
        ],
        "tags": ["dashboards"],
        "security": [{ "jwt": [] }],
        "responses": {
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "deviceId": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "deviceName": { "type": "string" },
                "topic": { "type": "string" },
                "columns": { "type": "string" },
                "rows": { "type": "string" },
                "visualisation": { "type": "object" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:08.859Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:08.859Z"
                }
              },
              "required": [
                "id",
                "deviceId",
                "deviceName",
                "topic",
                "columns",
                "rows"
              ]
            },
            "description": "Dashboard panel created"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Dashboard(s) not found / DashboardPanel(s) not found"
          }
        }
      }
    },
    "/devices/{deviceId}/containers/{containerId}/properties": {
      "get": {
        "summary": "Get properties and information for container, installed into device",
        "operationId": "getDevicesDeviceidContainersContaineridProperties",
        "description": "devices<br/><br/>viewDeviceDetails",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / uuid_v4",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "name": "containerId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["deviceContainers"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "exitCode": { "type": "number" },
                "statusDescription": { "type": "string" },
                "lastStartTimeUtc": {
                  "type": "string",
                  "x-format": { "isoDate": true }
                },
                "lastExitTimeUtc": {
                  "type": "string",
                  "x-format": { "isoDate": true }
                },
                "restartCount": { "type": "number" },
                "lastRestartTimeUtc": {
                  "type": "string",
                  "x-format": { "isoDate": true }
                },
                "runtimeStatus": { "type": "string" },
                "version": { "type": "string" },
                "status": { "type": "string" },
                "restartPolicy": { "type": "string" },
                "type": { "type": "string" },
                "settings": {
                  "type": "object",
                  "properties": {
                    "image": { "type": "string" },
                    "imageHash": { "type": "string" },
                    "createOptions": { "type": "string" }
                  }
                },
                "env": {
                  "type": "object",
                  "properties": {
                    "string": {
                      "type": "object",
                      "properties": { "value": { "type": "string" } }
                    }
                  }
                },
                "lastConnectedTimeUtc": {
                  "type": "string",
                  "x-format": { "isoDate": true }
                },
                "lastDisconnectedTimeUtc": {
                  "type": "string",
                  "x-format": { "isoDate": true }
                },
                "deployedAt": { "type": "string" }
              }
            },
            "description": "Container properties"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device(s) not found / Container(s) not found"
          }
        }
      }
    },
    "/devices/{deviceId}/containers/routes/{routeId}": {
      "get": {
        "summary": "Get information about specific device container route",
        "operationId": "getDevicesDeviceidContainersRoutesRouteid",
        "description": "devices<br/><br/>viewDeviceDetails",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "routeId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["deviceContainers"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "name": { "type": "string", "pattern": "^[a-zA-Z_0-9]+$" },
                "source": { "type": "string" },
                "condition": { "type": "string" },
                "target": { "type": "string" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:08.312Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:08.312Z"
                }
              },
              "required": ["id", "name", "source", "target"]
            },
            "description": "Route retrieved"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Route(s) not found / Device(s) not found"
          }
        }
      },
      "put": {
        "summary": "Updates values of a device container route form device",
        "operationId": "putDevicesDeviceidContainersRoutesRouteid",
        "description": "devices<br/><br/>updateRoutes",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "routeId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "pattern": "^[a-zA-Z_0-9]+$" },
                "source": { "type": "string" },
                "condition": { "type": "string" },
                "target": { "type": "string" }
              }
            }
          }
        ],
        "tags": ["deviceContainers"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "name": { "type": "string", "pattern": "^[a-zA-Z_0-9]+$" },
                "source": { "type": "string" },
                "condition": { "type": "string" },
                "target": { "type": "string" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:08.312Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:08.312Z"
                }
              },
              "required": ["id", "name", "source", "target"]
            },
            "description": "Container route modified"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device(s) not found / Route(s) not found"
          }
        }
      },
      "delete": {
        "summary": "Delete device container route from a device",
        "operationId": "deleteDevicesDeviceidContainersRoutesRouteid",
        "description": "devices<br/><br/>deleteRoutes",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "routeId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["deviceContainers"],
        "security": [{ "jwt": [] }],
        "responses": {
          "204": { "description": "Container route deleted" },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device(s) not found / Route(s) not found"
          }
        }
      }
    },
    "/organisations/{organisationId}/deployment-manifests/containers/{containerId}": {
      "get": {
        "summary": "Get deployment manifest container",
        "operationId": "getOrganisationsOrganisationidDeploymentmanifestsContainersContainerid",
        "description": "usersAndOrganisations<br/><br/>viewOrganisations",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "organisationId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / uuid_v4",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "name": "containerId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["organisationManifests"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Random uuid v4.",
                  "default": "7adb258e-3ee7-4299-bcb9-513fab03f7d4",
                  "x-format": { "guid": { "version": "uuidv4" } }
                },
                "referenceId": {
                  "type": "string",
                  "description": "Random uuid v4.",
                  "default": "7adb258e-3ee7-4299-bcb9-513fab03f7d4",
                  "x-format": { "guid": { "version": "uuidv4" } }
                },
                "organisation": { "type": "string" },
                "displayName": { "type": "string" },
                "containerName": { "type": "string" },
                "image": { "type": "string" },
                "icon": { "type": "string" },
                "type": { "type": "string" },
                "version": { "type": "string" },
                "restartPolicy": {
                  "type": "string",
                  "enum": ["always", "never", "on-failed", "on-unhealthy"]
                },
                "desiredStatus": {
                  "type": "string",
                  "enum": ["stopped", "running"]
                },
                "status": { "type": "string" },
                "imageUri": { "type": "string" },
                "registryType": {
                  "type": "string",
                  "enum": ["public", "private"]
                },
                "credentials": {
                  "type": "object",
                  "properties": {
                    "address": { "type": "string" },
                    "username": { "type": "string" }
                  }
                },
                "processorArchitecture": {
                  "type": "string",
                  "description": "Processor architecture",
                  "enum": [
                    "Linux-X86",
                    "Linux-X64",
                    "Linux-ARM32V7",
                    "Linux-ARM64V8",
                    "All"
                  ]
                },
                "settingsPageId": {
                  "type": "string",
                  "enum": [
                    "gatewayTelemetry",
                    "networkTopology",
                    "opcuaPublisher",
                    "ainConnector",
                    "netFieldProxy",
                    "netFieldAppPlatformConnector"
                  ]
                },
                "shortDescription": { "type": "string", "maxLength": 60 },
                "description": { "type": "string", "maxLength": 3000 },
                "releaseNotes": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "category": {
                  "type": "string",
                  "enum": [
                    "Receiver",
                    "Connectivity",
                    "Data Acquisition",
                    "IT/Cloud Connectors",
                    "Services",
                    "Applications"
                  ]
                },
                "containerCreateOptions": {
                  "type": "object",
                  "description": "See latest Docker documentation",
                  "x-meta": { "swaggerType": "object" },
                  "properties": {
                    "Hostname": { "type": "string" },
                    "Domainname": { "type": "string" },
                    "User": { "type": "string" },
                    "AttachStdin": { "type": "boolean" },
                    "AttachStdout": { "type": "boolean" },
                    "AttachStderr": { "type": "boolean" },
                    "ExposedPorts": {
                      "type": "object",
                      "properties": { "string": { "type": "object" } }
                    },
                    "Tty": { "type": "boolean" },
                    "OpenStdin": { "type": "boolean" },
                    "StdinOnce": { "type": "boolean" },
                    "Env": {
                      "type": "string",
                      "x-alternatives": [
                        { "type": "string" },
                        { "type": "array", "items": { "type": "string" } }
                      ]
                    },
                    "Cmd": {
                      "type": "string",
                      "x-alternatives": [
                        { "type": "string" },
                        { "type": "array", "items": { "type": "string" } }
                      ]
                    },
                    "Healthcheck": {
                      "type": "object",
                      "properties": {
                        "Test": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "Interval": {
                          "type": "string",
                          "enum": [0],
                          "x-alternatives": [
                            { "type": "string", "enum": [0] },
                            { "type": "integer", "minimum": 1000000 }
                          ]
                        },
                        "Timeout": {
                          "type": "string",
                          "enum": [0],
                          "x-alternatives": [
                            { "type": "string", "enum": [0] },
                            { "type": "integer", "minimum": 1000000 }
                          ]
                        },
                        "Retries": { "type": "integer", "minimum": 0 },
                        "StartPeriod": {
                          "type": "string",
                          "enum": [0],
                          "x-alternatives": [
                            { "type": "string", "enum": [0] },
                            { "type": "integer", "minimum": 1000000 }
                          ]
                        }
                      }
                    },
                    "ArgsEscaped": { "type": "boolean" },
                    "Image": { "type": "string" },
                    "Volumes": {
                      "type": "object",
                      "properties": { "string": { "type": "object" } }
                    },
                    "WorkingDir": { "type": "string" },
                    "Entrypoint": {
                      "x-alternatives": [
                        { "type": "array", "items": { "type": "string" } },
                        { "type": "string" }
                      ],
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "NetworkDisabled": { "type": "boolean" },
                    "MacAddress": {
                      "type": "string",
                      "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$"
                    },
                    "OnBuild": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "Labels": {
                      "type": "object",
                      "properties": { "string": { "type": "string" } }
                    },
                    "StopSignal": { "type": "string" },
                    "StopTimeout": { "type": "integer", "minimum": 0 },
                    "Shell": { "type": "array", "items": { "type": "string" } },
                    "HostConfig": {
                      "type": "object",
                      "properties": {
                        "MaximumIOps": { "type": "integer" },
                        "MaximumIOBps": { "type": "integer" },
                        "CpuShares": { "type": "integer" },
                        "Memory": { "type": "integer" },
                        "CgroupParent": { "type": "string" },
                        "BlkioWeight": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 1000
                        },
                        "BlkioWeightDevice": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Weight": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceReadBps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceWriteBps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceReadIOps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceWriteIOps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "CpuPeriod": { "type": "integer" },
                        "CpuQuota": { "type": "integer" },
                        "CpuRealtimePeriod": { "type": "integer" },
                        "CpuRealtimeRuntime": { "type": "integer" },
                        "CpusetCpus": { "type": "string" },
                        "CpusetMems": { "type": "string" },
                        "Devices": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "PathOnHost": { "type": "string" },
                              "PathInContainer": { "type": "string" },
                              "CgroupPermissions": { "type": "string" }
                            }
                          }
                        },
                        "DeviceCgroupRules": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "DiskQuota": { "type": "integer" },
                        "KernelMemory": { "type": "integer" },
                        "MemoryReservation": { "type": "integer" },
                        "MemorySwap": { "type": "integer" },
                        "MemorySwappiness": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 100
                        },
                        "NanoCPUs": { "type": "integer" },
                        "OomKillDisable": { "type": "boolean" },
                        "PidsLimit": { "type": "integer" },
                        "Ulimits": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Name": { "type": "string" },
                              "Soft": { "type": "integer" },
                              "Hard": { "type": "integer" }
                            }
                          }
                        },
                        "CpuCount": { "type": "integer" },
                        "CpuPercent": { "type": "integer" },
                        "IOMaximumIOps": { "type": "integer" },
                        "IOMaximumBandwidth": { "type": "integer" },
                        "Binds": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "pattern": ".+:.+(:.+)?"
                          }
                        },
                        "ContainerIDFile": { "type": "string" },
                        "LogConfig": {
                          "type": "object",
                          "properties": {
                            "Type": {
                              "type": "string",
                              "enum": [
                                "json-file",
                                "syslog",
                                "journald",
                                "gelf",
                                "fluentd",
                                "awslogs",
                                "splunk",
                                "etwlogs",
                                "none"
                              ]
                            },
                            "Config": {
                              "type": "object",
                              "properties": { "string": { "type": "string" } }
                            }
                          }
                        },
                        "NetworkMode": {
                          "type": "string",
                          "enum": ["bridge", "host", "none"],
                          "x-alternatives": [
                            {
                              "type": "string",
                              "enum": ["bridge", "host", "none"]
                            },
                            { "type": "string", "pattern": "^container:.*$" }
                          ]
                        },
                        "PortBindings": {
                          "type": "object",
                          "properties": {
                            "string": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "HostIp": { "type": "string" },
                                  "HostPort": { "type": "string" }
                                }
                              }
                            }
                          }
                        },
                        "RestartPolicy": {
                          "type": "object",
                          "properties": {
                            "Name": {
                              "type": "string",
                              "enum": ["always", "unless-stopped", "on-failure"]
                            },
                            "MaximumRetryCount": { "type": "integer" }
                          }
                        },
                        "AutoRemove": { "type": "boolean" },
                        "VolumeDriver": { "type": "string" },
                        "VolumesFrom": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "pattern": "^.+(:(ro|rw))?$"
                          }
                        },
                        "Mounts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Target": { "type": "string" },
                              "Source": { "type": "string" },
                              "Type": {
                                "type": "string",
                                "enum": ["bind", "volume", "tmpfs"]
                              },
                              "ReadOnly": { "type": "boolean" },
                              "Consistency": { "type": "string" },
                              "BindOptions": {
                                "type": "object",
                                "properties": {
                                  "Propagation": {
                                    "type": "string",
                                    "enum": [
                                      "private",
                                      "rprivate",
                                      "shared",
                                      "rshared",
                                      "slave",
                                      "rslave"
                                    ]
                                  }
                                }
                              },
                              "VolumeOptions": {
                                "type": "object",
                                "properties": {
                                  "NoCopy": { "type": "boolean" },
                                  "Labels": {
                                    "type": "object",
                                    "properties": {
                                      "string": { "type": "string" }
                                    }
                                  },
                                  "DriverConfig": {
                                    "type": "object",
                                    "properties": {
                                      "Name": { "type": "string" },
                                      "Options": {
                                        "type": "object",
                                        "properties": {
                                          "string": { "type": "string" }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "TmpfsOptions": {
                                "type": "object",
                                "properties": {
                                  "SizeBytes": { "type": "integer" },
                                  "Mode": { "type": "integer" }
                                }
                              }
                            }
                          }
                        },
                        "CapAdd": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "CapDrop": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "Dns": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "DnsOptions": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "DnsSearch": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "ExtraHosts": {
                          "type": "array",
                          "items": { "type": "string", "pattern": "^.+:.+$" }
                        },
                        "GroupAdd": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "IpcMode": { "type": "string" },
                        "Cgroup": { "type": "string" },
                        "Links": {
                          "type": "array",
                          "items": { "type": "string", "pattern": "^.+:.+$" }
                        },
                        "OomScoreAdj": { "type": "integer" },
                        "PidMode": {
                          "type": "string",
                          "pattern": "^.+(:.+)?$"
                        },
                        "Privileged": { "type": "boolean" },
                        "PublishAllPorts": { "type": "boolean" },
                        "ReadonlyRootfs": { "type": "boolean" },
                        "SecurityOpt": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "StorageOpt": {
                          "type": "object",
                          "properties": { "string": { "type": "string" } }
                        },
                        "Tmpfs": {
                          "type": "object",
                          "properties": { "string": { "type": "string" } }
                        },
                        "UTSMode": { "type": "string" },
                        "UsernsMode": { "type": "string" },
                        "ShmSize": { "type": "integer", "minimum": 0 },
                        "Sysctls": {
                          "type": "object",
                          "properties": { "string": { "type": "string" } }
                        },
                        "Runtime": { "type": "string" },
                        "ConsoleSize": {
                          "type": "array",
                          "x-constraint": { "length": 2 },
                          "items": { "type": "integer", "minimum": 0 }
                        },
                        "Isolation": {
                          "type": "string",
                          "enum": ["default", "process", "hyperv"]
                        }
                      }
                    },
                    "NetworkingConfig": {
                      "type": "object",
                      "properties": {
                        "EndpointsConfig": {
                          "type": "object",
                          "properties": {
                            "string": {
                              "type": "object",
                              "properties": {
                                "IPAMConfig": {
                                  "type": "object",
                                  "properties": {
                                    "IPv4Address": {
                                      "type": "string",
                                      "x-format": {
                                        "ip": {
                                          "cidr": "optional",
                                          "version": ["ipv4"]
                                        }
                                      }
                                    },
                                    "IPv6Address": {
                                      "type": "string",
                                      "x-format": {
                                        "ip": {
                                          "cidr": "optional",
                                          "version": ["ipv6"]
                                        }
                                      }
                                    },
                                    "LinkLocalIPs": {
                                      "type": "array",
                                      "items": { "type": "string" }
                                    }
                                  }
                                },
                                "Links": {
                                  "type": "array",
                                  "items": { "type": "string" }
                                },
                                "Aliases": {
                                  "type": "array",
                                  "items": { "type": "string" }
                                },
                                "NetworkId": { "type": "string" },
                                "EndpointId": { "type": "string" },
                                "Gateway": { "type": "string" },
                                "IPAddress": {
                                  "type": "string",
                                  "x-format": {
                                    "ip": {
                                      "cidr": "optional",
                                      "version": ["ipv4"]
                                    }
                                  }
                                },
                                "IPPrefixLen": { "type": "integer" },
                                "IPv6Gateway": { "type": "string" },
                                "GlobalIPv6Address": {
                                  "type": "string",
                                  "x-format": {
                                    "ip": {
                                      "cidr": "optional",
                                      "version": ["ipv6"]
                                    }
                                  }
                                },
                                "GlobalIPv6PrefixLen": { "type": "integer" },
                                "MacAddress": { "type": "string" }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "containerTwinDesiredOptions": { "type": "object" },
                "containerTwinReportedProperties": { "type": "object" },
                "environmentVariables": {
                  "type": "array",
                  "description": "An array of object containing environment variables",
                  "x-meta": { "swaggerType": "array" },
                  "x-constraint": { "unique": "key" },
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": { "type": "string" },
                      "value": { "type": "string" }
                    },
                    "required": ["key", "value"]
                  }
                },
                "startupOrder": { "type": "number" },
                "deployedAt": { "type": "string", "format": "date" }
              }
            },
            "description": "Container retrieved"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found / Container(s) not found"
          }
        }
      },
      "post": {
        "summary": "Add a container to the deployment manifest",
        "operationId": "postOrganisationsOrganisationidDeploymentmanifestsContainersContainerid",
        "description": "usersAndOrganisations<br/><br/>updateOrganisations",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "organisationId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / uuid_v4",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "name": "containerId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Container version, null or empty not allowed",
            "name": "version",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Restart policy",
            "enum": ["always", "never", "on-failed", "on-unhealthy"],
            "name": "restartPolicy",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Desired status",
            "enum": ["stopped", "running"],
            "name": "desiredStatus",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "See latest Docker documentation",
            "x-meta": { "swaggerType": "object" },
            "name": "containerCreateOptions",
            "in": "formData",
            "x-type": "object",
            "x-properties": {
              "Hostname": { "type": "string" },
              "Domainname": { "type": "string" },
              "User": { "type": "string" },
              "AttachStdin": { "type": "boolean" },
              "AttachStdout": { "type": "boolean" },
              "AttachStderr": { "type": "boolean" },
              "ExposedPorts": {
                "type": "object",
                "x-properties": { "string": { "type": "object" } }
              },
              "Tty": { "type": "boolean" },
              "OpenStdin": { "type": "boolean" },
              "StdinOnce": { "type": "boolean" },
              "Env": {
                "type": "string",
                "x-alternatives": [
                  { "type": "string" },
                  {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "Env"
                  }
                ]
              },
              "Cmd": {
                "type": "string",
                "x-alternatives": [
                  { "type": "string" },
                  {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "Cmd"
                  }
                ]
              },
              "Healthcheck": {
                "type": "object",
                "x-properties": {
                  "Test": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "Test"
                  },
                  "Interval": {
                    "type": "string",
                    "enum": [0],
                    "x-alternatives": [
                      { "type": "string", "enum": [0] },
                      { "type": "integer", "minimum": 1000000 }
                    ]
                  },
                  "Timeout": {
                    "type": "string",
                    "enum": [0],
                    "x-alternatives": [
                      { "type": "string", "enum": [0] },
                      { "type": "integer", "minimum": 1000000 }
                    ]
                  },
                  "Retries": { "type": "integer", "minimum": 0 },
                  "StartPeriod": {
                    "type": "string",
                    "enum": [0],
                    "x-alternatives": [
                      { "type": "string", "enum": [0] },
                      { "type": "integer", "minimum": 1000000 }
                    ]
                  }
                }
              },
              "ArgsEscaped": { "type": "boolean" },
              "Image": { "type": "string" },
              "Volumes": {
                "type": "object",
                "x-properties": { "string": { "type": "object" } }
              },
              "WorkingDir": { "type": "string" },
              "Entrypoint": {
                "type": "array",
                "items": { "type": "string" },
                "collectionFormat": "multi",
                "x-alternatives": [
                  {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "Entrypoint"
                  },
                  { "type": "string" }
                ]
              },
              "NetworkDisabled": { "type": "boolean" },
              "MacAddress": {
                "type": "string",
                "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$"
              },
              "OnBuild": {
                "type": "array",
                "items": { "type": "string" },
                "collectionFormat": "multi",
                "name": "OnBuild"
              },
              "Labels": {
                "type": "object",
                "x-properties": { "string": { "type": "string" } }
              },
              "StopSignal": { "type": "string" },
              "StopTimeout": { "type": "integer", "minimum": 0 },
              "Shell": {
                "type": "array",
                "items": { "type": "string" },
                "collectionFormat": "multi",
                "name": "Shell"
              },
              "HostConfig": {
                "type": "object",
                "x-properties": {
                  "MaximumIOps": { "type": "integer" },
                  "MaximumIOBps": { "type": "integer" },
                  "CpuShares": { "type": "integer" },
                  "Memory": { "type": "integer" },
                  "CgroupParent": { "type": "string" },
                  "BlkioWeight": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 1000
                  },
                  "BlkioWeightDevice": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Path": { "type": "string" },
                        "Weight": { "type": "integer", "minimum": 0 }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "BlkioWeightDevice"
                  },
                  "BlkioDeviceReadBps": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Path": { "type": "string" },
                        "Rate": { "type": "integer", "minimum": 0 }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "BlkioDeviceReadBps"
                  },
                  "BlkioDeviceWriteBps": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Path": { "type": "string" },
                        "Rate": { "type": "integer", "minimum": 0 }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "BlkioDeviceWriteBps"
                  },
                  "BlkioDeviceReadIOps": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Path": { "type": "string" },
                        "Rate": { "type": "integer", "minimum": 0 }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "BlkioDeviceReadIOps"
                  },
                  "BlkioDeviceWriteIOps": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Path": { "type": "string" },
                        "Rate": { "type": "integer", "minimum": 0 }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "BlkioDeviceWriteIOps"
                  },
                  "CpuPeriod": { "type": "integer" },
                  "CpuQuota": { "type": "integer" },
                  "CpuRealtimePeriod": { "type": "integer" },
                  "CpuRealtimeRuntime": { "type": "integer" },
                  "CpusetCpus": { "type": "string" },
                  "CpusetMems": { "type": "string" },
                  "Devices": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "PathOnHost": { "type": "string" },
                        "PathInContainer": { "type": "string" },
                        "CgroupPermissions": { "type": "string" }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "Devices"
                  },
                  "DeviceCgroupRules": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "DeviceCgroupRules"
                  },
                  "DiskQuota": { "type": "integer" },
                  "KernelMemory": { "type": "integer" },
                  "MemoryReservation": { "type": "integer" },
                  "MemorySwap": { "type": "integer" },
                  "MemorySwappiness": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 100
                  },
                  "NanoCPUs": { "type": "integer" },
                  "OomKillDisable": { "type": "boolean" },
                  "PidsLimit": { "type": "integer" },
                  "Ulimits": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Name": { "type": "string" },
                        "Soft": { "type": "integer" },
                        "Hard": { "type": "integer" }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "Ulimits"
                  },
                  "CpuCount": { "type": "integer" },
                  "CpuPercent": { "type": "integer" },
                  "IOMaximumIOps": { "type": "integer" },
                  "IOMaximumBandwidth": { "type": "integer" },
                  "Binds": {
                    "type": "array",
                    "items": { "type": "string", "pattern": ".+:.+(:.+)?" },
                    "collectionFormat": "multi",
                    "name": "Binds"
                  },
                  "ContainerIDFile": { "type": "string" },
                  "LogConfig": {
                    "type": "object",
                    "x-properties": {
                      "Type": {
                        "type": "string",
                        "enum": [
                          "json-file",
                          "syslog",
                          "journald",
                          "gelf",
                          "fluentd",
                          "awslogs",
                          "splunk",
                          "etwlogs",
                          "none"
                        ]
                      },
                      "Config": {
                        "type": "object",
                        "x-properties": { "string": { "type": "string" } }
                      }
                    }
                  },
                  "NetworkMode": {
                    "type": "string",
                    "enum": ["bridge", "host", "none"],
                    "x-alternatives": [
                      { "type": "string", "enum": ["bridge", "host", "none"] },
                      { "type": "string", "pattern": "^container:.*$" }
                    ]
                  },
                  "PortBindings": {
                    "type": "object",
                    "x-properties": {
                      "string": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "x-properties": {
                            "HostIp": { "type": "string" },
                            "HostPort": { "type": "string" }
                          }
                        },
                        "collectionFormat": "multi",
                        "name": "string"
                      }
                    }
                  },
                  "RestartPolicy": {
                    "type": "object",
                    "x-properties": {
                      "Name": {
                        "type": "string",
                        "enum": ["always", "unless-stopped", "on-failure"]
                      },
                      "MaximumRetryCount": { "type": "integer" }
                    }
                  },
                  "AutoRemove": { "type": "boolean" },
                  "VolumeDriver": { "type": "string" },
                  "VolumesFrom": {
                    "type": "array",
                    "items": { "type": "string", "pattern": "^.+(:(ro|rw))?$" },
                    "collectionFormat": "multi",
                    "name": "VolumesFrom"
                  },
                  "Mounts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Target": { "type": "string" },
                        "Source": { "type": "string" },
                        "Type": {
                          "type": "string",
                          "enum": ["bind", "volume", "tmpfs"]
                        },
                        "ReadOnly": { "type": "boolean" },
                        "Consistency": { "type": "string" },
                        "BindOptions": {
                          "type": "object",
                          "x-properties": {
                            "Propagation": {
                              "type": "string",
                              "enum": [
                                "private",
                                "rprivate",
                                "shared",
                                "rshared",
                                "slave",
                                "rslave"
                              ]
                            }
                          }
                        },
                        "VolumeOptions": {
                          "type": "object",
                          "x-properties": {
                            "NoCopy": { "type": "boolean" },
                            "Labels": {
                              "type": "object",
                              "x-properties": { "string": { "type": "string" } }
                            },
                            "DriverConfig": {
                              "type": "object",
                              "x-properties": {
                                "Name": { "type": "string" },
                                "Options": {
                                  "type": "object",
                                  "x-properties": {
                                    "string": { "type": "string" }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "TmpfsOptions": {
                          "type": "object",
                          "x-properties": {
                            "SizeBytes": { "type": "integer" },
                            "Mode": { "type": "integer" }
                          }
                        }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "Mounts"
                  },
                  "CapAdd": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "CapAdd"
                  },
                  "CapDrop": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "CapDrop"
                  },
                  "Dns": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "Dns"
                  },
                  "DnsOptions": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "DnsOptions"
                  },
                  "DnsSearch": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "DnsSearch"
                  },
                  "ExtraHosts": {
                    "type": "array",
                    "items": { "type": "string", "pattern": "^.+:.+$" },
                    "collectionFormat": "multi",
                    "name": "ExtraHosts"
                  },
                  "GroupAdd": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "GroupAdd"
                  },
                  "IpcMode": { "type": "string" },
                  "Cgroup": { "type": "string" },
                  "Links": {
                    "type": "array",
                    "items": { "type": "string", "pattern": "^.+:.+$" },
                    "collectionFormat": "multi",
                    "name": "Links"
                  },
                  "OomScoreAdj": { "type": "integer" },
                  "PidMode": { "type": "string", "pattern": "^.+(:.+)?$" },
                  "Privileged": { "type": "boolean" },
                  "PublishAllPorts": { "type": "boolean" },
                  "ReadonlyRootfs": { "type": "boolean" },
                  "SecurityOpt": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "SecurityOpt"
                  },
                  "StorageOpt": {
                    "type": "object",
                    "x-properties": { "string": { "type": "string" } }
                  },
                  "Tmpfs": {
                    "type": "object",
                    "x-properties": { "string": { "type": "string" } }
                  },
                  "UTSMode": { "type": "string" },
                  "UsernsMode": { "type": "string" },
                  "ShmSize": { "type": "integer", "minimum": 0 },
                  "Sysctls": {
                    "type": "object",
                    "x-properties": { "string": { "type": "string" } }
                  },
                  "Runtime": { "type": "string" },
                  "ConsoleSize": {
                    "type": "array",
                    "x-constraint": { "length": 2 },
                    "items": { "type": "integer", "minimum": 0 },
                    "collectionFormat": "multi",
                    "name": "ConsoleSize"
                  },
                  "Isolation": {
                    "type": "string",
                    "enum": ["default", "process", "hyperv"]
                  }
                }
              },
              "NetworkingConfig": {
                "type": "object",
                "x-properties": {
                  "EndpointsConfig": {
                    "type": "object",
                    "x-properties": {
                      "string": {
                        "type": "object",
                        "x-properties": {
                          "IPAMConfig": {
                            "type": "object",
                            "x-properties": {
                              "IPv4Address": {
                                "type": "string",
                                "x-format": {
                                  "ip": {
                                    "cidr": "optional",
                                    "version": ["ipv4"]
                                  }
                                }
                              },
                              "IPv6Address": {
                                "type": "string",
                                "x-format": {
                                  "ip": {
                                    "cidr": "optional",
                                    "version": ["ipv6"]
                                  }
                                }
                              },
                              "LinkLocalIPs": {
                                "type": "array",
                                "items": { "type": "string" },
                                "collectionFormat": "multi",
                                "name": "LinkLocalIPs"
                              }
                            }
                          },
                          "Links": {
                            "type": "array",
                            "items": { "type": "string" },
                            "collectionFormat": "multi",
                            "name": "Links"
                          },
                          "Aliases": {
                            "type": "array",
                            "items": { "type": "string" },
                            "collectionFormat": "multi",
                            "name": "Aliases"
                          },
                          "NetworkId": { "type": "string" },
                          "EndpointId": { "type": "string" },
                          "Gateway": { "type": "string" },
                          "IPAddress": {
                            "type": "string",
                            "x-format": {
                              "ip": { "cidr": "optional", "version": ["ipv4"] }
                            }
                          },
                          "IPPrefixLen": { "type": "integer" },
                          "IPv6Gateway": { "type": "string" },
                          "GlobalIPv6Address": {
                            "type": "string",
                            "x-format": {
                              "ip": { "cidr": "optional", "version": ["ipv6"] }
                            }
                          },
                          "GlobalIPv6PrefixLen": { "type": "integer" },
                          "MacAddress": { "type": "string" }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "string",
            "description": "JSON / See Azure documentation",
            "x-meta": { "swaggerType": "object" },
            "name": "containerTwinDesiredOptions",
            "in": "formData",
            "x-type": "object"
          },
          {
            "type": "array",
            "description": "An array of object containing environment variables",
            "x-meta": { "swaggerType": "array" },
            "x-constraint": { "unique": "key" },
            "items": {
              "type": "string",
              "x-type": "object",
              "x-properties": {
                "key": { "type": "string" },
                "value": { "type": "string" }
              }
            },
            "collectionFormat": "multi",
            "name": "environmentVariables",
            "in": "formData"
          },
          { "type": "number", "name": "startupOrder", "in": "formData" },
          {
            "type": "boolean",
            "default": false,
            "name": "useProxySettings",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Processor architecture",
            "enum": [
              "Linux-X86",
              "Linux-X64",
              "Linux-ARM32V7",
              "Linux-ARM64V8",
              "All"
            ],
            "name": "processorArchitecture",
            "in": "formData"
          }
        ],
        "consumes": ["multipart/form-data"],
        "tags": ["organisationManifests"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Random uuid v4.",
                  "default": "7adb258e-3ee7-4299-bcb9-513fab03f7d4",
                  "x-format": { "guid": { "version": "uuidv4" } }
                },
                "referenceId": {
                  "type": "string",
                  "description": "Random uuid v4.",
                  "default": "7adb258e-3ee7-4299-bcb9-513fab03f7d4",
                  "x-format": { "guid": { "version": "uuidv4" } }
                },
                "organisation": { "type": "string" },
                "displayName": { "type": "string" },
                "containerName": { "type": "string" },
                "image": { "type": "string" },
                "icon": { "type": "string" },
                "type": { "type": "string" },
                "version": { "type": "string" },
                "restartPolicy": {
                  "type": "string",
                  "enum": ["always", "never", "on-failed", "on-unhealthy"]
                },
                "desiredStatus": {
                  "type": "string",
                  "enum": ["stopped", "running"]
                },
                "status": { "type": "string" },
                "imageUri": { "type": "string" },
                "registryType": {
                  "type": "string",
                  "enum": ["public", "private"]
                },
                "credentials": {
                  "type": "object",
                  "properties": {
                    "address": { "type": "string" },
                    "username": { "type": "string" }
                  }
                },
                "processorArchitecture": {
                  "type": "string",
                  "description": "Processor architecture",
                  "enum": [
                    "Linux-X86",
                    "Linux-X64",
                    "Linux-ARM32V7",
                    "Linux-ARM64V8",
                    "All"
                  ]
                },
                "settingsPageId": {
                  "type": "string",
                  "enum": [
                    "gatewayTelemetry",
                    "networkTopology",
                    "opcuaPublisher",
                    "ainConnector",
                    "netFieldProxy",
                    "netFieldAppPlatformConnector"
                  ]
                },
                "shortDescription": { "type": "string", "maxLength": 60 },
                "description": { "type": "string", "maxLength": 3000 },
                "releaseNotes": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "category": {
                  "type": "string",
                  "enum": [
                    "Receiver",
                    "Connectivity",
                    "Data Acquisition",
                    "IT/Cloud Connectors",
                    "Services",
                    "Applications"
                  ]
                },
                "containerCreateOptions": {
                  "type": "object",
                  "description": "See latest Docker documentation",
                  "x-meta": { "swaggerType": "object" },
                  "properties": {
                    "Hostname": { "type": "string" },
                    "Domainname": { "type": "string" },
                    "User": { "type": "string" },
                    "AttachStdin": { "type": "boolean" },
                    "AttachStdout": { "type": "boolean" },
                    "AttachStderr": { "type": "boolean" },
                    "ExposedPorts": {
                      "type": "object",
                      "properties": { "string": { "type": "object" } }
                    },
                    "Tty": { "type": "boolean" },
                    "OpenStdin": { "type": "boolean" },
                    "StdinOnce": { "type": "boolean" },
                    "Env": {
                      "type": "string",
                      "x-alternatives": [
                        { "type": "string" },
                        { "type": "array", "items": { "type": "string" } }
                      ]
                    },
                    "Cmd": {
                      "type": "string",
                      "x-alternatives": [
                        { "type": "string" },
                        { "type": "array", "items": { "type": "string" } }
                      ]
                    },
                    "Healthcheck": {
                      "type": "object",
                      "properties": {
                        "Test": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "Interval": {
                          "type": "string",
                          "enum": [0],
                          "x-alternatives": [
                            { "type": "string", "enum": [0] },
                            { "type": "integer", "minimum": 1000000 }
                          ]
                        },
                        "Timeout": {
                          "type": "string",
                          "enum": [0],
                          "x-alternatives": [
                            { "type": "string", "enum": [0] },
                            { "type": "integer", "minimum": 1000000 }
                          ]
                        },
                        "Retries": { "type": "integer", "minimum": 0 },
                        "StartPeriod": {
                          "type": "string",
                          "enum": [0],
                          "x-alternatives": [
                            { "type": "string", "enum": [0] },
                            { "type": "integer", "minimum": 1000000 }
                          ]
                        }
                      }
                    },
                    "ArgsEscaped": { "type": "boolean" },
                    "Image": { "type": "string" },
                    "Volumes": {
                      "type": "object",
                      "properties": { "string": { "type": "object" } }
                    },
                    "WorkingDir": { "type": "string" },
                    "Entrypoint": {
                      "x-alternatives": [
                        { "type": "array", "items": { "type": "string" } },
                        { "type": "string" }
                      ],
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "NetworkDisabled": { "type": "boolean" },
                    "MacAddress": {
                      "type": "string",
                      "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$"
                    },
                    "OnBuild": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "Labels": {
                      "type": "object",
                      "properties": { "string": { "type": "string" } }
                    },
                    "StopSignal": { "type": "string" },
                    "StopTimeout": { "type": "integer", "minimum": 0 },
                    "Shell": { "type": "array", "items": { "type": "string" } },
                    "HostConfig": {
                      "type": "object",
                      "properties": {
                        "MaximumIOps": { "type": "integer" },
                        "MaximumIOBps": { "type": "integer" },
                        "CpuShares": { "type": "integer" },
                        "Memory": { "type": "integer" },
                        "CgroupParent": { "type": "string" },
                        "BlkioWeight": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 1000
                        },
                        "BlkioWeightDevice": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Weight": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceReadBps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceWriteBps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceReadIOps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceWriteIOps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "CpuPeriod": { "type": "integer" },
                        "CpuQuota": { "type": "integer" },
                        "CpuRealtimePeriod": { "type": "integer" },
                        "CpuRealtimeRuntime": { "type": "integer" },
                        "CpusetCpus": { "type": "string" },
                        "CpusetMems": { "type": "string" },
                        "Devices": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "PathOnHost": { "type": "string" },
                              "PathInContainer": { "type": "string" },
                              "CgroupPermissions": { "type": "string" }
                            }
                          }
                        },
                        "DeviceCgroupRules": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "DiskQuota": { "type": "integer" },
                        "KernelMemory": { "type": "integer" },
                        "MemoryReservation": { "type": "integer" },
                        "MemorySwap": { "type": "integer" },
                        "MemorySwappiness": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 100
                        },
                        "NanoCPUs": { "type": "integer" },
                        "OomKillDisable": { "type": "boolean" },
                        "PidsLimit": { "type": "integer" },
                        "Ulimits": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Name": { "type": "string" },
                              "Soft": { "type": "integer" },
                              "Hard": { "type": "integer" }
                            }
                          }
                        },
                        "CpuCount": { "type": "integer" },
                        "CpuPercent": { "type": "integer" },
                        "IOMaximumIOps": { "type": "integer" },
                        "IOMaximumBandwidth": { "type": "integer" },
                        "Binds": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "pattern": ".+:.+(:.+)?"
                          }
                        },
                        "ContainerIDFile": { "type": "string" },
                        "LogConfig": {
                          "type": "object",
                          "properties": {
                            "Type": {
                              "type": "string",
                              "enum": [
                                "json-file",
                                "syslog",
                                "journald",
                                "gelf",
                                "fluentd",
                                "awslogs",
                                "splunk",
                                "etwlogs",
                                "none"
                              ]
                            },
                            "Config": {
                              "type": "object",
                              "properties": { "string": { "type": "string" } }
                            }
                          }
                        },
                        "NetworkMode": {
                          "type": "string",
                          "enum": ["bridge", "host", "none"],
                          "x-alternatives": [
                            {
                              "type": "string",
                              "enum": ["bridge", "host", "none"]
                            },
                            { "type": "string", "pattern": "^container:.*$" }
                          ]
                        },
                        "PortBindings": {
                          "type": "object",
                          "properties": {
                            "string": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "HostIp": { "type": "string" },
                                  "HostPort": { "type": "string" }
                                }
                              }
                            }
                          }
                        },
                        "RestartPolicy": {
                          "type": "object",
                          "properties": {
                            "Name": {
                              "type": "string",
                              "enum": ["always", "unless-stopped", "on-failure"]
                            },
                            "MaximumRetryCount": { "type": "integer" }
                          }
                        },
                        "AutoRemove": { "type": "boolean" },
                        "VolumeDriver": { "type": "string" },
                        "VolumesFrom": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "pattern": "^.+(:(ro|rw))?$"
                          }
                        },
                        "Mounts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Target": { "type": "string" },
                              "Source": { "type": "string" },
                              "Type": {
                                "type": "string",
                                "enum": ["bind", "volume", "tmpfs"]
                              },
                              "ReadOnly": { "type": "boolean" },
                              "Consistency": { "type": "string" },
                              "BindOptions": {
                                "type": "object",
                                "properties": {
                                  "Propagation": {
                                    "type": "string",
                                    "enum": [
                                      "private",
                                      "rprivate",
                                      "shared",
                                      "rshared",
                                      "slave",
                                      "rslave"
                                    ]
                                  }
                                }
                              },
                              "VolumeOptions": {
                                "type": "object",
                                "properties": {
                                  "NoCopy": { "type": "boolean" },
                                  "Labels": {
                                    "type": "object",
                                    "properties": {
                                      "string": { "type": "string" }
                                    }
                                  },
                                  "DriverConfig": {
                                    "type": "object",
                                    "properties": {
                                      "Name": { "type": "string" },
                                      "Options": {
                                        "type": "object",
                                        "properties": {
                                          "string": { "type": "string" }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "TmpfsOptions": {
                                "type": "object",
                                "properties": {
                                  "SizeBytes": { "type": "integer" },
                                  "Mode": { "type": "integer" }
                                }
                              }
                            }
                          }
                        },
                        "CapAdd": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "CapDrop": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "Dns": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "DnsOptions": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "DnsSearch": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "ExtraHosts": {
                          "type": "array",
                          "items": { "type": "string", "pattern": "^.+:.+$" }
                        },
                        "GroupAdd": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "IpcMode": { "type": "string" },
                        "Cgroup": { "type": "string" },
                        "Links": {
                          "type": "array",
                          "items": { "type": "string", "pattern": "^.+:.+$" }
                        },
                        "OomScoreAdj": { "type": "integer" },
                        "PidMode": {
                          "type": "string",
                          "pattern": "^.+(:.+)?$"
                        },
                        "Privileged": { "type": "boolean" },
                        "PublishAllPorts": { "type": "boolean" },
                        "ReadonlyRootfs": { "type": "boolean" },
                        "SecurityOpt": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "StorageOpt": {
                          "type": "object",
                          "properties": { "string": { "type": "string" } }
                        },
                        "Tmpfs": {
                          "type": "object",
                          "properties": { "string": { "type": "string" } }
                        },
                        "UTSMode": { "type": "string" },
                        "UsernsMode": { "type": "string" },
                        "ShmSize": { "type": "integer", "minimum": 0 },
                        "Sysctls": {
                          "type": "object",
                          "properties": { "string": { "type": "string" } }
                        },
                        "Runtime": { "type": "string" },
                        "ConsoleSize": {
                          "type": "array",
                          "x-constraint": { "length": 2 },
                          "items": { "type": "integer", "minimum": 0 }
                        },
                        "Isolation": {
                          "type": "string",
                          "enum": ["default", "process", "hyperv"]
                        }
                      }
                    },
                    "NetworkingConfig": {
                      "type": "object",
                      "properties": {
                        "EndpointsConfig": {
                          "type": "object",
                          "properties": {
                            "string": {
                              "type": "object",
                              "properties": {
                                "IPAMConfig": {
                                  "type": "object",
                                  "properties": {
                                    "IPv4Address": {
                                      "type": "string",
                                      "x-format": {
                                        "ip": {
                                          "cidr": "optional",
                                          "version": ["ipv4"]
                                        }
                                      }
                                    },
                                    "IPv6Address": {
                                      "type": "string",
                                      "x-format": {
                                        "ip": {
                                          "cidr": "optional",
                                          "version": ["ipv6"]
                                        }
                                      }
                                    },
                                    "LinkLocalIPs": {
                                      "type": "array",
                                      "items": { "type": "string" }
                                    }
                                  }
                                },
                                "Links": {
                                  "type": "array",
                                  "items": { "type": "string" }
                                },
                                "Aliases": {
                                  "type": "array",
                                  "items": { "type": "string" }
                                },
                                "NetworkId": { "type": "string" },
                                "EndpointId": { "type": "string" },
                                "Gateway": { "type": "string" },
                                "IPAddress": {
                                  "type": "string",
                                  "x-format": {
                                    "ip": {
                                      "cidr": "optional",
                                      "version": ["ipv4"]
                                    }
                                  }
                                },
                                "IPPrefixLen": { "type": "integer" },
                                "IPv6Gateway": { "type": "string" },
                                "GlobalIPv6Address": {
                                  "type": "string",
                                  "x-format": {
                                    "ip": {
                                      "cidr": "optional",
                                      "version": ["ipv6"]
                                    }
                                  }
                                },
                                "GlobalIPv6PrefixLen": { "type": "integer" },
                                "MacAddress": { "type": "string" }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "containerTwinDesiredOptions": { "type": "object" },
                "containerTwinReportedProperties": { "type": "object" },
                "environmentVariables": {
                  "type": "array",
                  "description": "An array of object containing environment variables",
                  "x-meta": { "swaggerType": "array" },
                  "x-constraint": { "unique": "key" },
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": { "type": "string" },
                      "value": { "type": "string" }
                    },
                    "required": ["key", "value"]
                  }
                },
                "startupOrder": { "type": "number" },
                "deployedAt": { "type": "string", "format": "date" }
              }
            },
            "description": "Container added to manifest"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found / Container(s) not found"
          }
        }
      },
      "put": {
        "summary": "Update a container inside the organisation deployment manifest",
        "operationId": "putOrganisationsOrganisationidDeploymentmanifestsContainersContainerid",
        "description": "usersAndOrganisations<br/><br/>updateOrganisations",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "organisationId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / uuid_v4",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "name": "containerId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Container version, null or empty not allowed",
            "name": "version",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Restart policy",
            "enum": ["always", "never", "on-failed", "on-unhealthy"],
            "name": "restartPolicy",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Desired status",
            "enum": ["stopped", "running"],
            "name": "desiredStatus",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "See latest Docker documentation",
            "x-meta": { "swaggerType": "object" },
            "name": "containerCreateOptions",
            "in": "formData",
            "x-type": "object",
            "x-properties": {
              "Hostname": { "type": "string" },
              "Domainname": { "type": "string" },
              "User": { "type": "string" },
              "AttachStdin": { "type": "boolean" },
              "AttachStdout": { "type": "boolean" },
              "AttachStderr": { "type": "boolean" },
              "ExposedPorts": {
                "type": "object",
                "x-properties": { "string": { "type": "object" } }
              },
              "Tty": { "type": "boolean" },
              "OpenStdin": { "type": "boolean" },
              "StdinOnce": { "type": "boolean" },
              "Env": {
                "type": "string",
                "x-alternatives": [
                  { "type": "string" },
                  {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "Env"
                  }
                ]
              },
              "Cmd": {
                "type": "string",
                "x-alternatives": [
                  { "type": "string" },
                  {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "Cmd"
                  }
                ]
              },
              "Healthcheck": {
                "type": "object",
                "x-properties": {
                  "Test": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "Test"
                  },
                  "Interval": {
                    "type": "string",
                    "enum": [0],
                    "x-alternatives": [
                      { "type": "string", "enum": [0] },
                      { "type": "integer", "minimum": 1000000 }
                    ]
                  },
                  "Timeout": {
                    "type": "string",
                    "enum": [0],
                    "x-alternatives": [
                      { "type": "string", "enum": [0] },
                      { "type": "integer", "minimum": 1000000 }
                    ]
                  },
                  "Retries": { "type": "integer", "minimum": 0 },
                  "StartPeriod": {
                    "type": "string",
                    "enum": [0],
                    "x-alternatives": [
                      { "type": "string", "enum": [0] },
                      { "type": "integer", "minimum": 1000000 }
                    ]
                  }
                }
              },
              "ArgsEscaped": { "type": "boolean" },
              "Image": { "type": "string" },
              "Volumes": {
                "type": "object",
                "x-properties": { "string": { "type": "object" } }
              },
              "WorkingDir": { "type": "string" },
              "Entrypoint": {
                "type": "array",
                "items": { "type": "string" },
                "collectionFormat": "multi",
                "x-alternatives": [
                  {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "Entrypoint"
                  },
                  { "type": "string" }
                ]
              },
              "NetworkDisabled": { "type": "boolean" },
              "MacAddress": {
                "type": "string",
                "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$"
              },
              "OnBuild": {
                "type": "array",
                "items": { "type": "string" },
                "collectionFormat": "multi",
                "name": "OnBuild"
              },
              "Labels": {
                "type": "object",
                "x-properties": { "string": { "type": "string" } }
              },
              "StopSignal": { "type": "string" },
              "StopTimeout": { "type": "integer", "minimum": 0 },
              "Shell": {
                "type": "array",
                "items": { "type": "string" },
                "collectionFormat": "multi",
                "name": "Shell"
              },
              "HostConfig": {
                "type": "object",
                "x-properties": {
                  "MaximumIOps": { "type": "integer" },
                  "MaximumIOBps": { "type": "integer" },
                  "CpuShares": { "type": "integer" },
                  "Memory": { "type": "integer" },
                  "CgroupParent": { "type": "string" },
                  "BlkioWeight": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 1000
                  },
                  "BlkioWeightDevice": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Path": { "type": "string" },
                        "Weight": { "type": "integer", "minimum": 0 }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "BlkioWeightDevice"
                  },
                  "BlkioDeviceReadBps": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Path": { "type": "string" },
                        "Rate": { "type": "integer", "minimum": 0 }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "BlkioDeviceReadBps"
                  },
                  "BlkioDeviceWriteBps": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Path": { "type": "string" },
                        "Rate": { "type": "integer", "minimum": 0 }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "BlkioDeviceWriteBps"
                  },
                  "BlkioDeviceReadIOps": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Path": { "type": "string" },
                        "Rate": { "type": "integer", "minimum": 0 }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "BlkioDeviceReadIOps"
                  },
                  "BlkioDeviceWriteIOps": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Path": { "type": "string" },
                        "Rate": { "type": "integer", "minimum": 0 }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "BlkioDeviceWriteIOps"
                  },
                  "CpuPeriod": { "type": "integer" },
                  "CpuQuota": { "type": "integer" },
                  "CpuRealtimePeriod": { "type": "integer" },
                  "CpuRealtimeRuntime": { "type": "integer" },
                  "CpusetCpus": { "type": "string" },
                  "CpusetMems": { "type": "string" },
                  "Devices": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "PathOnHost": { "type": "string" },
                        "PathInContainer": { "type": "string" },
                        "CgroupPermissions": { "type": "string" }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "Devices"
                  },
                  "DeviceCgroupRules": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "DeviceCgroupRules"
                  },
                  "DiskQuota": { "type": "integer" },
                  "KernelMemory": { "type": "integer" },
                  "MemoryReservation": { "type": "integer" },
                  "MemorySwap": { "type": "integer" },
                  "MemorySwappiness": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 100
                  },
                  "NanoCPUs": { "type": "integer" },
                  "OomKillDisable": { "type": "boolean" },
                  "PidsLimit": { "type": "integer" },
                  "Ulimits": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Name": { "type": "string" },
                        "Soft": { "type": "integer" },
                        "Hard": { "type": "integer" }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "Ulimits"
                  },
                  "CpuCount": { "type": "integer" },
                  "CpuPercent": { "type": "integer" },
                  "IOMaximumIOps": { "type": "integer" },
                  "IOMaximumBandwidth": { "type": "integer" },
                  "Binds": {
                    "type": "array",
                    "items": { "type": "string", "pattern": ".+:.+(:.+)?" },
                    "collectionFormat": "multi",
                    "name": "Binds"
                  },
                  "ContainerIDFile": { "type": "string" },
                  "LogConfig": {
                    "type": "object",
                    "x-properties": {
                      "Type": {
                        "type": "string",
                        "enum": [
                          "json-file",
                          "syslog",
                          "journald",
                          "gelf",
                          "fluentd",
                          "awslogs",
                          "splunk",
                          "etwlogs",
                          "none"
                        ]
                      },
                      "Config": {
                        "type": "object",
                        "x-properties": { "string": { "type": "string" } }
                      }
                    }
                  },
                  "NetworkMode": {
                    "type": "string",
                    "enum": ["bridge", "host", "none"],
                    "x-alternatives": [
                      { "type": "string", "enum": ["bridge", "host", "none"] },
                      { "type": "string", "pattern": "^container:.*$" }
                    ]
                  },
                  "PortBindings": {
                    "type": "object",
                    "x-properties": {
                      "string": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "x-properties": {
                            "HostIp": { "type": "string" },
                            "HostPort": { "type": "string" }
                          }
                        },
                        "collectionFormat": "multi",
                        "name": "string"
                      }
                    }
                  },
                  "RestartPolicy": {
                    "type": "object",
                    "x-properties": {
                      "Name": {
                        "type": "string",
                        "enum": ["always", "unless-stopped", "on-failure"]
                      },
                      "MaximumRetryCount": { "type": "integer" }
                    }
                  },
                  "AutoRemove": { "type": "boolean" },
                  "VolumeDriver": { "type": "string" },
                  "VolumesFrom": {
                    "type": "array",
                    "items": { "type": "string", "pattern": "^.+(:(ro|rw))?$" },
                    "collectionFormat": "multi",
                    "name": "VolumesFrom"
                  },
                  "Mounts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "x-properties": {
                        "Target": { "type": "string" },
                        "Source": { "type": "string" },
                        "Type": {
                          "type": "string",
                          "enum": ["bind", "volume", "tmpfs"]
                        },
                        "ReadOnly": { "type": "boolean" },
                        "Consistency": { "type": "string" },
                        "BindOptions": {
                          "type": "object",
                          "x-properties": {
                            "Propagation": {
                              "type": "string",
                              "enum": [
                                "private",
                                "rprivate",
                                "shared",
                                "rshared",
                                "slave",
                                "rslave"
                              ]
                            }
                          }
                        },
                        "VolumeOptions": {
                          "type": "object",
                          "x-properties": {
                            "NoCopy": { "type": "boolean" },
                            "Labels": {
                              "type": "object",
                              "x-properties": { "string": { "type": "string" } }
                            },
                            "DriverConfig": {
                              "type": "object",
                              "x-properties": {
                                "Name": { "type": "string" },
                                "Options": {
                                  "type": "object",
                                  "x-properties": {
                                    "string": { "type": "string" }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "TmpfsOptions": {
                          "type": "object",
                          "x-properties": {
                            "SizeBytes": { "type": "integer" },
                            "Mode": { "type": "integer" }
                          }
                        }
                      }
                    },
                    "collectionFormat": "multi",
                    "name": "Mounts"
                  },
                  "CapAdd": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "CapAdd"
                  },
                  "CapDrop": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "CapDrop"
                  },
                  "Dns": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "Dns"
                  },
                  "DnsOptions": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "DnsOptions"
                  },
                  "DnsSearch": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "DnsSearch"
                  },
                  "ExtraHosts": {
                    "type": "array",
                    "items": { "type": "string", "pattern": "^.+:.+$" },
                    "collectionFormat": "multi",
                    "name": "ExtraHosts"
                  },
                  "GroupAdd": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "GroupAdd"
                  },
                  "IpcMode": { "type": "string" },
                  "Cgroup": { "type": "string" },
                  "Links": {
                    "type": "array",
                    "items": { "type": "string", "pattern": "^.+:.+$" },
                    "collectionFormat": "multi",
                    "name": "Links"
                  },
                  "OomScoreAdj": { "type": "integer" },
                  "PidMode": { "type": "string", "pattern": "^.+(:.+)?$" },
                  "Privileged": { "type": "boolean" },
                  "PublishAllPorts": { "type": "boolean" },
                  "ReadonlyRootfs": { "type": "boolean" },
                  "SecurityOpt": {
                    "type": "array",
                    "items": { "type": "string" },
                    "collectionFormat": "multi",
                    "name": "SecurityOpt"
                  },
                  "StorageOpt": {
                    "type": "object",
                    "x-properties": { "string": { "type": "string" } }
                  },
                  "Tmpfs": {
                    "type": "object",
                    "x-properties": { "string": { "type": "string" } }
                  },
                  "UTSMode": { "type": "string" },
                  "UsernsMode": { "type": "string" },
                  "ShmSize": { "type": "integer", "minimum": 0 },
                  "Sysctls": {
                    "type": "object",
                    "x-properties": { "string": { "type": "string" } }
                  },
                  "Runtime": { "type": "string" },
                  "ConsoleSize": {
                    "type": "array",
                    "x-constraint": { "length": 2 },
                    "items": { "type": "integer", "minimum": 0 },
                    "collectionFormat": "multi",
                    "name": "ConsoleSize"
                  },
                  "Isolation": {
                    "type": "string",
                    "enum": ["default", "process", "hyperv"]
                  }
                }
              },
              "NetworkingConfig": {
                "type": "object",
                "x-properties": {
                  "EndpointsConfig": {
                    "type": "object",
                    "x-properties": {
                      "string": {
                        "type": "object",
                        "x-properties": {
                          "IPAMConfig": {
                            "type": "object",
                            "x-properties": {
                              "IPv4Address": {
                                "type": "string",
                                "x-format": {
                                  "ip": {
                                    "cidr": "optional",
                                    "version": ["ipv4"]
                                  }
                                }
                              },
                              "IPv6Address": {
                                "type": "string",
                                "x-format": {
                                  "ip": {
                                    "cidr": "optional",
                                    "version": ["ipv6"]
                                  }
                                }
                              },
                              "LinkLocalIPs": {
                                "type": "array",
                                "items": { "type": "string" },
                                "collectionFormat": "multi",
                                "name": "LinkLocalIPs"
                              }
                            }
                          },
                          "Links": {
                            "type": "array",
                            "items": { "type": "string" },
                            "collectionFormat": "multi",
                            "name": "Links"
                          },
                          "Aliases": {
                            "type": "array",
                            "items": { "type": "string" },
                            "collectionFormat": "multi",
                            "name": "Aliases"
                          },
                          "NetworkId": { "type": "string" },
                          "EndpointId": { "type": "string" },
                          "Gateway": { "type": "string" },
                          "IPAddress": {
                            "type": "string",
                            "x-format": {
                              "ip": { "cidr": "optional", "version": ["ipv4"] }
                            }
                          },
                          "IPPrefixLen": { "type": "integer" },
                          "IPv6Gateway": { "type": "string" },
                          "GlobalIPv6Address": {
                            "type": "string",
                            "x-format": {
                              "ip": { "cidr": "optional", "version": ["ipv6"] }
                            }
                          },
                          "GlobalIPv6PrefixLen": { "type": "integer" },
                          "MacAddress": { "type": "string" }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "string",
            "description": "JSON / See Azure documentation",
            "x-meta": { "swaggerType": "object" },
            "name": "containerTwinDesiredOptions",
            "in": "formData",
            "x-type": "object"
          },
          {
            "type": "array",
            "description": "An array of object containing environment variables",
            "x-meta": { "swaggerType": "array" },
            "x-constraint": { "unique": "key" },
            "items": {
              "type": "string",
              "x-type": "object",
              "x-properties": {
                "key": { "type": "string" },
                "value": { "type": "string" }
              }
            },
            "collectionFormat": "multi",
            "name": "environmentVariables",
            "in": "formData"
          },
          { "type": "number", "name": "startupOrder", "in": "formData" },
          {
            "type": "boolean",
            "default": false,
            "name": "useProxySettings",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Processor architecture",
            "enum": [
              "Linux-X86",
              "Linux-X64",
              "Linux-ARM32V7",
              "Linux-ARM64V8",
              "All"
            ],
            "name": "processorArchitecture",
            "in": "formData"
          }
        ],
        "consumes": ["multipart/form-data"],
        "tags": ["organisationManifests"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Random uuid v4.",
                  "default": "7adb258e-3ee7-4299-bcb9-513fab03f7d4",
                  "x-format": { "guid": { "version": "uuidv4" } }
                },
                "referenceId": {
                  "type": "string",
                  "description": "Random uuid v4.",
                  "default": "7adb258e-3ee7-4299-bcb9-513fab03f7d4",
                  "x-format": { "guid": { "version": "uuidv4" } }
                },
                "organisation": { "type": "string" },
                "displayName": { "type": "string" },
                "containerName": { "type": "string" },
                "image": { "type": "string" },
                "icon": { "type": "string" },
                "type": { "type": "string" },
                "version": { "type": "string" },
                "restartPolicy": {
                  "type": "string",
                  "enum": ["always", "never", "on-failed", "on-unhealthy"]
                },
                "desiredStatus": {
                  "type": "string",
                  "enum": ["stopped", "running"]
                },
                "status": { "type": "string" },
                "imageUri": { "type": "string" },
                "registryType": {
                  "type": "string",
                  "enum": ["public", "private"]
                },
                "credentials": {
                  "type": "object",
                  "properties": {
                    "address": { "type": "string" },
                    "username": { "type": "string" }
                  }
                },
                "processorArchitecture": {
                  "type": "string",
                  "description": "Processor architecture",
                  "enum": [
                    "Linux-X86",
                    "Linux-X64",
                    "Linux-ARM32V7",
                    "Linux-ARM64V8",
                    "All"
                  ]
                },
                "settingsPageId": {
                  "type": "string",
                  "enum": [
                    "gatewayTelemetry",
                    "networkTopology",
                    "opcuaPublisher",
                    "ainConnector",
                    "netFieldProxy",
                    "netFieldAppPlatformConnector"
                  ]
                },
                "shortDescription": { "type": "string", "maxLength": 60 },
                "description": { "type": "string", "maxLength": 3000 },
                "releaseNotes": {
                  "type": "array",
                  "items": { "type": "string" }
                },
                "category": {
                  "type": "string",
                  "enum": [
                    "Receiver",
                    "Connectivity",
                    "Data Acquisition",
                    "IT/Cloud Connectors",
                    "Services",
                    "Applications"
                  ]
                },
                "containerCreateOptions": {
                  "type": "object",
                  "description": "See latest Docker documentation",
                  "x-meta": { "swaggerType": "object" },
                  "properties": {
                    "Hostname": { "type": "string" },
                    "Domainname": { "type": "string" },
                    "User": { "type": "string" },
                    "AttachStdin": { "type": "boolean" },
                    "AttachStdout": { "type": "boolean" },
                    "AttachStderr": { "type": "boolean" },
                    "ExposedPorts": {
                      "type": "object",
                      "properties": { "string": { "type": "object" } }
                    },
                    "Tty": { "type": "boolean" },
                    "OpenStdin": { "type": "boolean" },
                    "StdinOnce": { "type": "boolean" },
                    "Env": {
                      "type": "string",
                      "x-alternatives": [
                        { "type": "string" },
                        { "type": "array", "items": { "type": "string" } }
                      ]
                    },
                    "Cmd": {
                      "type": "string",
                      "x-alternatives": [
                        { "type": "string" },
                        { "type": "array", "items": { "type": "string" } }
                      ]
                    },
                    "Healthcheck": {
                      "type": "object",
                      "properties": {
                        "Test": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "Interval": {
                          "type": "string",
                          "enum": [0],
                          "x-alternatives": [
                            { "type": "string", "enum": [0] },
                            { "type": "integer", "minimum": 1000000 }
                          ]
                        },
                        "Timeout": {
                          "type": "string",
                          "enum": [0],
                          "x-alternatives": [
                            { "type": "string", "enum": [0] },
                            { "type": "integer", "minimum": 1000000 }
                          ]
                        },
                        "Retries": { "type": "integer", "minimum": 0 },
                        "StartPeriod": {
                          "type": "string",
                          "enum": [0],
                          "x-alternatives": [
                            { "type": "string", "enum": [0] },
                            { "type": "integer", "minimum": 1000000 }
                          ]
                        }
                      }
                    },
                    "ArgsEscaped": { "type": "boolean" },
                    "Image": { "type": "string" },
                    "Volumes": {
                      "type": "object",
                      "properties": { "string": { "type": "object" } }
                    },
                    "WorkingDir": { "type": "string" },
                    "Entrypoint": {
                      "x-alternatives": [
                        { "type": "array", "items": { "type": "string" } },
                        { "type": "string" }
                      ],
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "NetworkDisabled": { "type": "boolean" },
                    "MacAddress": {
                      "type": "string",
                      "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$"
                    },
                    "OnBuild": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "Labels": {
                      "type": "object",
                      "properties": { "string": { "type": "string" } }
                    },
                    "StopSignal": { "type": "string" },
                    "StopTimeout": { "type": "integer", "minimum": 0 },
                    "Shell": { "type": "array", "items": { "type": "string" } },
                    "HostConfig": {
                      "type": "object",
                      "properties": {
                        "MaximumIOps": { "type": "integer" },
                        "MaximumIOBps": { "type": "integer" },
                        "CpuShares": { "type": "integer" },
                        "Memory": { "type": "integer" },
                        "CgroupParent": { "type": "string" },
                        "BlkioWeight": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 1000
                        },
                        "BlkioWeightDevice": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Weight": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceReadBps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceWriteBps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceReadIOps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "BlkioDeviceWriteIOps": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Path": { "type": "string" },
                              "Rate": { "type": "integer", "minimum": 0 }
                            }
                          }
                        },
                        "CpuPeriod": { "type": "integer" },
                        "CpuQuota": { "type": "integer" },
                        "CpuRealtimePeriod": { "type": "integer" },
                        "CpuRealtimeRuntime": { "type": "integer" },
                        "CpusetCpus": { "type": "string" },
                        "CpusetMems": { "type": "string" },
                        "Devices": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "PathOnHost": { "type": "string" },
                              "PathInContainer": { "type": "string" },
                              "CgroupPermissions": { "type": "string" }
                            }
                          }
                        },
                        "DeviceCgroupRules": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "DiskQuota": { "type": "integer" },
                        "KernelMemory": { "type": "integer" },
                        "MemoryReservation": { "type": "integer" },
                        "MemorySwap": { "type": "integer" },
                        "MemorySwappiness": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 100
                        },
                        "NanoCPUs": { "type": "integer" },
                        "OomKillDisable": { "type": "boolean" },
                        "PidsLimit": { "type": "integer" },
                        "Ulimits": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Name": { "type": "string" },
                              "Soft": { "type": "integer" },
                              "Hard": { "type": "integer" }
                            }
                          }
                        },
                        "CpuCount": { "type": "integer" },
                        "CpuPercent": { "type": "integer" },
                        "IOMaximumIOps": { "type": "integer" },
                        "IOMaximumBandwidth": { "type": "integer" },
                        "Binds": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "pattern": ".+:.+(:.+)?"
                          }
                        },
                        "ContainerIDFile": { "type": "string" },
                        "LogConfig": {
                          "type": "object",
                          "properties": {
                            "Type": {
                              "type": "string",
                              "enum": [
                                "json-file",
                                "syslog",
                                "journald",
                                "gelf",
                                "fluentd",
                                "awslogs",
                                "splunk",
                                "etwlogs",
                                "none"
                              ]
                            },
                            "Config": {
                              "type": "object",
                              "properties": { "string": { "type": "string" } }
                            }
                          }
                        },
                        "NetworkMode": {
                          "type": "string",
                          "enum": ["bridge", "host", "none"],
                          "x-alternatives": [
                            {
                              "type": "string",
                              "enum": ["bridge", "host", "none"]
                            },
                            { "type": "string", "pattern": "^container:.*$" }
                          ]
                        },
                        "PortBindings": {
                          "type": "object",
                          "properties": {
                            "string": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "HostIp": { "type": "string" },
                                  "HostPort": { "type": "string" }
                                }
                              }
                            }
                          }
                        },
                        "RestartPolicy": {
                          "type": "object",
                          "properties": {
                            "Name": {
                              "type": "string",
                              "enum": ["always", "unless-stopped", "on-failure"]
                            },
                            "MaximumRetryCount": { "type": "integer" }
                          }
                        },
                        "AutoRemove": { "type": "boolean" },
                        "VolumeDriver": { "type": "string" },
                        "VolumesFrom": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "pattern": "^.+(:(ro|rw))?$"
                          }
                        },
                        "Mounts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "Target": { "type": "string" },
                              "Source": { "type": "string" },
                              "Type": {
                                "type": "string",
                                "enum": ["bind", "volume", "tmpfs"]
                              },
                              "ReadOnly": { "type": "boolean" },
                              "Consistency": { "type": "string" },
                              "BindOptions": {
                                "type": "object",
                                "properties": {
                                  "Propagation": {
                                    "type": "string",
                                    "enum": [
                                      "private",
                                      "rprivate",
                                      "shared",
                                      "rshared",
                                      "slave",
                                      "rslave"
                                    ]
                                  }
                                }
                              },
                              "VolumeOptions": {
                                "type": "object",
                                "properties": {
                                  "NoCopy": { "type": "boolean" },
                                  "Labels": {
                                    "type": "object",
                                    "properties": {
                                      "string": { "type": "string" }
                                    }
                                  },
                                  "DriverConfig": {
                                    "type": "object",
                                    "properties": {
                                      "Name": { "type": "string" },
                                      "Options": {
                                        "type": "object",
                                        "properties": {
                                          "string": { "type": "string" }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "TmpfsOptions": {
                                "type": "object",
                                "properties": {
                                  "SizeBytes": { "type": "integer" },
                                  "Mode": { "type": "integer" }
                                }
                              }
                            }
                          }
                        },
                        "CapAdd": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "CapDrop": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "Dns": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "DnsOptions": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "DnsSearch": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "ExtraHosts": {
                          "type": "array",
                          "items": { "type": "string", "pattern": "^.+:.+$" }
                        },
                        "GroupAdd": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "IpcMode": { "type": "string" },
                        "Cgroup": { "type": "string" },
                        "Links": {
                          "type": "array",
                          "items": { "type": "string", "pattern": "^.+:.+$" }
                        },
                        "OomScoreAdj": { "type": "integer" },
                        "PidMode": {
                          "type": "string",
                          "pattern": "^.+(:.+)?$"
                        },
                        "Privileged": { "type": "boolean" },
                        "PublishAllPorts": { "type": "boolean" },
                        "ReadonlyRootfs": { "type": "boolean" },
                        "SecurityOpt": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "StorageOpt": {
                          "type": "object",
                          "properties": { "string": { "type": "string" } }
                        },
                        "Tmpfs": {
                          "type": "object",
                          "properties": { "string": { "type": "string" } }
                        },
                        "UTSMode": { "type": "string" },
                        "UsernsMode": { "type": "string" },
                        "ShmSize": { "type": "integer", "minimum": 0 },
                        "Sysctls": {
                          "type": "object",
                          "properties": { "string": { "type": "string" } }
                        },
                        "Runtime": { "type": "string" },
                        "ConsoleSize": {
                          "type": "array",
                          "x-constraint": { "length": 2 },
                          "items": { "type": "integer", "minimum": 0 }
                        },
                        "Isolation": {
                          "type": "string",
                          "enum": ["default", "process", "hyperv"]
                        }
                      }
                    },
                    "NetworkingConfig": {
                      "type": "object",
                      "properties": {
                        "EndpointsConfig": {
                          "type": "object",
                          "properties": {
                            "string": {
                              "type": "object",
                              "properties": {
                                "IPAMConfig": {
                                  "type": "object",
                                  "properties": {
                                    "IPv4Address": {
                                      "type": "string",
                                      "x-format": {
                                        "ip": {
                                          "cidr": "optional",
                                          "version": ["ipv4"]
                                        }
                                      }
                                    },
                                    "IPv6Address": {
                                      "type": "string",
                                      "x-format": {
                                        "ip": {
                                          "cidr": "optional",
                                          "version": ["ipv6"]
                                        }
                                      }
                                    },
                                    "LinkLocalIPs": {
                                      "type": "array",
                                      "items": { "type": "string" }
                                    }
                                  }
                                },
                                "Links": {
                                  "type": "array",
                                  "items": { "type": "string" }
                                },
                                "Aliases": {
                                  "type": "array",
                                  "items": { "type": "string" }
                                },
                                "NetworkId": { "type": "string" },
                                "EndpointId": { "type": "string" },
                                "Gateway": { "type": "string" },
                                "IPAddress": {
                                  "type": "string",
                                  "x-format": {
                                    "ip": {
                                      "cidr": "optional",
                                      "version": ["ipv4"]
                                    }
                                  }
                                },
                                "IPPrefixLen": { "type": "integer" },
                                "IPv6Gateway": { "type": "string" },
                                "GlobalIPv6Address": {
                                  "type": "string",
                                  "x-format": {
                                    "ip": {
                                      "cidr": "optional",
                                      "version": ["ipv6"]
                                    }
                                  }
                                },
                                "GlobalIPv6PrefixLen": { "type": "integer" },
                                "MacAddress": { "type": "string" }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "containerTwinDesiredOptions": { "type": "object" },
                "containerTwinReportedProperties": { "type": "object" },
                "environmentVariables": {
                  "type": "array",
                  "description": "An array of object containing environment variables",
                  "x-meta": { "swaggerType": "array" },
                  "x-constraint": { "unique": "key" },
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": { "type": "string" },
                      "value": { "type": "string" }
                    },
                    "required": ["key", "value"]
                  }
                },
                "startupOrder": { "type": "number" },
                "deployedAt": { "type": "string", "format": "date" }
              }
            },
            "description": "Manifest container modified"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found / Container(s) not found"
          }
        }
      },
      "delete": {
        "summary": "Delete container from deployment manifest",
        "operationId": "deleteOrganisationsOrganisationidDeploymentmanifestsContainersContainerid",
        "description": "usersAndOrganisations<br/><br/>updateOrganisations",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "organisationId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / uuid_v4",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "name": "containerId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["organisationManifests"],
        "security": [{ "jwt": [] }],
        "responses": {
          "204": { "description": "Container deleted" },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found / Container(s) not found"
          }
        }
      }
    },
    "/organisations/{organisationId}/deployment-manifests/routes/{routeId}": {
      "get": {
        "summary": "Get deployment manifest route",
        "operationId": "getOrganisationsOrganisationidDeploymentmanifestsRoutesRouteid",
        "description": "usersAndOrganisations<br/><br/>viewOrganisations",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "organisationId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "routeId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["organisationManifests"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "name": { "type": "string", "pattern": "^[a-zA-Z_0-9]+$" },
                "source": { "type": "string" },
                "condition": { "type": "string" },
                "target": { "type": "string" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:08.312Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:08.312Z"
                }
              },
              "required": ["id", "name", "source", "target"]
            },
            "description": "Route retrieved"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found / Route(s) not found"
          }
        }
      },
      "put": {
        "summary": "Update a route inside the organisation deployment manifest",
        "operationId": "putOrganisationsOrganisationidDeploymentmanifestsRoutesRouteid",
        "description": "usersAndOrganisations<br/><br/>updateOrganisations",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "organisationId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "routeId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "pattern": "^[a-zA-Z_0-9]+$" },
                "source": { "type": "string" },
                "condition": { "type": "string" },
                "target": { "type": "string" }
              }
            }
          }
        ],
        "tags": ["organisationManifests"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "name": { "type": "string", "pattern": "^[a-zA-Z_0-9]+$" },
                "source": { "type": "string" },
                "condition": { "type": "string" },
                "target": { "type": "string" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:08.312Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:08.312Z"
                }
              },
              "required": ["id", "name", "source", "target"]
            },
            "description": "Manifest route modified"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found / Route(s) not found"
          }
        }
      },
      "delete": {
        "summary": "Delete route from deployment manifest",
        "operationId": "deleteOrganisationsOrganisationidDeploymentmanifestsRoutesRouteid",
        "description": "usersAndOrganisations<br/><br/>updateOrganisations",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "organisationId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "routeId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["organisationManifests"],
        "security": [{ "jwt": [] }],
        "responses": {
          "204": { "description": "Route deleted" },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found / Container(s) not found"
          }
        }
      }
    },
    "/dashboards/{dashboardId}/panels/{panelId}/series/{seriesId}": {
      "get": {
        "summary": "Get dashboard by id",
        "operationId": "getDashboardsDashboardidPanelsPanelidSeriesSeriesid",
        "description": "dashboards<br/><br/>viewDashboards",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "dashboardId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "panelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "seriesId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["dashboards"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "deviceId": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "deviceName": { "type": "string" },
                "topic": { "type": "string" },
                "columns": { "type": "string" },
                "rows": { "type": "string" },
                "visualisation": { "type": "object" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:08.859Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:08.859Z"
                }
              },
              "required": [
                "id",
                "deviceId",
                "deviceName",
                "topic",
                "columns",
                "rows"
              ]
            },
            "description": "Return series"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Dashboard(s) not found / DashboardPanel(s) not found / DashboardSeries(s) not found"
          }
        }
      },
      "put": {
        "summary": "Update dashboard series",
        "operationId": "putDashboardsDashboardidPanelsPanelidSeriesSeriesid",
        "description": "dashboards<br/><br/>updateDashboards",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "dashboardId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "panelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "seriesId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "deviceId": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "topic": { "type": "string" },
                "columns": { "type": "string" },
                "rows": { "type": "string" },
                "visualisation": { "type": "object" }
              }
            }
          }
        ],
        "tags": ["dashboards"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "deviceId": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "deviceName": { "type": "string" },
                "topic": { "type": "string" },
                "columns": { "type": "string" },
                "rows": { "type": "string" },
                "visualisation": { "type": "object" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:08.859Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:08.859Z"
                }
              },
              "required": [
                "id",
                "deviceId",
                "deviceName",
                "topic",
                "columns",
                "rows"
              ]
            },
            "description": "Dashboard Series modified"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Dashboard(s) not found / DashboardPanel(s) not found / DashboardSeries(s) not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a dashboard series by id",
        "operationId": "deleteDashboardsDashboardidPanelsPanelidSeriesSeriesid",
        "description": "dashboards<br/><br/>deleteDashboards",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "dashboardId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "panelId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "seriesId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["dashboards"],
        "security": [{ "jwt": [] }],
        "responses": {
          "204": { "description": "Dashboard series deleted" },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Dashboard(s) not found / DashboardPanel(s) not found / DashboardSeries(s) not found"
          }
        }
      }
    },
    "/auth": {
      "post": {
        "summary": "Generate authorization/refresh token.",
        "operationId": "postAuth",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "description": "UserCredentialsSchema",
              "properties": {
                "grantType": {
                  "type": "string",
                  "enum": ["refreshToken", "password"]
                },
                "refreshToken": { "type": "string" },
                "email": { "type": "string" },
                "password": { "type": "string" },
                "stayLoggedIn": {
                  "type": "boolean",
                  "description": "Create a not expiring token",
                  "default": false
                }
              },
              "required": ["grantType", "refreshToken", "email", "password"]
            }
          }
        ],
        "tags": ["auth"],
        "security": [{ "oauth": [] }],
        "responses": {
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "accessToken": {
                  "type": "string",
                  "description": "JwtTokenSchema",
                  "pattern": "[A-Za-z0-9\\-._~+\\/]+=*"
                },
                "refreshToken": {
                  "type": "string",
                  "description": "JwtTokenSchema",
                  "pattern": "[A-Za-z0-9\\-._~+\\/]+=*"
                }
              },
              "required": ["accessToken", "refreshToken"]
            },
            "description": "Token created"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Incorrect email or password"
          }
        }
      }
    },
    "/notifications": {
      "post": {
        "summary": "Notification",
        "operationId": "postNotifications",
        "parameters": [
          {
            "type": "string",
            "description": "token",
            "name": "token",
            "in": "query",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": { "type": "string" },
                  "topic": { "type": "string" },
                  "subject": { "type": "string" },
                  "data": {
                    "type": "object",
                    "properties": {
                      "hubName": { "type": "string" },
                      "deviceId": { "type": "string" }
                    }
                  },
                  "eventType": { "type": "string" },
                  "eventTime": { "type": "string" },
                  "metadataVersion": { "type": "string" },
                  "dataVersion": { "type": "string" }
                },
                "required": [
                  "id",
                  "topic",
                  "subject",
                  "eventType",
                  "eventTime",
                  "metadataVersion",
                  "dataVersion"
                ]
              }
            }
          }
        ],
        "tags": ["notifications"],
        "responses": {
          "200": {
            "schema": { "type": "string" },
            "description": "Return validation"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Forbidden"
          }
        }
      }
    },
    "/auth/revoke": {
      "post": {
        "summary": "Revoke token",
        "operationId": "postAuthRevoke",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          }
        ],
        "tags": ["auth"],
        "security": [{ "oauth": [] }],
        "responses": {
          "204": { "description": "Token revoked" },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid token"
          }
        }
      }
    },
    "/devices/onboard": {
      "post": {
        "summary": "Onboard a device to sensor edge user organisation",
        "operationId": "postDevicesOnboard",
        "description": "devices<br/><br/>onboardedDevices",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "equipmentIds": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Equipment Id of the device"
                  }
                }
              }
            }
          }
        ],
        "tags": ["devices"],
        "responses": {
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "equipmentId": { "type": "string" },
                      "status": { "type": "number" }
                    }
                  }
                }
              }
            },
            "description": "Device on boarded"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device(s) not found"
          }
        }
      }
    },
    "/groups/{parentGroupId}": {
      "post": {
        "summary": "Create a group for Devices/Containers",
        "operationId": "postGroupsParentgroupid",
        "description": "groups<br/><br/>createGroups",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "parentGroupId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "description": "Group Name" },
                "groupType": {
                  "type": "string",
                  "description": "Group type devices",
                  "default": "devices",
                  "enum": ["devices", "containers"]
                }
              },
              "required": ["name", "groupType"]
            }
          }
        ],
        "tags": ["groups"],
        "security": [{ "jwt": [] }],
        "responses": {
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string", "description": "Group Name" },
                "groupType": {
                  "type": "string",
                  "description": "Group type devices",
                  "default": "devices",
                  "enum": ["devices", "containers"]
                },
                "id": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer",
                  "minimum": 1
                },
                "organisationId": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer",
                  "minimum": 1
                },
                "parentId": { "type": "number" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:09.437Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:09.437Z"
                }
              },
              "required": [
                "name",
                "groupType",
                "id",
                "organisationId",
                "parentId",
                "createdAt",
                "updatedAt"
              ]
            },
            "description": "Group created"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Group(s) not found"
          }
        }
      }
    },
    "/keys/sensoredge": {
      "post": {
        "summary": "Create a key for SensorEdge tenant",
        "operationId": "postKeysSensoredge",
        "description": "keys<br/><br/>createSensorEdgeKeys",
        "parameters": [
          {
            "type": "string",
            "description": "Access token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "organisationId": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer",
                  "minimum": 1
                },
                "name": {
                  "type": "string",
                  "description": "Key name, null or empty not allowed"
                }
              },
              "required": ["organisationId", "name"]
            }
          }
        ],
        "tags": ["keys"],
        "security": [{ "jwt": [] }],
        "responses": {
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "owner": {
                  "type": "object",
                  "properties": {
                    "organisation": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The id property defines the unique id of type integer",
                          "minimum": 1
                        },
                        "name": { "type": "string" }
                      },
                      "required": ["id", "name"]
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The id property defines the unique id of type integer",
                          "minimum": 1
                        },
                        "fullName": { "type": "string" }
                      },
                      "required": ["id", "fullName"]
                    }
                  }
                },
                "name": { "type": "string" },
                "type": {
                  "type": "string",
                  "default": "server-side",
                  "enum": ["server-side", "client-side"]
                },
                "key": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                },
                "resources": {
                  "type": "array",
                  "description": "Resources and permissions",
                  "minItems": 1,
                  "items": {
                    "type": "object",
                    "properties": {
                      "resource": {
                        "type": "string",
                        "description": "Resource name",
                        "enum": [
                          "roles",
                          "usersAndOrganisations",
                          "devices",
                          "containers",
                          "tenants",
                          "edgeos",
                          "webhooks",
                          "groups",
                          "thirdpartyAppsPts",
                          "dashboards",
                          "keys"
                        ]
                      },
                      "permissions": {
                        "type": "array",
                        "description": "List of resource permissions, min(1), null or empty values are not allowed",
                        "minItems": 1,
                        "items": {
                          "type": "string",
                          "default": "permission.securityLevel"
                        }
                      }
                    },
                    "required": ["resource"]
                  }
                },
                "requestMonthlyLimit": {
                  "type": "number",
                  "minimum": 1,
                  "maximum": 10000
                },
                "totalRequestCount": { "type": "number" },
                "requestCount": { "type": "number" },
                "expiresAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Expiration Date",
                  "default": "2021-05-21T06:02:07.281Z"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.281Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.281Z"
                },
                "requests": {
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "type": "object",
                    "properties": {
                      "resource": { "type": "string", "default": "devices" },
                      "permission": {
                        "type": "string",
                        "default": "onboardedDevices"
                      },
                      "sendAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "sendAt",
                        "default": "2021-05-21T06:02:07.281Z"
                      }
                    },
                    "required": ["resource", "permission"]
                  }
                }
              },
              "required": [
                "id",
                "name",
                "type",
                "key",
                "resources",
                "requestCount",
                "requests"
              ]
            },
            "description": "Key Created"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found"
          }
        }
      }
    },
    "/permissions/containers": {
      "post": {
        "summary": "Get permissions against list of containerIds",
        "operationId": "postPermissionsContainers",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "containerIds": {
                  "type": "array",
                  "minItems": 1,
                  "items": { "type": "string" }
                }
              }
            }
          }
        ],
        "tags": ["permissions"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "containerPermissions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "containerId": { "type": "string" },
                      "permissions": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "type": "string",
                          "default": "containers.createContainers"
                        }
                      }
                    },
                    "required": ["containerId"]
                  }
                }
              }
            },
            "description": "Permissions retrieved"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          }
        }
      }
    },
    "/permissions/devices": {
      "post": {
        "summary": "Get permissions against list of deviceIdIds",
        "operationId": "postPermissionsDevices",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "deviceIds": {
                  "type": "array",
                  "minItems": 0,
                  "items": {
                    "type": "string",
                    "description": "The id property defines the unique id / objectId",
                    "pattern": "^[0-9a-fA-F]{24}$"
                  }
                }
              }
            }
          }
        ],
        "tags": ["permissions"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "devicePermissions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "deviceId": { "type": "string" },
                      "permissions": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "type": "string",
                          "default": "devices.createDevices"
                        }
                      }
                    },
                    "required": ["deviceId"]
                  }
                }
              }
            },
            "description": "Permissions retrieved"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          }
        }
      }
    },
    "/permissions/edgeos": {
      "post": {
        "summary": "Get permissions against list of edgeOSIds",
        "operationId": "postPermissionsEdgeos",
        "parameters": [
          {
            "type": "string",
            "description": "Access token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "edgeosIds": {
                  "type": "array",
                  "minItems": 0,
                  "items": {
                    "type": "string",
                    "description": "The id property defines the unique id / objectId",
                    "pattern": "^[0-9a-fA-F]{24}$"
                  }
                }
              }
            }
          }
        ],
        "tags": ["permissions"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "edgeosPermissions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "edgeosId": { "type": "string" },
                      "permissions": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "type": "string",
                          "default": "edgeos.createEdgeos"
                        }
                      }
                    },
                    "required": ["edgeosId"]
                  }
                }
              }
            },
            "description": "Permissions retrieved"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          }
        }
      }
    },
    "/permissions/groups": {
      "post": {
        "summary": "Get permissions against list of groupIds",
        "operationId": "postPermissionsGroups",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "groupIds": {
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "type": "integer",
                    "description": "The id property defines the unique id of type integer",
                    "minimum": 1
                  }
                }
              }
            }
          }
        ],
        "tags": ["permissions"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "groupPermissions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "groupId": { "type": "number" },
                      "permissions": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "type": "string",
                          "default": "groups.createGroup"
                        }
                      }
                    },
                    "required": ["groupId"]
                  }
                }
              }
            },
            "description": "Permissions retrieved"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          }
        }
      }
    },
    "/permissions/keys": {
      "post": {
        "summary": "Get permissions against list of keyIds",
        "operationId": "postPermissionsKeys",
        "parameters": [
          {
            "type": "string",
            "description": "Access token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "keyIds": {
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "type": "string",
                    "description": "The id property defines the unique id / objectId",
                    "pattern": "^[0-9a-fA-F]{24}$"
                  }
                }
              }
            }
          }
        ],
        "tags": ["permissions"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "keyPermissions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "keyId": { "type": "string" },
                      "permissions": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "type": "string",
                          "default": "keys.createKey"
                        }
                      }
                    },
                    "required": ["keyId"]
                  }
                }
              }
            },
            "description": "Permissions retrieved"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          }
        }
      }
    },
    "/permissions/organisations": {
      "post": {
        "summary": "Get permissions against list of organisationIds",
        "operationId": "postPermissionsOrganisations",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "organisationIds": {
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "type": "integer",
                    "description": "The id property defines the unique id of type integer",
                    "minimum": 1
                  }
                }
              }
            }
          }
        ],
        "tags": ["permissions"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "organisationPermissions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "organisationId": {
                        "type": "integer",
                        "description": "The id property defines the unique id of type integer",
                        "minimum": 1
                      },
                      "permissions": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "type": "string",
                          "default": "usersAndOrganisations.createOrganisations"
                        }
                      }
                    },
                    "required": ["organisationId"]
                  }
                }
              }
            },
            "description": "Permissions retrieved"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          }
        }
      }
    },
    "/permissions/roles": {
      "post": {
        "summary": "Get permissions against list of roles",
        "operationId": "postPermissionsRoles",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "roles": {
                  "type": "object",
                  "properties": {
                    "1": {
                      "type": "array",
                      "minItems": 1,
                      "items": { "type": "string" }
                    }
                  }
                }
              }
            }
          }
        ],
        "tags": ["permissions"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "rolePermissions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "organisationId": {
                        "type": "integer",
                        "description": "The id property defines the unique id of type integer",
                        "minimum": 1
                      },
                      "roleName": { "type": "string" },
                      "permissions": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "type": "string",
                          "default": "roles.createRoles"
                        }
                      }
                    },
                    "required": ["organisationId", "roleName"]
                  }
                }
              }
            },
            "description": "Permissions retrieved"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found / Role(s) not found"
          }
        }
      }
    },
    "/permissions/tenants": {
      "post": {
        "summary": "Get permissions against list of tenantIds",
        "operationId": "postPermissionsTenants",
        "parameters": [
          {
            "type": "string",
            "description": "Access token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "tenantIds": {
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "type": "integer",
                    "description": "The id property defines the unique id of type integer",
                    "minimum": 1
                  }
                }
              }
            }
          }
        ],
        "tags": ["permissions"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "tenantPermissions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tenantId": { "type": "number" },
                      "permissions": {
                        "type": "array",
                        "items": { "type": "string" }
                      }
                    },
                    "required": ["tenantId"]
                  }
                }
              }
            },
            "description": "Permissions retrieved"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          }
        }
      }
    },
    "/permissions/users": {
      "post": {
        "summary": "Get permissions against list of userIds",
        "operationId": "postPermissionsUsers",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "userIds": {
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "type": "integer",
                    "description": "The id property defines the unique id of type integer",
                    "minimum": 1
                  }
                }
              }
            }
          }
        ],
        "tags": ["permissions"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "userPermissions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userId": { "type": "number" },
                      "permissions": {
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "type": "string",
                          "default": "usersAndOrganisations.createUsers"
                        }
                      }
                    },
                    "required": ["userId"]
                  }
                }
              }
            },
            "description": "Permissions retrieved"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "User not found"
          }
        }
      }
    },
    "/permissions/webhooks": {
      "post": {
        "summary": "Get permissions against list of webhookIds",
        "operationId": "postPermissionsWebhooks",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "webhookIds": {
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "type": "string",
                    "description": "The id property defines the unique id / objectId",
                    "pattern": "^[0-9a-fA-F]{24}$"
                  }
                }
              }
            }
          }
        ],
        "tags": ["permissions"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "webhookPermissions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "webhookId": { "type": "string" },
                      "permissions": {
                        "type": "array",
                        "items": { "type": "string" }
                      }
                    },
                    "required": ["webhookId"]
                  }
                }
              }
            },
            "description": "Permissions retrieved"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          }
        }
      }
    },
    "/users/register": {
      "post": {
        "summary": "Register a user",
        "operationId": "postUsersRegister",
        "description": "usersAndOrganisations<br/><br/>createUsers",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "organisationId": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer",
                  "minimum": 1
                },
                "password": {
                  "type": "string",
                  "description": "Password",
                  "x-convert": { "trim": true }
                },
                "firstName": { "type": "string", "description": "First name" },
                "lastName": { "type": "string", "description": "Last name" },
                "email": {
                  "type": "string",
                  "description": "valid email / null and empty values are not allowed",
                  "x-format": { "email": true }
                },
                "jobTitle": { "type": "string", "description": "Job title" },
                "department": { "type": "string", "description": "Department" },
                "mobilePhone": {
                  "type": "string",
                  "description": "Mobile phone"
                },
                "telephone": { "type": "string", "description": "Telephone" },
                "street": { "type": "string", "description": "Street" },
                "houseNumber": {
                  "type": "string",
                  "description": "House number"
                },
                "addressSupplement": {
                  "type": "string",
                  "description": "Address supplement"
                },
                "zipCode": { "type": "string", "description": "Zip code" },
                "state": { "type": "string", "description": "State" },
                "city": { "type": "string", "description": "City" },
                "country": { "type": "string", "description": "Country" }
              },
              "required": [
                "organisationId",
                "password",
                "firstName",
                "lastName",
                "email",
                "street",
                "houseNumber",
                "zipCode",
                "city",
                "country"
              ]
            }
          }
        ],
        "tags": ["users"],
        "responses": {
          "204": { "description": "User Registered" },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found"
          }
        }
      }
    },
    "/webhooks/test": {
      "post": {
        "summary": "Trigger a single webhook for a dummy device with testing purposes.",
        "operationId": "postWebhooksTest",
        "description": "webhooks<br/><br/>viewWebhooks",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "organisationId": {
                  "type": "integer",
                  "description": "The id property defines the unique id of type integer",
                  "minimum": 1
                },
                "url": {
                  "type": "string",
                  "description": "URL",
                  "pattern": "^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$"
                },
                "description": {
                  "type": "string",
                  "description": "Description"
                },
                "requestType": {
                  "type": "string",
                  "description": "Request type",
                  "enum": [
                    "GET",
                    "POST",
                    "PUT",
                    "DELETE",
                    "HEAD",
                    "CONNECT",
                    "OPTIONS",
                    "TRACE"
                  ]
                },
                "actionType": {
                  "type": "string",
                  "description": "Action type",
                  "enum": ["onboarded", "offboarded"]
                },
                "headers": {
                  "type": "array",
                  "description": "Headers",
                  "x-constraint": { "unique": "name" },
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Header name"
                      },
                      "value": {
                        "type": "string",
                        "description": "Header value"
                      }
                    },
                    "required": ["name", "value"]
                  }
                },
                "queries": {
                  "type": "array",
                  "description": "Queries",
                  "x-constraint": { "unique": "name" },
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": { "type": "string", "description": "Query name" },
                      "value": {
                        "type": "string",
                        "description": "Query value"
                      }
                    },
                    "required": ["name", "value"]
                  }
                },
                "payload": { "type": "string", "description": "Payload object" }
              },
              "required": ["organisationId", "url", "requestType", "actionType"]
            }
          }
        ],
        "tags": ["webhooks"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "url": { "type": "string" },
                "successful": { "type": "boolean" },
                "statusCode": { "type": "number" },
                "statusMessage": { "type": "string" },
                "errorMessage": { "type": "string" }
              },
              "required": ["url"]
            },
            "description": "Webhook triggered"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Organisation(s) not found"
          }
        }
      }
    },
    "/devices/onboard/sas": {
      "post": {
        "summary": "Onboard a device",
        "operationId": "postDevicesOnboardSas",
        "description": "devices<br/><br/>onboardedDevices",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "activationCode": {
                  "type": "string",
                  "description": "Activation code"
                },
                "serialNumber": {
                  "type": "string",
                  "description": "Serial number"
                },
                "firmwareVersion": {
                  "type": "string",
                  "description": "Firmware version"
                },
                "modelName": { "type": "string", "description": "Model name" },
                "containerJWT": {
                  "type": "string",
                  "pattern": "^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+/=]*$"
                },
                "useManifest": { "type": "boolean", "default": true }
              },
              "required": ["activationCode", "serialNumber", "firmwareVersion"]
            }
          }
        ],
        "tags": ["devices"],
        "responses": {
          "201": {
            "schema": {
              "type": "object",
              "properties": {
                "deviceId": { "type": "string" },
                "connectionString": { "type": "string" }
              },
              "required": ["deviceId", "connectionString"]
            },
            "description": "Device on boarded"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device(s) not found"
          }
        }
      }
    },
    "/devices/{deviceId}/methods": {
      "post": {
        "summary": "Call method on a device container",
        "operationId": "postDevicesDeviceidMethods",
        "description": "devices<br/><br/>invokeMethod",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "containerName": { "type": "string" },
                "methodName": { "type": "string" },
                "methodPayload": { "type": "object" }
              },
              "required": ["containerName", "methodName"]
            }
          }
        ],
        "tags": ["devices"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": { "type": "object" },
            "description": "Device modified"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device(s) not found / Organisation(s) not found"
          }
        }
      }
    },
    "/users/sensoredge/register": {
      "post": {
        "summary": "Initiate the Sensor Edge sign up process",
        "operationId": "postUsersSensoredgeRegister",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "valid email / null and empty values are not allowed",
                  "x-format": { "email": true }
                },
                "password": {
                  "type": "string",
                  "description": "Password",
                  "x-convert": { "trim": true }
                }
              },
              "required": ["email", "password"]
            }
          }
        ],
        "tags": ["sensorEDGE"],
        "security": [{ "jwt": [] }],
        "responses": {
          "204": { "description": "Sensor Edge User Registered" },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          }
        }
      }
    },
    "/devices/offboard": {
      "put": {
        "summary": "Offboards device from IoT Hub",
        "operationId": "putDevicesOffboard",
        "description": "devices<br/><br/>offboardedDevices",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "deviceId": {
                  "type": "string",
                  "description": "The id property defines the unique id / objectId",
                  "pattern": "^[0-9a-fA-F]{24}$"
                }
              },
              "required": ["deviceId"]
            }
          }
        ],
        "tags": ["devices"],
        "responses": {
          "204": { "description": "Device deleted from IoT Hub" },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device(s) not found"
          }
        }
      }
    },
    "/users/password": {
      "put": {
        "summary": "Sets new password after /users/password/reset",
        "operationId": "putUsersPassword",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "valid email / null and empty values are not allowed",
                  "x-format": { "email": true }
                },
                "password": { "type": "string", "x-convert": { "trim": true } },
                "code": { "type": "string" }
              },
              "required": ["email", "password", "code"]
            }
          }
        ],
        "tags": ["users"],
        "security": [{ "jwt": [] }],
        "responses": {
          "204": { "description": "Reset-password-link generated" },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "User not found / Invalid code"
          }
        }
      }
    },
    "/containers/{containerId}/share": {
      "put": {
        "summary": "Share container with other organisations",
        "operationId": "putContainersContaineridShare",
        "description": "containers<br/><br/>updateContainers",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / uuid_v4",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "name": "containerId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "organisationIds": {
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "type": "integer",
                    "description": "The id property defines the unique id of type integer",
                    "minimum": 1
                  }
                }
              }
            }
          }
        ],
        "tags": ["containers"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Random uuid v4.",
                  "default": "7adb258e-3ee7-4299-bcb9-513fab03f7d4",
                  "x-format": { "guid": { "version": "uuidv4" } }
                },
                "image": { "type": "string" },
                "organisationId": { "type": "number" },
                "organisation": { "type": "string" },
                "containerAccess": {
                  "type": "string",
                  "description": "Container access",
                  "enum": ["public", "private"]
                },
                "status": { "type": "string" },
                "displayName": {
                  "type": "string",
                  "description": "Display name"
                },
                "containerName": {
                  "type": "string",
                  "description": "Container name"
                },
                "icon": {
                  "type": "string",
                  "description": "Icon name",
                  "enum": [
                    "american sign language interpreting",
                    "assistive listening systems",
                    "audio description",
                    "blind",
                    "braille",
                    "closed captioning",
                    "closed captioning outline",
                    "deaf",
                    "low vision",
                    "phone volume",
                    "question circle",
                    "question circle outline",
                    "sign language",
                    "tty",
                    "universal access",
                    "wheelchair",
                    "angle double down",
                    "angle double left",
                    "angle double right",
                    "angle double up",
                    "angle down",
                    "angle left",
                    "angle right",
                    "angle up",
                    "arrow alternate circle down",
                    "arrow alternate circle down outline",
                    "arrow alternate circle left",
                    "arrow alternate circle left outline",
                    "arrow alternate circle right",
                    "arrow alternate circle right outline",
                    "arrow alternate circle up",
                    "arrow alternate circle up outline",
                    "arrow circle down",
                    "arrow circle left",
                    "arrow circle right",
                    "arrow circle up",
                    "arrow down",
                    "arrow left",
                    "arrow right",
                    "arrow up",
                    "arrows alternate",
                    "arrows alternate horizontal",
                    "arrows alternate vertical",
                    "caret down",
                    "caret left",
                    "caret right",
                    "caret square down",
                    "caret square down outline",
                    "caret square left",
                    "caret square left outline",
                    "caret square right",
                    "caret square right outline",
                    "caret square up",
                    "caret square up outline",
                    "caret up",
                    "cart arrow down",
                    "chart line",
                    "chevron circle down",
                    "chevron circle left",
                    "chevron circle right",
                    "chevron circle up",
                    "chevron down",
                    "chevron left",
                    "chevron right",
                    "chevron up",
                    "cloud download",
                    "cloud upload",
                    "download",
                    "exchange",
                    "expand arrows alternate",
                    "external alternate",
                    "external square alternate",
                    "hand point down",
                    "hand point down outline",
                    "hand point left",
                    "hand point left outline",
                    "hand point right",
                    "hand point right outline",
                    "hand point up",
                    "hand point up outline",
                    "hand pointer",
                    "hand pointer outline",
                    "history",
                    "level down alternate",
                    "level up alternate",
                    "location arrow",
                    "long arrow alternate down",
                    "long arrow alternate left",
                    "long arrow alternate right",
                    "long arrow alternate up",
                    "mouse pointer",
                    "play",
                    "random",
                    "recycle",
                    "redo",
                    "redo alternate",
                    "reply",
                    "reply all",
                    "retweet",
                    "share",
                    "share square",
                    "share square outline",
                    "sign-in",
                    "sign-out",
                    "sign-in alternate",
                    "sign-out alternate",
                    "sort",
                    "sort alphabet down",
                    "sort alphabet up",
                    "sort amount down",
                    "sort amount up",
                    "sort down",
                    "sort numeric down",
                    "sort numeric up",
                    "sort up",
                    "sync",
                    "sync alternate",
                    "text height",
                    "text width",
                    "undo",
                    "undo alternate",
                    "upload",
                    "zoom-in",
                    "zoom-out",
                    "backward",
                    "circle",
                    "circle outline",
                    "compress",
                    "eject",
                    "expand",
                    "fast backward",
                    "fast forward",
                    "file audio",
                    "file audio outline",
                    "file video",
                    "file video outline",
                    "film",
                    "forward",
                    "headphones",
                    "microphone",
                    "microphone slash",
                    "music",
                    "pause",
                    "pause circle",
                    "pause circle outline",
                    "play circle",
                    "play circle outline",
                    "podcast",
                    "rss",
                    "rss square",
                    "step backward",
                    "step forward",
                    "stop",
                    "stop circle",
                    "stop circle outline",
                    "video",
                    "volume down",
                    "volume off",
                    "volume up",
                    "address book",
                    "address book outline",
                    "address card",
                    "address card outline",
                    "archive",
                    "balance scale",
                    "birthday cake",
                    "book",
                    "briefcase",
                    "building",
                    "building outline",
                    "bullhorn",
                    "bullseye",
                    "calculator",
                    "calendar",
                    "calendar outline",
                    "calendar alternate",
                    "calendar alternate outline",
                    "certificate",
                    "chart area",
                    "chart bar",
                    "chart bar outline",
                    "chart pie",
                    "clipboard",
                    "clipboard outline",
                    "coffee",
                    "columns",
                    "compass",
                    "compass outline",
                    "copy",
                    "copy outline",
                    "copyright",
                    "copyright outline",
                    "cut",
                    "edit",
                    "edit outline",
                    "envelope",
                    "envelope outline",
                    "envelope open",
                    "envelope open outline",
                    "envelope square",
                    "eraser",
                    "fax",
                    "file",
                    "file outline",
                    "file alternate",
                    "file alternate outline",
                    "folder",
                    "folder outline",
                    "folder open",
                    "folder open outline",
                    "globe",
                    "industry",
                    "paperclip",
                    "paste",
                    "pen square",
                    "pencil alternate",
                    "percent",
                    "phone",
                    "phone square",
                    "registered",
                    "registered outline",
                    "save",
                    "save outline",
                    "sitemap",
                    "sticky note",
                    "sticky note outline",
                    "suitcase",
                    "table",
                    "tag",
                    "tags",
                    "tasks",
                    "thumbtack",
                    "trademark",
                    "chess",
                    "chess bishop",
                    "chess board",
                    "chess king",
                    "chess knight",
                    "chess pawn",
                    "chess queen",
                    "chess rook",
                    "square full",
                    "barcode",
                    "bath",
                    "bug",
                    "code",
                    "code branch",
                    "file code",
                    "file code outline",
                    "filter",
                    "fire extinguisher",
                    "keyboard",
                    "keyboard outline",
                    "microchip",
                    "qrcode",
                    "shield alternate",
                    "terminal",
                    "user secret",
                    "window close",
                    "window close outline",
                    "window maximize",
                    "window maximize outline",
                    "window minimize",
                    "window minimize outline",
                    "window restore",
                    "window restore outline",
                    "at",
                    "bell",
                    "bell outline",
                    "bell slash",
                    "bell slash outline",
                    "comment",
                    "comment outline",
                    "comment alternate",
                    "comment alternate outline",
                    "comments",
                    "comments outline",
                    "inbox",
                    "language",
                    "mobile",
                    "mobile alternate",
                    "paper plane",
                    "paper plane outline",
                    "wifi",
                    "desktop",
                    "hdd",
                    "hdd outline",
                    "laptop",
                    "plug",
                    "power off",
                    "print",
                    "server",
                    "tablet",
                    "tablet alternate",
                    "tv",
                    "dollar sign",
                    "euro sign",
                    "lira sign",
                    "money bill alternate",
                    "money bill alternate outline",
                    "pound sign",
                    "ruble sign",
                    "rupee sign",
                    "shekel sign",
                    "won sign",
                    "yen sign",
                    "calendar check",
                    "calendar check outline",
                    "calendar minus",
                    "calendar minus outline",
                    "calendar plus",
                    "calendar plus outline",
                    "calendar times",
                    "calendar times outline",
                    "clock",
                    "clock outline",
                    "hourglass",
                    "hourglass outline",
                    "hourglass end",
                    "hourglass half",
                    "hourglass start",
                    "stopwatch",
                    "adjust",
                    "clone",
                    "clone outline",
                    "crop",
                    "crosshairs",
                    "eye",
                    "eye dropper",
                    "eye slash",
                    "eye slash outline",
                    "object group",
                    "object group outline",
                    "object ungroup",
                    "object ungroup outline",
                    "paint brush",
                    "tint",
                    "align center",
                    "align justify",
                    "align left",
                    "align right",
                    "bold",
                    "font",
                    "heading",
                    "i cursor",
                    "indent",
                    "italic",
                    "linkify",
                    "list",
                    "list alternate",
                    "list alternate outline",
                    "list ol",
                    "list ul",
                    "outdent",
                    "paragraph",
                    "quote left",
                    "quote right",
                    "strikethrough",
                    "subscript",
                    "superscript",
                    "th",
                    "th large",
                    "th list",
                    "trash",
                    "trash alternate",
                    "trash alternate outline",
                    "underline",
                    "unlink",
                    "file archive",
                    "file archive outline",
                    "file excel",
                    "file excel outline",
                    "file image",
                    "file image outline",
                    "file pdf",
                    "file pdf outline",
                    "file powerpoint",
                    "file powerpoint outline",
                    "file word",
                    "file word outline",
                    "genderless",
                    "mars",
                    "mars double",
                    "mars stroke",
                    "mars stroke horizontal",
                    "mars stroke vertical",
                    "mercury",
                    "neuter",
                    "transgender",
                    "transgender alternate",
                    "venus",
                    "venus double",
                    "venus mars",
                    "hand lizard",
                    "hand lizard outline",
                    "hand paper",
                    "hand paper outline",
                    "hand peace",
                    "hand peace outline",
                    "hand rock",
                    "hand rock outline",
                    "hand scissors",
                    "hand scissors outline",
                    "hand spock",
                    "hand spock outline",
                    "handshake",
                    "handshake outline",
                    "thumbs down",
                    "thumbs down outline",
                    "thumbs up",
                    "thumbs up outline",
                    "ambulance",
                    "h square",
                    "heart",
                    "heart outline",
                    "heartbeat",
                    "hospital",
                    "hospital outline",
                    "medkit",
                    "plus square",
                    "plus square outline",
                    "stethoscope",
                    "user md",
                    "bolt",
                    "camera",
                    "camera retro",
                    "id badge",
                    "id badge outline",
                    "id card",
                    "id card outline",
                    "image",
                    "image outline",
                    "images",
                    "images outline",
                    "sliders horizontal",
                    "ban",
                    "bars",
                    "beer",
                    "check",
                    "check circle",
                    "check circle outline",
                    "check square",
                    "check square outline",
                    "cloud",
                    "cog",
                    "cogs",
                    "database",
                    "dot circle",
                    "dot circle outline",
                    "ellipsis horizontal",
                    "ellipsis vertical",
                    "exclamation",
                    "exclamation circle",
                    "exclamation triangle",
                    "flag",
                    "flag outline",
                    "flag checkered",
                    "frown",
                    "frown outline",
                    "hashtag",
                    "home",
                    "info",
                    "info circle",
                    "magic",
                    "meh",
                    "meh outline",
                    "minus",
                    "minus circle",
                    "minus square",
                    "minus square outline",
                    "plus",
                    "plus circle",
                    "question",
                    "search",
                    "search minus",
                    "search plus",
                    "share alternate",
                    "share alternate square",
                    "signal",
                    "smile",
                    "smile outline",
                    "star",
                    "star outline",
                    "star half",
                    "star half outline",
                    "times",
                    "times circle",
                    "times circle outline",
                    "toggle off",
                    "toggle on",
                    "trophy",
                    "user",
                    "user outline",
                    "user circle",
                    "user circle outline",
                    "box",
                    "boxes",
                    "clipboard check",
                    "clipboard list",
                    "dolly",
                    "dolly flatbed",
                    "pallet",
                    "shipping fast",
                    "truck",
                    "warehouse",
                    "anchor",
                    "bed",
                    "bicycle",
                    "binoculars",
                    "bomb",
                    "bookmark",
                    "bookmark outline",
                    "car",
                    "fighter jet",
                    "fire",
                    "flask",
                    "gamepad",
                    "gavel",
                    "gift",
                    "glass martini",
                    "graduation cap",
                    "key",
                    "leaf",
                    "lemon",
                    "lemon outline",
                    "life ring",
                    "life ring outline",
                    "lightbulb",
                    "lightbulb outline",
                    "magnet",
                    "male",
                    "map",
                    "map outline",
                    "map marker",
                    "map marker alternate",
                    "map pin",
                    "map signs",
                    "motorcycle",
                    "newspaper",
                    "newspaper outline",
                    "paw",
                    "plane",
                    "road",
                    "rocket",
                    "ship",
                    "shopping bag",
                    "shopping basket",
                    "shopping cart",
                    "shower",
                    "street view",
                    "subway",
                    "taxi",
                    "ticket alternate",
                    "train",
                    "tree",
                    "umbrella",
                    "university",
                    "utensil spoon",
                    "utensils",
                    "wrench",
                    "band aid",
                    "dna",
                    "first aid",
                    "hospital symbol",
                    "pills",
                    "syringe",
                    "thermometer",
                    "weight",
                    "bus",
                    "cube",
                    "cubes",
                    "futbol",
                    "futbol outline",
                    "gem",
                    "gem outline",
                    "lock",
                    "lock open",
                    "moon",
                    "moon outline",
                    "puzzle piece",
                    "snowflake",
                    "snowflake outline",
                    "space shuttle",
                    "sun",
                    "sun outline",
                    "tachometer alternate",
                    "unlock",
                    "unlock alternate",
                    "cart plus",
                    "credit card",
                    "credit card outline",
                    "square",
                    "square outline",
                    "asterisk",
                    "circle notch",
                    "spinner",
                    "baseball ball",
                    "basketball ball",
                    "bowling ball",
                    "football ball",
                    "golf ball",
                    "hockey puck",
                    "quidditch",
                    "table tennis",
                    "volleyball ball",
                    "battery empty",
                    "battery full",
                    "battery half",
                    "battery quarter",
                    "battery three quarters",
                    "sign in alternate",
                    "sign out alternate",
                    "thermometer empty",
                    "thermometer full",
                    "thermometer half",
                    "thermometer quarter",
                    "thermometer three quarters",
                    "child",
                    "female",
                    "user plus",
                    "user times",
                    "users",
                    "500px",
                    "accessible",
                    "accusoft",
                    "adn",
                    "adversal",
                    "affiliatetheme",
                    "algolia",
                    "amazon",
                    "amazon pay",
                    "amilia",
                    "android",
                    "angellist",
                    "angrycreative",
                    "angular",
                    "app store",
                    "app store ios",
                    "apper",
                    "apple",
                    "apple pay",
                    "asymmetrik",
                    "audible",
                    "autoprefixer",
                    "avianex",
                    "aviato",
                    "aws",
                    "bandcamp",
                    "behance",
                    "behance square",
                    "bimobject",
                    "bitbucket",
                    "bitcoin",
                    "bity",
                    "black tie",
                    "blackberry",
                    "blogger",
                    "blogger b",
                    "bluetooth",
                    "bluetooth b",
                    "btc",
                    "buromobelexperte",
                    "buysellads",
                    "cc amazon pay",
                    "cc amex",
                    "cc apple pay",
                    "cc diners club",
                    "cc discover",
                    "cc jcb",
                    "cc mastercard",
                    "cc paypal",
                    "cc stripe",
                    "cc visa",
                    "centercode",
                    "chrome",
                    "cloudscale",
                    "cloudsmith",
                    "cloudversify",
                    "codepen",
                    "codiepie",
                    "connectdevelop",
                    "contao",
                    "cpanel",
                    "creative commons",
                    "css3",
                    "css3 alternate",
                    "cuttlefish",
                    "d and d",
                    "dashcube",
                    "delicious",
                    "deploydog",
                    "deskpro",
                    "deviantart",
                    "digg",
                    "digital ocean",
                    "discord",
                    "discourse",
                    "dochub",
                    "docker",
                    "draft2digital",
                    "dribbble",
                    "dribbble square",
                    "dropbox",
                    "drupal",
                    "dyalog",
                    "earlybirds",
                    "edge",
                    "elementor",
                    "ember",
                    "empire",
                    "envira",
                    "erlang",
                    "ethereum",
                    "etsy",
                    "expeditedssl",
                    "facebook",
                    "facebook f",
                    "facebook messenger",
                    "facebook square",
                    "firefox",
                    "first order",
                    "firstdraft",
                    "flickr",
                    "flipboard",
                    "fly",
                    "font awesome",
                    "font awesome alternate",
                    "font awesome flag",
                    "fonticons",
                    "fonticons fi",
                    "fort awesome",
                    "fort awesome alternate",
                    "forumbee",
                    "foursquare",
                    "free code camp",
                    "freebsd",
                    "get pocket",
                    "gg",
                    "gg circle",
                    "git",
                    "git square",
                    "github",
                    "github alternate",
                    "github square",
                    "gitkraken",
                    "gitlab",
                    "gitter",
                    "glide",
                    "glide g",
                    "gofore",
                    "goodreads",
                    "goodreads g",
                    "google",
                    "google drive",
                    "google play",
                    "google plus",
                    "google plus g",
                    "google plus square",
                    "google wallet",
                    "gratipay",
                    "grav",
                    "gripfire",
                    "grunt",
                    "gulp",
                    "hacker news",
                    "hacker news square",
                    "hips",
                    "hire a helper",
                    "hooli",
                    "hotjar",
                    "houzz",
                    "html5",
                    "hubspot",
                    "imdb",
                    "instagram",
                    "internet explorer",
                    "ioxhost",
                    "itunes",
                    "itunes note",
                    "jenkins",
                    "joget",
                    "joomla",
                    "js",
                    "js square",
                    "jsfiddle",
                    "keycdn",
                    "kickstarter",
                    "kickstarter k",
                    "korvue",
                    "laravel",
                    "lastfm",
                    "lastfm square",
                    "leanpub",
                    "less",
                    "linechat",
                    "linkedin",
                    "linkedin alternate",
                    "linode",
                    "linux",
                    "lyft",
                    "magento",
                    "maxcdn",
                    "medapps",
                    "medium",
                    "medium m",
                    "medrt",
                    "meetup",
                    "microsoft",
                    "mix",
                    "mixcloud",
                    "mizuni",
                    "modx",
                    "monero",
                    "napster",
                    "nintendo switch",
                    "node",
                    "node js",
                    "npm",
                    "ns8",
                    "nutritionix",
                    "odnoklassniki",
                    "odnoklassniki square",
                    "opencart",
                    "openid",
                    "opera",
                    "optin monster",
                    "osi",
                    "page4",
                    "pagelines",
                    "palfed",
                    "patreon",
                    "paypal",
                    "periscope",
                    "phabricator",
                    "phoenix framework",
                    "php",
                    "pied piper",
                    "pied piper alternate",
                    "pied piper pp",
                    "pinterest",
                    "pinterest p",
                    "pinterest square",
                    "playstation",
                    "product hunt",
                    "pushed",
                    "python",
                    "qq",
                    "quinscape",
                    "quora",
                    "ravelry",
                    "react",
                    "rebel",
                    "redriver",
                    "reddit",
                    "reddit alien",
                    "reddit square",
                    "rendact",
                    "renren",
                    "replyd",
                    "resolving",
                    "rocketchat",
                    "rockrms",
                    "safari",
                    "sass",
                    "schlix",
                    "scribd",
                    "searchengin",
                    "sellcast",
                    "sellsy",
                    "servicestack",
                    "shirtsinbulk",
                    "simplybuilt",
                    "sistrix",
                    "skyatlas",
                    "skype",
                    "slack",
                    "slack hash",
                    "slideshare",
                    "snapchat",
                    "snapchat ghost",
                    "snapchat square",
                    "soundcloud",
                    "speakap",
                    "spotify",
                    "stack exchange",
                    "stack overflow",
                    "staylinked",
                    "steam",
                    "steam square",
                    "steam symbol",
                    "sticker mule",
                    "strava",
                    "stripe",
                    "stripe s",
                    "studiovinari",
                    "stumbleupon",
                    "stumbleupon circle",
                    "superpowers",
                    "supple",
                    "telegram",
                    "telegram plane",
                    "tencent weibo",
                    "themeisle",
                    "trello",
                    "tripadvisor",
                    "tumblr",
                    "tumblr square",
                    "twitch",
                    "twitter",
                    "twitter square",
                    "typo3",
                    "uber",
                    "uikit",
                    "uniregistry",
                    "untappd",
                    "usb",
                    "ussunnah",
                    "vaadin",
                    "viacoin",
                    "viadeo",
                    "viadeo square",
                    "viber",
                    "vimeo",
                    "vimeo square",
                    "vimeo v",
                    "vine",
                    "vk",
                    "vnv",
                    "vuejs",
                    "wechat",
                    "weibo",
                    "weixin",
                    "whatsapp",
                    "whatsapp square",
                    "whmcs",
                    "wikipedia w",
                    "windows",
                    "wordpress",
                    "wordpress simple",
                    "wpbeginner",
                    "wpexplorer",
                    "wpforms",
                    "xbox",
                    "xing",
                    "xing square",
                    "y combinator",
                    "yahoo",
                    "yandex",
                    "yandex international",
                    "yelp",
                    "yoast",
                    "youtube",
                    "youtube square",
                    "chess rock",
                    "ordered list",
                    "unordered list",
                    "user doctor",
                    "shield",
                    "puzzle",
                    "add circle",
                    "add square",
                    "add to calendar",
                    "add to cart",
                    "add user",
                    "add",
                    "alarm mute",
                    "alarm",
                    "ald",
                    "als",
                    "announcement",
                    "area chart",
                    "area graph",
                    "arrow down cart",
                    "asexual",
                    "asl interpreting",
                    "asl",
                    "assistive listening devices",
                    "attach",
                    "attention",
                    "balance",
                    "bar",
                    "bathtub",
                    "battery four",
                    "battery high",
                    "battery low",
                    "battery one",
                    "battery three",
                    "battery two",
                    "battery zero",
                    "birthday",
                    "block layout",
                    "bluetooth alternative",
                    "broken chain",
                    "browser",
                    "call square",
                    "call",
                    "cancel",
                    "cart",
                    "cc",
                    "chain",
                    "chat",
                    "checked calendar",
                    "checkmark",
                    "circle notched",
                    "close",
                    "cny",
                    "cocktail",
                    "commenting",
                    "computer",
                    "configure",
                    "content",
                    "deafness",
                    "delete calendar",
                    "delete",
                    "detective",
                    "discussions",
                    "doctor",
                    "dollar",
                    "dont",
                    "drivers license",
                    "dropdown",
                    "emergency",
                    "envira gallery",
                    "erase",
                    "eur",
                    "euro",
                    "eyedropper",
                    "factory",
                    "favorite",
                    "feed",
                    "female homosexual",
                    "file text",
                    "file text outline",
                    "find",
                    "fork",
                    "game",
                    "gay",
                    "gbp",
                    "google plus circle",
                    "google plus official",
                    "grab",
                    "graduation",
                    "grid layout",
                    "group",
                    "h",
                    "hand victory",
                    "handicap",
                    "hard of hearing",
                    "header",
                    "help circle",
                    "help",
                    "heterosexual",
                    "hide",
                    "hotel",
                    "hourglass four",
                    "hourglass full",
                    "hourglass one",
                    "hourglass three",
                    "hourglass two",
                    "idea",
                    "ils",
                    "in cart",
                    "inr",
                    "intergender",
                    "intersex",
                    "jpy",
                    "krw",
                    "lab",
                    "law",
                    "legal",
                    "lesbian",
                    "lightning",
                    "like",
                    "line graph",
                    "linkedin square",
                    "lira",
                    "list layout",
                    "magnify",
                    "mail forward",
                    "mail square",
                    "mail",
                    "male homosexual",
                    "man",
                    "marker",
                    "mars alternate",
                    "mars horizontal",
                    "mars vertical",
                    "microsoft edge",
                    "military",
                    "ms edge",
                    "mute",
                    "new pied piper",
                    "non binary transgender",
                    "numbered list",
                    "options",
                    "other gender horizontal",
                    "other gender vertical",
                    "other gender",
                    "payment",
                    "paypal card",
                    "pencil square",
                    "photo",
                    "picture",
                    "pie chart",
                    "pie graph",
                    "pied piper hat",
                    "pin",
                    "plus cart",
                    "point",
                    "pointing down",
                    "pointing left",
                    "pointing right",
                    "pointing up",
                    "pound",
                    "power cord",
                    "power",
                    "privacy",
                    "r circle",
                    "rain",
                    "record",
                    "refresh",
                    "remove circle",
                    "remove from calendar",
                    "remove user",
                    "remove",
                    "repeat",
                    "rmb",
                    "rouble",
                    "rub",
                    "ruble",
                    "rupee",
                    "s15",
                    "selected radio",
                    "send",
                    "setting",
                    "settings",
                    "shekel",
                    "sheqel",
                    "shipping",
                    "shop",
                    "shuffle",
                    "shutdown",
                    "sidebar",
                    "signing",
                    "signup",
                    "sliders",
                    "soccer",
                    "sort alphabet ascending",
                    "sort alphabet descending",
                    "sort ascending",
                    "sort content ascending",
                    "sort content descending",
                    "sort descending",
                    "sort numeric ascending",
                    "sort numeric descending",
                    "sound",
                    "spy",
                    "stripe card",
                    "student",
                    "talk",
                    "target",
                    "teletype",
                    "television",
                    "text cursor",
                    "text telephone",
                    "theme",
                    "thumb tack",
                    "time",
                    "tm",
                    "toggle down",
                    "toggle left",
                    "toggle right",
                    "toggle up",
                    "translate",
                    "travel",
                    "treatment",
                    "triangle down",
                    "triangle left",
                    "triangle right",
                    "triangle up",
                    "try",
                    "unhide",
                    "unlinkify",
                    "unmute",
                    "usd",
                    "user cancel",
                    "user close",
                    "user delete",
                    "user x",
                    "vcard",
                    "video camera",
                    "video play",
                    "volume control phone",
                    "wait",
                    "warning circle",
                    "warning sign",
                    "warning",
                    "wi-fi",
                    "winner",
                    "wizard",
                    "woman",
                    "won",
                    "wordpress beginner",
                    "wordpress forms",
                    "world",
                    "write square",
                    "x",
                    "yen",
                    "zip",
                    "zoom in",
                    "zoom out",
                    "zoom",
                    "bitbucket square",
                    "checkmark box",
                    "circle thin",
                    "compose",
                    "conversation",
                    "credit card alternative",
                    "currency",
                    "dashboard",
                    "diamond",
                    "disk",
                    "external share",
                    "external square",
                    "external",
                    "facebook official",
                    "food",
                    "hourglass zero",
                    "level down",
                    "level up",
                    "log out",
                    "meanpath",
                    "money",
                    "move",
                    "pencil",
                    "protect",
                    "radio",
                    "remove bookmark",
                    "resize horizontal",
                    "resize vertical",
                    "sign in",
                    "sign out",
                    "spoon",
                    "star half empty",
                    "star half full",
                    "ticket",
                    "times rectangle",
                    "write"
                  ]
                },
                "type": { "type": "string" },
                "restartPolicy": {
                  "type": "string",
                  "description": "Restart policy"
                },
                "desiredStatus": {
                  "type": "string",
                  "description": "Desired status",
                  "enum": ["stopped", "running"]
                },
                "registryType": {
                  "type": "string",
                  "description": "Registry type",
                  "enum": ["public", "private"]
                },
                "category": {
                  "type": "string",
                  "description": "Container categories",
                  "enum": [
                    "Receiver",
                    "Connectivity",
                    "Data Acquisition",
                    "IT/Cloud Connectors",
                    "Services",
                    "Applications"
                  ]
                },
                "settingsPageId": {
                  "type": "string",
                  "description": "Settings page",
                  "enum": [
                    "gatewayTelemetry",
                    "networkTopology",
                    "opcuaPublisher",
                    "ainConnector",
                    "netFieldProxy",
                    "netFieldAppPlatformConnector"
                  ]
                },
                "shortDescription": {
                  "type": "string",
                  "description": "Short description, max(60)",
                  "maxLength": 60
                },
                "description": {
                  "type": "string",
                  "description": "Description, max(3000)",
                  "maxLength": 3000
                },
                "credentials": {
                  "type": "object",
                  "properties": {
                    "address": { "type": "string" },
                    "username": { "type": "string" }
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.500Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.500Z"
                },
                "sharedWithOrganisations": {
                  "type": "array",
                  "x-constraint": { "unique": "id" },
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "number" },
                      "name": { "type": "string" }
                    }
                  }
                },
                "versions": {
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Random uuid v4.",
                        "default": "7adb258e-3ee7-4299-bcb9-513fab03f7d4",
                        "x-format": { "guid": { "version": "uuidv4" } }
                      },
                      "version": {
                        "type": "string",
                        "description": "Version name"
                      },
                      "useGlobalCredentials": {
                        "type": "boolean",
                        "description": "Use global credentials"
                      },
                      "releaseNotes": {
                        "type": "string",
                        "description": "Release notes"
                      },
                      "imageUri": {
                        "type": "string",
                        "description": "Image URI"
                      },
                      "registryType": {
                        "type": "string",
                        "description": "Registry type",
                        "enum": ["public", "private"]
                      },
                      "credentials": {
                        "type": "object",
                        "properties": {
                          "address": { "type": "string" },
                          "username": { "type": "string" }
                        }
                      },
                      "processorArchitecture": {
                        "type": "string",
                        "description": "Processor architecture",
                        "enum": [
                          "Linux-X86",
                          "Linux-X64",
                          "Linux-ARM32V7",
                          "Linux-ARM64V8",
                          "All"
                        ]
                      },
                      "containerCreateOptions": {
                        "type": "object",
                        "description": "See latest Docker documentation",
                        "x-meta": { "swaggerType": "object" },
                        "properties": {
                          "Hostname": { "type": "string" },
                          "Domainname": { "type": "string" },
                          "User": { "type": "string" },
                          "AttachStdin": { "type": "boolean" },
                          "AttachStdout": { "type": "boolean" },
                          "AttachStderr": { "type": "boolean" },
                          "ExposedPorts": {
                            "type": "object",
                            "properties": { "string": { "type": "object" } }
                          },
                          "Tty": { "type": "boolean" },
                          "OpenStdin": { "type": "boolean" },
                          "StdinOnce": { "type": "boolean" },
                          "Env": {
                            "type": "string",
                            "x-alternatives": [
                              { "type": "string" },
                              { "type": "array", "items": { "type": "string" } }
                            ]
                          },
                          "Cmd": {
                            "type": "string",
                            "x-alternatives": [
                              { "type": "string" },
                              { "type": "array", "items": { "type": "string" } }
                            ]
                          },
                          "Healthcheck": {
                            "type": "object",
                            "properties": {
                              "Test": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "Interval": {
                                "type": "string",
                                "enum": [0],
                                "x-alternatives": [
                                  { "type": "string", "enum": [0] },
                                  { "type": "integer", "minimum": 1000000 }
                                ]
                              },
                              "Timeout": {
                                "type": "string",
                                "enum": [0],
                                "x-alternatives": [
                                  { "type": "string", "enum": [0] },
                                  { "type": "integer", "minimum": 1000000 }
                                ]
                              },
                              "Retries": { "type": "integer", "minimum": 0 },
                              "StartPeriod": {
                                "type": "string",
                                "enum": [0],
                                "x-alternatives": [
                                  { "type": "string", "enum": [0] },
                                  { "type": "integer", "minimum": 1000000 }
                                ]
                              }
                            }
                          },
                          "ArgsEscaped": { "type": "boolean" },
                          "Image": { "type": "string" },
                          "Volumes": {
                            "type": "object",
                            "properties": { "string": { "type": "object" } }
                          },
                          "WorkingDir": { "type": "string" },
                          "Entrypoint": {
                            "x-alternatives": [
                              {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              { "type": "string" }
                            ],
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "NetworkDisabled": { "type": "boolean" },
                          "MacAddress": {
                            "type": "string",
                            "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$"
                          },
                          "OnBuild": {
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "Labels": {
                            "type": "object",
                            "properties": { "string": { "type": "string" } }
                          },
                          "StopSignal": { "type": "string" },
                          "StopTimeout": { "type": "integer", "minimum": 0 },
                          "Shell": {
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "HostConfig": {
                            "type": "object",
                            "properties": {
                              "MaximumIOps": { "type": "integer" },
                              "MaximumIOBps": { "type": "integer" },
                              "CpuShares": { "type": "integer" },
                              "Memory": { "type": "integer" },
                              "CgroupParent": { "type": "string" },
                              "BlkioWeight": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 1000
                              },
                              "BlkioWeightDevice": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Weight": {
                                      "type": "integer",
                                      "minimum": 0
                                    }
                                  }
                                }
                              },
                              "BlkioDeviceReadBps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Rate": { "type": "integer", "minimum": 0 }
                                  }
                                }
                              },
                              "BlkioDeviceWriteBps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Rate": { "type": "integer", "minimum": 0 }
                                  }
                                }
                              },
                              "BlkioDeviceReadIOps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Rate": { "type": "integer", "minimum": 0 }
                                  }
                                }
                              },
                              "BlkioDeviceWriteIOps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Rate": { "type": "integer", "minimum": 0 }
                                  }
                                }
                              },
                              "CpuPeriod": { "type": "integer" },
                              "CpuQuota": { "type": "integer" },
                              "CpuRealtimePeriod": { "type": "integer" },
                              "CpuRealtimeRuntime": { "type": "integer" },
                              "CpusetCpus": { "type": "string" },
                              "CpusetMems": { "type": "string" },
                              "Devices": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "PathOnHost": { "type": "string" },
                                    "PathInContainer": { "type": "string" },
                                    "CgroupPermissions": { "type": "string" }
                                  }
                                }
                              },
                              "DeviceCgroupRules": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "DiskQuota": { "type": "integer" },
                              "KernelMemory": { "type": "integer" },
                              "MemoryReservation": { "type": "integer" },
                              "MemorySwap": { "type": "integer" },
                              "MemorySwappiness": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 100
                              },
                              "NanoCPUs": { "type": "integer" },
                              "OomKillDisable": { "type": "boolean" },
                              "PidsLimit": { "type": "integer" },
                              "Ulimits": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Name": { "type": "string" },
                                    "Soft": { "type": "integer" },
                                    "Hard": { "type": "integer" }
                                  }
                                }
                              },
                              "CpuCount": { "type": "integer" },
                              "CpuPercent": { "type": "integer" },
                              "IOMaximumIOps": { "type": "integer" },
                              "IOMaximumBandwidth": { "type": "integer" },
                              "Binds": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": ".+:.+(:.+)?"
                                }
                              },
                              "ContainerIDFile": { "type": "string" },
                              "LogConfig": {
                                "type": "object",
                                "properties": {
                                  "Type": {
                                    "type": "string",
                                    "enum": [
                                      "json-file",
                                      "syslog",
                                      "journald",
                                      "gelf",
                                      "fluentd",
                                      "awslogs",
                                      "splunk",
                                      "etwlogs",
                                      "none"
                                    ]
                                  },
                                  "Config": {
                                    "type": "object",
                                    "properties": {
                                      "string": { "type": "string" }
                                    }
                                  }
                                }
                              },
                              "NetworkMode": {
                                "type": "string",
                                "enum": ["bridge", "host", "none"],
                                "x-alternatives": [
                                  {
                                    "type": "string",
                                    "enum": ["bridge", "host", "none"]
                                  },
                                  {
                                    "type": "string",
                                    "pattern": "^container:.*$"
                                  }
                                ]
                              },
                              "PortBindings": {
                                "type": "object",
                                "properties": {
                                  "string": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "HostIp": { "type": "string" },
                                        "HostPort": { "type": "string" }
                                      }
                                    }
                                  }
                                }
                              },
                              "RestartPolicy": {
                                "type": "object",
                                "properties": {
                                  "Name": {
                                    "type": "string",
                                    "enum": [
                                      "always",
                                      "unless-stopped",
                                      "on-failure"
                                    ]
                                  },
                                  "MaximumRetryCount": { "type": "integer" }
                                }
                              },
                              "AutoRemove": { "type": "boolean" },
                              "VolumeDriver": { "type": "string" },
                              "VolumesFrom": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": "^.+(:(ro|rw))?$"
                                }
                              },
                              "Mounts": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Target": { "type": "string" },
                                    "Source": { "type": "string" },
                                    "Type": {
                                      "type": "string",
                                      "enum": ["bind", "volume", "tmpfs"]
                                    },
                                    "ReadOnly": { "type": "boolean" },
                                    "Consistency": { "type": "string" },
                                    "BindOptions": {
                                      "type": "object",
                                      "properties": {
                                        "Propagation": {
                                          "type": "string",
                                          "enum": [
                                            "private",
                                            "rprivate",
                                            "shared",
                                            "rshared",
                                            "slave",
                                            "rslave"
                                          ]
                                        }
                                      }
                                    },
                                    "VolumeOptions": {
                                      "type": "object",
                                      "properties": {
                                        "NoCopy": { "type": "boolean" },
                                        "Labels": {
                                          "type": "object",
                                          "properties": {
                                            "string": { "type": "string" }
                                          }
                                        },
                                        "DriverConfig": {
                                          "type": "object",
                                          "properties": {
                                            "Name": { "type": "string" },
                                            "Options": {
                                              "type": "object",
                                              "properties": {
                                                "string": { "type": "string" }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "TmpfsOptions": {
                                      "type": "object",
                                      "properties": {
                                        "SizeBytes": { "type": "integer" },
                                        "Mode": { "type": "integer" }
                                      }
                                    }
                                  }
                                }
                              },
                              "CapAdd": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "CapDrop": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "Dns": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "DnsOptions": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "DnsSearch": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "ExtraHosts": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": "^.+:.+$"
                                }
                              },
                              "GroupAdd": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "IpcMode": { "type": "string" },
                              "Cgroup": { "type": "string" },
                              "Links": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": "^.+:.+$"
                                }
                              },
                              "OomScoreAdj": { "type": "integer" },
                              "PidMode": {
                                "type": "string",
                                "pattern": "^.+(:.+)?$"
                              },
                              "Privileged": { "type": "boolean" },
                              "PublishAllPorts": { "type": "boolean" },
                              "ReadonlyRootfs": { "type": "boolean" },
                              "SecurityOpt": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "StorageOpt": {
                                "type": "object",
                                "properties": { "string": { "type": "string" } }
                              },
                              "Tmpfs": {
                                "type": "object",
                                "properties": { "string": { "type": "string" } }
                              },
                              "UTSMode": { "type": "string" },
                              "UsernsMode": { "type": "string" },
                              "ShmSize": { "type": "integer", "minimum": 0 },
                              "Sysctls": {
                                "type": "object",
                                "properties": { "string": { "type": "string" } }
                              },
                              "Runtime": { "type": "string" },
                              "ConsoleSize": {
                                "type": "array",
                                "x-constraint": { "length": 2 },
                                "items": { "type": "integer", "minimum": 0 }
                              },
                              "Isolation": {
                                "type": "string",
                                "enum": ["default", "process", "hyperv"]
                              }
                            }
                          },
                          "NetworkingConfig": {
                            "type": "object",
                            "properties": {
                              "EndpointsConfig": {
                                "type": "object",
                                "properties": {
                                  "string": {
                                    "type": "object",
                                    "properties": {
                                      "IPAMConfig": {
                                        "type": "object",
                                        "properties": {
                                          "IPv4Address": {
                                            "type": "string",
                                            "x-format": {
                                              "ip": {
                                                "cidr": "optional",
                                                "version": ["ipv4"]
                                              }
                                            }
                                          },
                                          "IPv6Address": {
                                            "type": "string",
                                            "x-format": {
                                              "ip": {
                                                "cidr": "optional",
                                                "version": ["ipv6"]
                                              }
                                            }
                                          },
                                          "LinkLocalIPs": {
                                            "type": "array",
                                            "items": { "type": "string" }
                                          }
                                        }
                                      },
                                      "Links": {
                                        "type": "array",
                                        "items": { "type": "string" }
                                      },
                                      "Aliases": {
                                        "type": "array",
                                        "items": { "type": "string" }
                                      },
                                      "NetworkId": { "type": "string" },
                                      "EndpointId": { "type": "string" },
                                      "Gateway": { "type": "string" },
                                      "IPAddress": {
                                        "type": "string",
                                        "x-format": {
                                          "ip": {
                                            "cidr": "optional",
                                            "version": ["ipv4"]
                                          }
                                        }
                                      },
                                      "IPPrefixLen": { "type": "integer" },
                                      "IPv6Gateway": { "type": "string" },
                                      "GlobalIPv6Address": {
                                        "type": "string",
                                        "x-format": {
                                          "ip": {
                                            "cidr": "optional",
                                            "version": ["ipv6"]
                                          }
                                        }
                                      },
                                      "GlobalIPv6PrefixLen": {
                                        "type": "integer"
                                      },
                                      "MacAddress": { "type": "string" }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "containerTwinDesiredOptions": { "type": "object" },
                      "environmentVariables": {
                        "type": "array",
                        "description": "An array of object containing environment variables",
                        "x-meta": { "swaggerType": "array" },
                        "x-constraint": { "unique": "key" },
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": { "type": "string" },
                            "value": { "type": "string" }
                          },
                          "required": ["key", "value"]
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "createdAt",
                        "default": "2021-05-21T06:02:07.766Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "updatedAt",
                        "default": "2021-05-21T06:02:07.766Z"
                      }
                    }
                  }
                },
                "mqttTopics": {
                  "type": "array",
                  "description": "MQTT topics",
                  "x-constraint": { "unique": true },
                  "items": { "type": "string" }
                }
              }
            },
            "description": "Container shared"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Container(s) not found / Organisation(s) not found"
          }
        }
      }
    },
    "/devices/offboard/confirm": {
      "put": {
        "summary": "Offboards device from users sensorEDGE Tenant to Pending Tenant",
        "operationId": "putDevicesOffboardConfirm",
        "description": "devices<br/><br/>offboardedDevices",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "equipmentId": { "type": "string" },
                "offboardConfirmationCode": { "type": "string" }
              },
              "required": ["equipmentId", "offboardConfirmationCode"]
            }
          }
        ],
        "tags": ["devices"],
        "responses": {
          "204": {
            "description": "Device was successfull offboarded and can be onboarded again using the Equipment Id"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device(s) not found"
          }
        }
      }
    },
    "/devices/{deviceId}/state": {
      "put": {
        "summary": "Switch device between \"enabled\" or \"disabled\" state",
        "operationId": "putDevicesDeviceidState",
        "description": "devices<br/><br/>updateDevices",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Device state",
            "name": "enabled",
            "in": "query",
            "required": true
          }
        ],
        "tags": ["devices"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": { "enabled": { "type": "boolean" } }
            },
            "description": "Device state updated successfully"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device(s) not found"
          }
        }
      }
    },
    "/users/sensoredge/verify": {
      "put": {
        "summary": "Verify a user by the code sent through email",
        "operationId": "putUsersSensoredgeVerify",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "valid email / null and empty values are not allowed",
                  "x-format": { "email": true }
                },
                "code": { "type": "string" }
              },
              "required": ["email", "code"]
            }
          }
        ],
        "tags": ["sensorEDGE"],
        "security": [{ "jwt": [] }],
        "responses": {
          "204": { "description": "User verified" },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "User not found / Invalid code"
          }
        }
      }
    },
    "/devices/{deviceId}/deployment-manifests/deploy": {
      "put": {
        "summary": "Update sensorEDGE OS and redeploy  device containers",
        "operationId": "putDevicesDeviceidDeploymentmanifestsDeploy",
        "description": "devices<br/><br/>updateDevices",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["sensorEdgeDeploymentManifests"],
        "security": [{ "jwt": [] }],
        "responses": {
          "204": { "description": "Device redeployed" },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device(s) not found"
          }
        }
      }
    },
    "/groups/{groupId}/containers/{containerId}": {
      "put": {
        "summary": "Add container in a group by Group and Container ID",
        "operationId": "putGroupsGroupidContainersContainerid",
        "description": "groups<br/><br/>updateGroups",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "groupId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / uuid_v4",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "name": "containerId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["groups"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": { "type": "number" },
                "groupId": { "type": "number" },
                "targetId": { "type": "string" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:10.922Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:10.922Z"
                }
              },
              "required": [
                "id",
                "groupId",
                "targetId",
                "createdAt",
                "updatedAt"
              ]
            },
            "description": "Add container in a group"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid token"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Requesting user has invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Group(s) not found / Container(s) not found"
          }
        }
      },
      "delete": {
        "summary": "Remove a container from a group",
        "operationId": "deleteGroupsGroupidContainersContainerid",
        "description": "groups<br/><br/>deleteGroups",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "groupId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / uuid_v4",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "name": "containerId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["groups"],
        "security": [{ "jwt": [] }],
        "responses": {
          "204": { "description": "Container removed from the group" },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid token"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Requesting user has invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Group(s) not found / Container(s) not found"
          }
        }
      }
    },
    "/groups/{groupId}/devices/{deviceId}": {
      "put": {
        "summary": "Add device in a group by Group and Device IDs",
        "operationId": "putGroupsGroupidDevicesDeviceid",
        "description": "groups<br/><br/>updateGroups",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "groupId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["groups"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": { "type": "number" },
                "groupId": { "type": "number" },
                "targetId": { "type": "string" },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:10.922Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:10.922Z"
                }
              },
              "required": [
                "id",
                "groupId",
                "targetId",
                "createdAt",
                "updatedAt"
              ]
            },
            "description": "Add device in a group"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Group(s) not found / Device(s) not found"
          }
        }
      },
      "delete": {
        "summary": "Remove a device from a group",
        "operationId": "deleteGroupsGroupidDevicesDeviceid",
        "description": "groups<br/><br/>updateGroups",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "groupId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["groups"],
        "security": [{ "jwt": [] }],
        "responses": {
          "204": { "description": "Device removed from the group" },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Group(s) not found / Device(s) not found"
          }
        }
      }
    },
    "/users/sensoredge/register/complete": {
      "put": {
        "summary": "Generate sensor edge registration access token",
        "operationId": "putUsersSensoredgeRegisterComplete",
        "description": "usersAndOrganisations<br/><br/>updateUsers",
        "parameters": [
          {
            "type": "string",
            "description": "Access token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": { "type": "string", "description": "First name" },
                "lastName": { "type": "string", "description": "Last name" },
                "jobTitle": { "type": "string", "description": "Job title" },
                "department": { "type": "string", "description": "Department" },
                "mobilePhone": {
                  "type": "string",
                  "description": "Mobile phone"
                },
                "telephone": { "type": "string", "description": "Telephone" },
                "street": { "type": "string", "description": "Street" },
                "houseNumber": {
                  "type": "string",
                  "description": "House number"
                },
                "addressSupplement": {
                  "type": "string",
                  "description": "Address supplement"
                },
                "zipCode": { "type": "string", "description": "Zip code" },
                "city": { "type": "string", "description": "City" },
                "state": { "type": "string", "description": "State" },
                "country": { "type": "string", "description": "Country" }
              },
              "required": [
                "firstName",
                "lastName",
                "street",
                "houseNumber",
                "zipCode",
                "city",
                "country"
              ]
            }
          }
        ],
        "tags": ["sensorEDGE"],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "accessToken": {
                  "type": "string",
                  "description": "JwtTokenSchema",
                  "pattern": "[A-Za-z0-9\\-._~+\\/]+=*"
                },
                "refreshToken": {
                  "type": "string",
                  "description": "JwtTokenSchema",
                  "pattern": "[A-Za-z0-9\\-._~+\\/]+=*"
                }
              },
              "required": ["accessToken", "refreshToken"]
            },
            "description": "Token created"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          }
        }
      }
    },
    "/users/{userId}/roles/{roleName}": {
      "put": {
        "summary": "Add role to user",
        "operationId": "putUsersUseridRolesRolename",
        "description": "roles<br/><br/>addUserRoles",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Role name",
            "name": "roleName",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["users"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "role": { "type": "string", "description": "Role name" }
              },
              "required": ["role"]
            },
            "description": "Role added"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "User not found / Role(s) not found"
          }
        }
      },
      "delete": {
        "summary": "Delete role from user",
        "operationId": "deleteUsersUseridRolesRolename",
        "description": "roles<br/><br/>deleteUserRoles",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Role name",
            "name": "roleName",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["users"],
        "security": [{ "jwt": [] }],
        "responses": {
          "204": { "description": "Role deleted" },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "User not found / Role(s) not found"
          }
        }
      }
    },
    "/containers/{containerId}/share/{organisationId}": {
      "delete": {
        "summary": "Unshare container with organisation",
        "operationId": "deleteContainersContaineridShareOrganisationid",
        "description": "containers<br/><br/>updateContainers",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / uuid_v4",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "name": "containerId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "The id property defines the unique id of type integer",
            "minimum": 1,
            "name": "organisationId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["containers"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Random uuid v4.",
                  "default": "7adb258e-3ee7-4299-bcb9-513fab03f7d4",
                  "x-format": { "guid": { "version": "uuidv4" } }
                },
                "image": { "type": "string" },
                "organisationId": { "type": "number" },
                "organisation": { "type": "string" },
                "containerAccess": {
                  "type": "string",
                  "description": "Container access",
                  "enum": ["public", "private"]
                },
                "status": { "type": "string" },
                "displayName": {
                  "type": "string",
                  "description": "Display name"
                },
                "containerName": {
                  "type": "string",
                  "description": "Container name"
                },
                "icon": {
                  "type": "string",
                  "description": "Icon name",
                  "enum": [
                    "american sign language interpreting",
                    "assistive listening systems",
                    "audio description",
                    "blind",
                    "braille",
                    "closed captioning",
                    "closed captioning outline",
                    "deaf",
                    "low vision",
                    "phone volume",
                    "question circle",
                    "question circle outline",
                    "sign language",
                    "tty",
                    "universal access",
                    "wheelchair",
                    "angle double down",
                    "angle double left",
                    "angle double right",
                    "angle double up",
                    "angle down",
                    "angle left",
                    "angle right",
                    "angle up",
                    "arrow alternate circle down",
                    "arrow alternate circle down outline",
                    "arrow alternate circle left",
                    "arrow alternate circle left outline",
                    "arrow alternate circle right",
                    "arrow alternate circle right outline",
                    "arrow alternate circle up",
                    "arrow alternate circle up outline",
                    "arrow circle down",
                    "arrow circle left",
                    "arrow circle right",
                    "arrow circle up",
                    "arrow down",
                    "arrow left",
                    "arrow right",
                    "arrow up",
                    "arrows alternate",
                    "arrows alternate horizontal",
                    "arrows alternate vertical",
                    "caret down",
                    "caret left",
                    "caret right",
                    "caret square down",
                    "caret square down outline",
                    "caret square left",
                    "caret square left outline",
                    "caret square right",
                    "caret square right outline",
                    "caret square up",
                    "caret square up outline",
                    "caret up",
                    "cart arrow down",
                    "chart line",
                    "chevron circle down",
                    "chevron circle left",
                    "chevron circle right",
                    "chevron circle up",
                    "chevron down",
                    "chevron left",
                    "chevron right",
                    "chevron up",
                    "cloud download",
                    "cloud upload",
                    "download",
                    "exchange",
                    "expand arrows alternate",
                    "external alternate",
                    "external square alternate",
                    "hand point down",
                    "hand point down outline",
                    "hand point left",
                    "hand point left outline",
                    "hand point right",
                    "hand point right outline",
                    "hand point up",
                    "hand point up outline",
                    "hand pointer",
                    "hand pointer outline",
                    "history",
                    "level down alternate",
                    "level up alternate",
                    "location arrow",
                    "long arrow alternate down",
                    "long arrow alternate left",
                    "long arrow alternate right",
                    "long arrow alternate up",
                    "mouse pointer",
                    "play",
                    "random",
                    "recycle",
                    "redo",
                    "redo alternate",
                    "reply",
                    "reply all",
                    "retweet",
                    "share",
                    "share square",
                    "share square outline",
                    "sign-in",
                    "sign-out",
                    "sign-in alternate",
                    "sign-out alternate",
                    "sort",
                    "sort alphabet down",
                    "sort alphabet up",
                    "sort amount down",
                    "sort amount up",
                    "sort down",
                    "sort numeric down",
                    "sort numeric up",
                    "sort up",
                    "sync",
                    "sync alternate",
                    "text height",
                    "text width",
                    "undo",
                    "undo alternate",
                    "upload",
                    "zoom-in",
                    "zoom-out",
                    "backward",
                    "circle",
                    "circle outline",
                    "compress",
                    "eject",
                    "expand",
                    "fast backward",
                    "fast forward",
                    "file audio",
                    "file audio outline",
                    "file video",
                    "file video outline",
                    "film",
                    "forward",
                    "headphones",
                    "microphone",
                    "microphone slash",
                    "music",
                    "pause",
                    "pause circle",
                    "pause circle outline",
                    "play circle",
                    "play circle outline",
                    "podcast",
                    "rss",
                    "rss square",
                    "step backward",
                    "step forward",
                    "stop",
                    "stop circle",
                    "stop circle outline",
                    "video",
                    "volume down",
                    "volume off",
                    "volume up",
                    "address book",
                    "address book outline",
                    "address card",
                    "address card outline",
                    "archive",
                    "balance scale",
                    "birthday cake",
                    "book",
                    "briefcase",
                    "building",
                    "building outline",
                    "bullhorn",
                    "bullseye",
                    "calculator",
                    "calendar",
                    "calendar outline",
                    "calendar alternate",
                    "calendar alternate outline",
                    "certificate",
                    "chart area",
                    "chart bar",
                    "chart bar outline",
                    "chart pie",
                    "clipboard",
                    "clipboard outline",
                    "coffee",
                    "columns",
                    "compass",
                    "compass outline",
                    "copy",
                    "copy outline",
                    "copyright",
                    "copyright outline",
                    "cut",
                    "edit",
                    "edit outline",
                    "envelope",
                    "envelope outline",
                    "envelope open",
                    "envelope open outline",
                    "envelope square",
                    "eraser",
                    "fax",
                    "file",
                    "file outline",
                    "file alternate",
                    "file alternate outline",
                    "folder",
                    "folder outline",
                    "folder open",
                    "folder open outline",
                    "globe",
                    "industry",
                    "paperclip",
                    "paste",
                    "pen square",
                    "pencil alternate",
                    "percent",
                    "phone",
                    "phone square",
                    "registered",
                    "registered outline",
                    "save",
                    "save outline",
                    "sitemap",
                    "sticky note",
                    "sticky note outline",
                    "suitcase",
                    "table",
                    "tag",
                    "tags",
                    "tasks",
                    "thumbtack",
                    "trademark",
                    "chess",
                    "chess bishop",
                    "chess board",
                    "chess king",
                    "chess knight",
                    "chess pawn",
                    "chess queen",
                    "chess rook",
                    "square full",
                    "barcode",
                    "bath",
                    "bug",
                    "code",
                    "code branch",
                    "file code",
                    "file code outline",
                    "filter",
                    "fire extinguisher",
                    "keyboard",
                    "keyboard outline",
                    "microchip",
                    "qrcode",
                    "shield alternate",
                    "terminal",
                    "user secret",
                    "window close",
                    "window close outline",
                    "window maximize",
                    "window maximize outline",
                    "window minimize",
                    "window minimize outline",
                    "window restore",
                    "window restore outline",
                    "at",
                    "bell",
                    "bell outline",
                    "bell slash",
                    "bell slash outline",
                    "comment",
                    "comment outline",
                    "comment alternate",
                    "comment alternate outline",
                    "comments",
                    "comments outline",
                    "inbox",
                    "language",
                    "mobile",
                    "mobile alternate",
                    "paper plane",
                    "paper plane outline",
                    "wifi",
                    "desktop",
                    "hdd",
                    "hdd outline",
                    "laptop",
                    "plug",
                    "power off",
                    "print",
                    "server",
                    "tablet",
                    "tablet alternate",
                    "tv",
                    "dollar sign",
                    "euro sign",
                    "lira sign",
                    "money bill alternate",
                    "money bill alternate outline",
                    "pound sign",
                    "ruble sign",
                    "rupee sign",
                    "shekel sign",
                    "won sign",
                    "yen sign",
                    "calendar check",
                    "calendar check outline",
                    "calendar minus",
                    "calendar minus outline",
                    "calendar plus",
                    "calendar plus outline",
                    "calendar times",
                    "calendar times outline",
                    "clock",
                    "clock outline",
                    "hourglass",
                    "hourglass outline",
                    "hourglass end",
                    "hourglass half",
                    "hourglass start",
                    "stopwatch",
                    "adjust",
                    "clone",
                    "clone outline",
                    "crop",
                    "crosshairs",
                    "eye",
                    "eye dropper",
                    "eye slash",
                    "eye slash outline",
                    "object group",
                    "object group outline",
                    "object ungroup",
                    "object ungroup outline",
                    "paint brush",
                    "tint",
                    "align center",
                    "align justify",
                    "align left",
                    "align right",
                    "bold",
                    "font",
                    "heading",
                    "i cursor",
                    "indent",
                    "italic",
                    "linkify",
                    "list",
                    "list alternate",
                    "list alternate outline",
                    "list ol",
                    "list ul",
                    "outdent",
                    "paragraph",
                    "quote left",
                    "quote right",
                    "strikethrough",
                    "subscript",
                    "superscript",
                    "th",
                    "th large",
                    "th list",
                    "trash",
                    "trash alternate",
                    "trash alternate outline",
                    "underline",
                    "unlink",
                    "file archive",
                    "file archive outline",
                    "file excel",
                    "file excel outline",
                    "file image",
                    "file image outline",
                    "file pdf",
                    "file pdf outline",
                    "file powerpoint",
                    "file powerpoint outline",
                    "file word",
                    "file word outline",
                    "genderless",
                    "mars",
                    "mars double",
                    "mars stroke",
                    "mars stroke horizontal",
                    "mars stroke vertical",
                    "mercury",
                    "neuter",
                    "transgender",
                    "transgender alternate",
                    "venus",
                    "venus double",
                    "venus mars",
                    "hand lizard",
                    "hand lizard outline",
                    "hand paper",
                    "hand paper outline",
                    "hand peace",
                    "hand peace outline",
                    "hand rock",
                    "hand rock outline",
                    "hand scissors",
                    "hand scissors outline",
                    "hand spock",
                    "hand spock outline",
                    "handshake",
                    "handshake outline",
                    "thumbs down",
                    "thumbs down outline",
                    "thumbs up",
                    "thumbs up outline",
                    "ambulance",
                    "h square",
                    "heart",
                    "heart outline",
                    "heartbeat",
                    "hospital",
                    "hospital outline",
                    "medkit",
                    "plus square",
                    "plus square outline",
                    "stethoscope",
                    "user md",
                    "bolt",
                    "camera",
                    "camera retro",
                    "id badge",
                    "id badge outline",
                    "id card",
                    "id card outline",
                    "image",
                    "image outline",
                    "images",
                    "images outline",
                    "sliders horizontal",
                    "ban",
                    "bars",
                    "beer",
                    "check",
                    "check circle",
                    "check circle outline",
                    "check square",
                    "check square outline",
                    "cloud",
                    "cog",
                    "cogs",
                    "database",
                    "dot circle",
                    "dot circle outline",
                    "ellipsis horizontal",
                    "ellipsis vertical",
                    "exclamation",
                    "exclamation circle",
                    "exclamation triangle",
                    "flag",
                    "flag outline",
                    "flag checkered",
                    "frown",
                    "frown outline",
                    "hashtag",
                    "home",
                    "info",
                    "info circle",
                    "magic",
                    "meh",
                    "meh outline",
                    "minus",
                    "minus circle",
                    "minus square",
                    "minus square outline",
                    "plus",
                    "plus circle",
                    "question",
                    "search",
                    "search minus",
                    "search plus",
                    "share alternate",
                    "share alternate square",
                    "signal",
                    "smile",
                    "smile outline",
                    "star",
                    "star outline",
                    "star half",
                    "star half outline",
                    "times",
                    "times circle",
                    "times circle outline",
                    "toggle off",
                    "toggle on",
                    "trophy",
                    "user",
                    "user outline",
                    "user circle",
                    "user circle outline",
                    "box",
                    "boxes",
                    "clipboard check",
                    "clipboard list",
                    "dolly",
                    "dolly flatbed",
                    "pallet",
                    "shipping fast",
                    "truck",
                    "warehouse",
                    "anchor",
                    "bed",
                    "bicycle",
                    "binoculars",
                    "bomb",
                    "bookmark",
                    "bookmark outline",
                    "car",
                    "fighter jet",
                    "fire",
                    "flask",
                    "gamepad",
                    "gavel",
                    "gift",
                    "glass martini",
                    "graduation cap",
                    "key",
                    "leaf",
                    "lemon",
                    "lemon outline",
                    "life ring",
                    "life ring outline",
                    "lightbulb",
                    "lightbulb outline",
                    "magnet",
                    "male",
                    "map",
                    "map outline",
                    "map marker",
                    "map marker alternate",
                    "map pin",
                    "map signs",
                    "motorcycle",
                    "newspaper",
                    "newspaper outline",
                    "paw",
                    "plane",
                    "road",
                    "rocket",
                    "ship",
                    "shopping bag",
                    "shopping basket",
                    "shopping cart",
                    "shower",
                    "street view",
                    "subway",
                    "taxi",
                    "ticket alternate",
                    "train",
                    "tree",
                    "umbrella",
                    "university",
                    "utensil spoon",
                    "utensils",
                    "wrench",
                    "band aid",
                    "dna",
                    "first aid",
                    "hospital symbol",
                    "pills",
                    "syringe",
                    "thermometer",
                    "weight",
                    "bus",
                    "cube",
                    "cubes",
                    "futbol",
                    "futbol outline",
                    "gem",
                    "gem outline",
                    "lock",
                    "lock open",
                    "moon",
                    "moon outline",
                    "puzzle piece",
                    "snowflake",
                    "snowflake outline",
                    "space shuttle",
                    "sun",
                    "sun outline",
                    "tachometer alternate",
                    "unlock",
                    "unlock alternate",
                    "cart plus",
                    "credit card",
                    "credit card outline",
                    "square",
                    "square outline",
                    "asterisk",
                    "circle notch",
                    "spinner",
                    "baseball ball",
                    "basketball ball",
                    "bowling ball",
                    "football ball",
                    "golf ball",
                    "hockey puck",
                    "quidditch",
                    "table tennis",
                    "volleyball ball",
                    "battery empty",
                    "battery full",
                    "battery half",
                    "battery quarter",
                    "battery three quarters",
                    "sign in alternate",
                    "sign out alternate",
                    "thermometer empty",
                    "thermometer full",
                    "thermometer half",
                    "thermometer quarter",
                    "thermometer three quarters",
                    "child",
                    "female",
                    "user plus",
                    "user times",
                    "users",
                    "500px",
                    "accessible",
                    "accusoft",
                    "adn",
                    "adversal",
                    "affiliatetheme",
                    "algolia",
                    "amazon",
                    "amazon pay",
                    "amilia",
                    "android",
                    "angellist",
                    "angrycreative",
                    "angular",
                    "app store",
                    "app store ios",
                    "apper",
                    "apple",
                    "apple pay",
                    "asymmetrik",
                    "audible",
                    "autoprefixer",
                    "avianex",
                    "aviato",
                    "aws",
                    "bandcamp",
                    "behance",
                    "behance square",
                    "bimobject",
                    "bitbucket",
                    "bitcoin",
                    "bity",
                    "black tie",
                    "blackberry",
                    "blogger",
                    "blogger b",
                    "bluetooth",
                    "bluetooth b",
                    "btc",
                    "buromobelexperte",
                    "buysellads",
                    "cc amazon pay",
                    "cc amex",
                    "cc apple pay",
                    "cc diners club",
                    "cc discover",
                    "cc jcb",
                    "cc mastercard",
                    "cc paypal",
                    "cc stripe",
                    "cc visa",
                    "centercode",
                    "chrome",
                    "cloudscale",
                    "cloudsmith",
                    "cloudversify",
                    "codepen",
                    "codiepie",
                    "connectdevelop",
                    "contao",
                    "cpanel",
                    "creative commons",
                    "css3",
                    "css3 alternate",
                    "cuttlefish",
                    "d and d",
                    "dashcube",
                    "delicious",
                    "deploydog",
                    "deskpro",
                    "deviantart",
                    "digg",
                    "digital ocean",
                    "discord",
                    "discourse",
                    "dochub",
                    "docker",
                    "draft2digital",
                    "dribbble",
                    "dribbble square",
                    "dropbox",
                    "drupal",
                    "dyalog",
                    "earlybirds",
                    "edge",
                    "elementor",
                    "ember",
                    "empire",
                    "envira",
                    "erlang",
                    "ethereum",
                    "etsy",
                    "expeditedssl",
                    "facebook",
                    "facebook f",
                    "facebook messenger",
                    "facebook square",
                    "firefox",
                    "first order",
                    "firstdraft",
                    "flickr",
                    "flipboard",
                    "fly",
                    "font awesome",
                    "font awesome alternate",
                    "font awesome flag",
                    "fonticons",
                    "fonticons fi",
                    "fort awesome",
                    "fort awesome alternate",
                    "forumbee",
                    "foursquare",
                    "free code camp",
                    "freebsd",
                    "get pocket",
                    "gg",
                    "gg circle",
                    "git",
                    "git square",
                    "github",
                    "github alternate",
                    "github square",
                    "gitkraken",
                    "gitlab",
                    "gitter",
                    "glide",
                    "glide g",
                    "gofore",
                    "goodreads",
                    "goodreads g",
                    "google",
                    "google drive",
                    "google play",
                    "google plus",
                    "google plus g",
                    "google plus square",
                    "google wallet",
                    "gratipay",
                    "grav",
                    "gripfire",
                    "grunt",
                    "gulp",
                    "hacker news",
                    "hacker news square",
                    "hips",
                    "hire a helper",
                    "hooli",
                    "hotjar",
                    "houzz",
                    "html5",
                    "hubspot",
                    "imdb",
                    "instagram",
                    "internet explorer",
                    "ioxhost",
                    "itunes",
                    "itunes note",
                    "jenkins",
                    "joget",
                    "joomla",
                    "js",
                    "js square",
                    "jsfiddle",
                    "keycdn",
                    "kickstarter",
                    "kickstarter k",
                    "korvue",
                    "laravel",
                    "lastfm",
                    "lastfm square",
                    "leanpub",
                    "less",
                    "linechat",
                    "linkedin",
                    "linkedin alternate",
                    "linode",
                    "linux",
                    "lyft",
                    "magento",
                    "maxcdn",
                    "medapps",
                    "medium",
                    "medium m",
                    "medrt",
                    "meetup",
                    "microsoft",
                    "mix",
                    "mixcloud",
                    "mizuni",
                    "modx",
                    "monero",
                    "napster",
                    "nintendo switch",
                    "node",
                    "node js",
                    "npm",
                    "ns8",
                    "nutritionix",
                    "odnoklassniki",
                    "odnoklassniki square",
                    "opencart",
                    "openid",
                    "opera",
                    "optin monster",
                    "osi",
                    "page4",
                    "pagelines",
                    "palfed",
                    "patreon",
                    "paypal",
                    "periscope",
                    "phabricator",
                    "phoenix framework",
                    "php",
                    "pied piper",
                    "pied piper alternate",
                    "pied piper pp",
                    "pinterest",
                    "pinterest p",
                    "pinterest square",
                    "playstation",
                    "product hunt",
                    "pushed",
                    "python",
                    "qq",
                    "quinscape",
                    "quora",
                    "ravelry",
                    "react",
                    "rebel",
                    "redriver",
                    "reddit",
                    "reddit alien",
                    "reddit square",
                    "rendact",
                    "renren",
                    "replyd",
                    "resolving",
                    "rocketchat",
                    "rockrms",
                    "safari",
                    "sass",
                    "schlix",
                    "scribd",
                    "searchengin",
                    "sellcast",
                    "sellsy",
                    "servicestack",
                    "shirtsinbulk",
                    "simplybuilt",
                    "sistrix",
                    "skyatlas",
                    "skype",
                    "slack",
                    "slack hash",
                    "slideshare",
                    "snapchat",
                    "snapchat ghost",
                    "snapchat square",
                    "soundcloud",
                    "speakap",
                    "spotify",
                    "stack exchange",
                    "stack overflow",
                    "staylinked",
                    "steam",
                    "steam square",
                    "steam symbol",
                    "sticker mule",
                    "strava",
                    "stripe",
                    "stripe s",
                    "studiovinari",
                    "stumbleupon",
                    "stumbleupon circle",
                    "superpowers",
                    "supple",
                    "telegram",
                    "telegram plane",
                    "tencent weibo",
                    "themeisle",
                    "trello",
                    "tripadvisor",
                    "tumblr",
                    "tumblr square",
                    "twitch",
                    "twitter",
                    "twitter square",
                    "typo3",
                    "uber",
                    "uikit",
                    "uniregistry",
                    "untappd",
                    "usb",
                    "ussunnah",
                    "vaadin",
                    "viacoin",
                    "viadeo",
                    "viadeo square",
                    "viber",
                    "vimeo",
                    "vimeo square",
                    "vimeo v",
                    "vine",
                    "vk",
                    "vnv",
                    "vuejs",
                    "wechat",
                    "weibo",
                    "weixin",
                    "whatsapp",
                    "whatsapp square",
                    "whmcs",
                    "wikipedia w",
                    "windows",
                    "wordpress",
                    "wordpress simple",
                    "wpbeginner",
                    "wpexplorer",
                    "wpforms",
                    "xbox",
                    "xing",
                    "xing square",
                    "y combinator",
                    "yahoo",
                    "yandex",
                    "yandex international",
                    "yelp",
                    "yoast",
                    "youtube",
                    "youtube square",
                    "chess rock",
                    "ordered list",
                    "unordered list",
                    "user doctor",
                    "shield",
                    "puzzle",
                    "add circle",
                    "add square",
                    "add to calendar",
                    "add to cart",
                    "add user",
                    "add",
                    "alarm mute",
                    "alarm",
                    "ald",
                    "als",
                    "announcement",
                    "area chart",
                    "area graph",
                    "arrow down cart",
                    "asexual",
                    "asl interpreting",
                    "asl",
                    "assistive listening devices",
                    "attach",
                    "attention",
                    "balance",
                    "bar",
                    "bathtub",
                    "battery four",
                    "battery high",
                    "battery low",
                    "battery one",
                    "battery three",
                    "battery two",
                    "battery zero",
                    "birthday",
                    "block layout",
                    "bluetooth alternative",
                    "broken chain",
                    "browser",
                    "call square",
                    "call",
                    "cancel",
                    "cart",
                    "cc",
                    "chain",
                    "chat",
                    "checked calendar",
                    "checkmark",
                    "circle notched",
                    "close",
                    "cny",
                    "cocktail",
                    "commenting",
                    "computer",
                    "configure",
                    "content",
                    "deafness",
                    "delete calendar",
                    "delete",
                    "detective",
                    "discussions",
                    "doctor",
                    "dollar",
                    "dont",
                    "drivers license",
                    "dropdown",
                    "emergency",
                    "envira gallery",
                    "erase",
                    "eur",
                    "euro",
                    "eyedropper",
                    "factory",
                    "favorite",
                    "feed",
                    "female homosexual",
                    "file text",
                    "file text outline",
                    "find",
                    "fork",
                    "game",
                    "gay",
                    "gbp",
                    "google plus circle",
                    "google plus official",
                    "grab",
                    "graduation",
                    "grid layout",
                    "group",
                    "h",
                    "hand victory",
                    "handicap",
                    "hard of hearing",
                    "header",
                    "help circle",
                    "help",
                    "heterosexual",
                    "hide",
                    "hotel",
                    "hourglass four",
                    "hourglass full",
                    "hourglass one",
                    "hourglass three",
                    "hourglass two",
                    "idea",
                    "ils",
                    "in cart",
                    "inr",
                    "intergender",
                    "intersex",
                    "jpy",
                    "krw",
                    "lab",
                    "law",
                    "legal",
                    "lesbian",
                    "lightning",
                    "like",
                    "line graph",
                    "linkedin square",
                    "lira",
                    "list layout",
                    "magnify",
                    "mail forward",
                    "mail square",
                    "mail",
                    "male homosexual",
                    "man",
                    "marker",
                    "mars alternate",
                    "mars horizontal",
                    "mars vertical",
                    "microsoft edge",
                    "military",
                    "ms edge",
                    "mute",
                    "new pied piper",
                    "non binary transgender",
                    "numbered list",
                    "options",
                    "other gender horizontal",
                    "other gender vertical",
                    "other gender",
                    "payment",
                    "paypal card",
                    "pencil square",
                    "photo",
                    "picture",
                    "pie chart",
                    "pie graph",
                    "pied piper hat",
                    "pin",
                    "plus cart",
                    "point",
                    "pointing down",
                    "pointing left",
                    "pointing right",
                    "pointing up",
                    "pound",
                    "power cord",
                    "power",
                    "privacy",
                    "r circle",
                    "rain",
                    "record",
                    "refresh",
                    "remove circle",
                    "remove from calendar",
                    "remove user",
                    "remove",
                    "repeat",
                    "rmb",
                    "rouble",
                    "rub",
                    "ruble",
                    "rupee",
                    "s15",
                    "selected radio",
                    "send",
                    "setting",
                    "settings",
                    "shekel",
                    "sheqel",
                    "shipping",
                    "shop",
                    "shuffle",
                    "shutdown",
                    "sidebar",
                    "signing",
                    "signup",
                    "sliders",
                    "soccer",
                    "sort alphabet ascending",
                    "sort alphabet descending",
                    "sort ascending",
                    "sort content ascending",
                    "sort content descending",
                    "sort descending",
                    "sort numeric ascending",
                    "sort numeric descending",
                    "sound",
                    "spy",
                    "stripe card",
                    "student",
                    "talk",
                    "target",
                    "teletype",
                    "television",
                    "text cursor",
                    "text telephone",
                    "theme",
                    "thumb tack",
                    "time",
                    "tm",
                    "toggle down",
                    "toggle left",
                    "toggle right",
                    "toggle up",
                    "translate",
                    "travel",
                    "treatment",
                    "triangle down",
                    "triangle left",
                    "triangle right",
                    "triangle up",
                    "try",
                    "unhide",
                    "unlinkify",
                    "unmute",
                    "usd",
                    "user cancel",
                    "user close",
                    "user delete",
                    "user x",
                    "vcard",
                    "video camera",
                    "video play",
                    "volume control phone",
                    "wait",
                    "warning circle",
                    "warning sign",
                    "warning",
                    "wi-fi",
                    "winner",
                    "wizard",
                    "woman",
                    "won",
                    "wordpress beginner",
                    "wordpress forms",
                    "world",
                    "write square",
                    "x",
                    "yen",
                    "zip",
                    "zoom in",
                    "zoom out",
                    "zoom",
                    "bitbucket square",
                    "checkmark box",
                    "circle thin",
                    "compose",
                    "conversation",
                    "credit card alternative",
                    "currency",
                    "dashboard",
                    "diamond",
                    "disk",
                    "external share",
                    "external square",
                    "external",
                    "facebook official",
                    "food",
                    "hourglass zero",
                    "level down",
                    "level up",
                    "log out",
                    "meanpath",
                    "money",
                    "move",
                    "pencil",
                    "protect",
                    "radio",
                    "remove bookmark",
                    "resize horizontal",
                    "resize vertical",
                    "sign in",
                    "sign out",
                    "spoon",
                    "star half empty",
                    "star half full",
                    "ticket",
                    "times rectangle",
                    "write"
                  ]
                },
                "type": { "type": "string" },
                "restartPolicy": {
                  "type": "string",
                  "description": "Restart policy"
                },
                "desiredStatus": {
                  "type": "string",
                  "description": "Desired status",
                  "enum": ["stopped", "running"]
                },
                "registryType": {
                  "type": "string",
                  "description": "Registry type",
                  "enum": ["public", "private"]
                },
                "category": {
                  "type": "string",
                  "description": "Container categories",
                  "enum": [
                    "Receiver",
                    "Connectivity",
                    "Data Acquisition",
                    "IT/Cloud Connectors",
                    "Services",
                    "Applications"
                  ]
                },
                "settingsPageId": {
                  "type": "string",
                  "description": "Settings page",
                  "enum": [
                    "gatewayTelemetry",
                    "networkTopology",
                    "opcuaPublisher",
                    "ainConnector",
                    "netFieldProxy",
                    "netFieldAppPlatformConnector"
                  ]
                },
                "shortDescription": {
                  "type": "string",
                  "description": "Short description, max(60)",
                  "maxLength": 60
                },
                "description": {
                  "type": "string",
                  "description": "Description, max(3000)",
                  "maxLength": 3000
                },
                "credentials": {
                  "type": "object",
                  "properties": {
                    "address": { "type": "string" },
                    "username": { "type": "string" }
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "createdAt",
                  "default": "2021-05-21T06:02:07.500Z"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "updatedAt",
                  "default": "2021-05-21T06:02:07.500Z"
                },
                "sharedWithOrganisations": {
                  "type": "array",
                  "x-constraint": { "unique": "id" },
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "number" },
                      "name": { "type": "string" }
                    }
                  }
                },
                "versions": {
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Random uuid v4.",
                        "default": "7adb258e-3ee7-4299-bcb9-513fab03f7d4",
                        "x-format": { "guid": { "version": "uuidv4" } }
                      },
                      "version": {
                        "type": "string",
                        "description": "Version name"
                      },
                      "useGlobalCredentials": {
                        "type": "boolean",
                        "description": "Use global credentials"
                      },
                      "releaseNotes": {
                        "type": "string",
                        "description": "Release notes"
                      },
                      "imageUri": {
                        "type": "string",
                        "description": "Image URI"
                      },
                      "registryType": {
                        "type": "string",
                        "description": "Registry type",
                        "enum": ["public", "private"]
                      },
                      "credentials": {
                        "type": "object",
                        "properties": {
                          "address": { "type": "string" },
                          "username": { "type": "string" }
                        }
                      },
                      "processorArchitecture": {
                        "type": "string",
                        "description": "Processor architecture",
                        "enum": [
                          "Linux-X86",
                          "Linux-X64",
                          "Linux-ARM32V7",
                          "Linux-ARM64V8",
                          "All"
                        ]
                      },
                      "containerCreateOptions": {
                        "type": "object",
                        "description": "See latest Docker documentation",
                        "x-meta": { "swaggerType": "object" },
                        "properties": {
                          "Hostname": { "type": "string" },
                          "Domainname": { "type": "string" },
                          "User": { "type": "string" },
                          "AttachStdin": { "type": "boolean" },
                          "AttachStdout": { "type": "boolean" },
                          "AttachStderr": { "type": "boolean" },
                          "ExposedPorts": {
                            "type": "object",
                            "properties": { "string": { "type": "object" } }
                          },
                          "Tty": { "type": "boolean" },
                          "OpenStdin": { "type": "boolean" },
                          "StdinOnce": { "type": "boolean" },
                          "Env": {
                            "type": "string",
                            "x-alternatives": [
                              { "type": "string" },
                              { "type": "array", "items": { "type": "string" } }
                            ]
                          },
                          "Cmd": {
                            "type": "string",
                            "x-alternatives": [
                              { "type": "string" },
                              { "type": "array", "items": { "type": "string" } }
                            ]
                          },
                          "Healthcheck": {
                            "type": "object",
                            "properties": {
                              "Test": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "Interval": {
                                "type": "string",
                                "enum": [0],
                                "x-alternatives": [
                                  { "type": "string", "enum": [0] },
                                  { "type": "integer", "minimum": 1000000 }
                                ]
                              },
                              "Timeout": {
                                "type": "string",
                                "enum": [0],
                                "x-alternatives": [
                                  { "type": "string", "enum": [0] },
                                  { "type": "integer", "minimum": 1000000 }
                                ]
                              },
                              "Retries": { "type": "integer", "minimum": 0 },
                              "StartPeriod": {
                                "type": "string",
                                "enum": [0],
                                "x-alternatives": [
                                  { "type": "string", "enum": [0] },
                                  { "type": "integer", "minimum": 1000000 }
                                ]
                              }
                            }
                          },
                          "ArgsEscaped": { "type": "boolean" },
                          "Image": { "type": "string" },
                          "Volumes": {
                            "type": "object",
                            "properties": { "string": { "type": "object" } }
                          },
                          "WorkingDir": { "type": "string" },
                          "Entrypoint": {
                            "x-alternatives": [
                              {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              { "type": "string" }
                            ],
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "NetworkDisabled": { "type": "boolean" },
                          "MacAddress": {
                            "type": "string",
                            "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$"
                          },
                          "OnBuild": {
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "Labels": {
                            "type": "object",
                            "properties": { "string": { "type": "string" } }
                          },
                          "StopSignal": { "type": "string" },
                          "StopTimeout": { "type": "integer", "minimum": 0 },
                          "Shell": {
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "HostConfig": {
                            "type": "object",
                            "properties": {
                              "MaximumIOps": { "type": "integer" },
                              "MaximumIOBps": { "type": "integer" },
                              "CpuShares": { "type": "integer" },
                              "Memory": { "type": "integer" },
                              "CgroupParent": { "type": "string" },
                              "BlkioWeight": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 1000
                              },
                              "BlkioWeightDevice": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Weight": {
                                      "type": "integer",
                                      "minimum": 0
                                    }
                                  }
                                }
                              },
                              "BlkioDeviceReadBps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Rate": { "type": "integer", "minimum": 0 }
                                  }
                                }
                              },
                              "BlkioDeviceWriteBps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Rate": { "type": "integer", "minimum": 0 }
                                  }
                                }
                              },
                              "BlkioDeviceReadIOps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Rate": { "type": "integer", "minimum": 0 }
                                  }
                                }
                              },
                              "BlkioDeviceWriteIOps": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Path": { "type": "string" },
                                    "Rate": { "type": "integer", "minimum": 0 }
                                  }
                                }
                              },
                              "CpuPeriod": { "type": "integer" },
                              "CpuQuota": { "type": "integer" },
                              "CpuRealtimePeriod": { "type": "integer" },
                              "CpuRealtimeRuntime": { "type": "integer" },
                              "CpusetCpus": { "type": "string" },
                              "CpusetMems": { "type": "string" },
                              "Devices": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "PathOnHost": { "type": "string" },
                                    "PathInContainer": { "type": "string" },
                                    "CgroupPermissions": { "type": "string" }
                                  }
                                }
                              },
                              "DeviceCgroupRules": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "DiskQuota": { "type": "integer" },
                              "KernelMemory": { "type": "integer" },
                              "MemoryReservation": { "type": "integer" },
                              "MemorySwap": { "type": "integer" },
                              "MemorySwappiness": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 100
                              },
                              "NanoCPUs": { "type": "integer" },
                              "OomKillDisable": { "type": "boolean" },
                              "PidsLimit": { "type": "integer" },
                              "Ulimits": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Name": { "type": "string" },
                                    "Soft": { "type": "integer" },
                                    "Hard": { "type": "integer" }
                                  }
                                }
                              },
                              "CpuCount": { "type": "integer" },
                              "CpuPercent": { "type": "integer" },
                              "IOMaximumIOps": { "type": "integer" },
                              "IOMaximumBandwidth": { "type": "integer" },
                              "Binds": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": ".+:.+(:.+)?"
                                }
                              },
                              "ContainerIDFile": { "type": "string" },
                              "LogConfig": {
                                "type": "object",
                                "properties": {
                                  "Type": {
                                    "type": "string",
                                    "enum": [
                                      "json-file",
                                      "syslog",
                                      "journald",
                                      "gelf",
                                      "fluentd",
                                      "awslogs",
                                      "splunk",
                                      "etwlogs",
                                      "none"
                                    ]
                                  },
                                  "Config": {
                                    "type": "object",
                                    "properties": {
                                      "string": { "type": "string" }
                                    }
                                  }
                                }
                              },
                              "NetworkMode": {
                                "type": "string",
                                "enum": ["bridge", "host", "none"],
                                "x-alternatives": [
                                  {
                                    "type": "string",
                                    "enum": ["bridge", "host", "none"]
                                  },
                                  {
                                    "type": "string",
                                    "pattern": "^container:.*$"
                                  }
                                ]
                              },
                              "PortBindings": {
                                "type": "object",
                                "properties": {
                                  "string": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "HostIp": { "type": "string" },
                                        "HostPort": { "type": "string" }
                                      }
                                    }
                                  }
                                }
                              },
                              "RestartPolicy": {
                                "type": "object",
                                "properties": {
                                  "Name": {
                                    "type": "string",
                                    "enum": [
                                      "always",
                                      "unless-stopped",
                                      "on-failure"
                                    ]
                                  },
                                  "MaximumRetryCount": { "type": "integer" }
                                }
                              },
                              "AutoRemove": { "type": "boolean" },
                              "VolumeDriver": { "type": "string" },
                              "VolumesFrom": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": "^.+(:(ro|rw))?$"
                                }
                              },
                              "Mounts": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "Target": { "type": "string" },
                                    "Source": { "type": "string" },
                                    "Type": {
                                      "type": "string",
                                      "enum": ["bind", "volume", "tmpfs"]
                                    },
                                    "ReadOnly": { "type": "boolean" },
                                    "Consistency": { "type": "string" },
                                    "BindOptions": {
                                      "type": "object",
                                      "properties": {
                                        "Propagation": {
                                          "type": "string",
                                          "enum": [
                                            "private",
                                            "rprivate",
                                            "shared",
                                            "rshared",
                                            "slave",
                                            "rslave"
                                          ]
                                        }
                                      }
                                    },
                                    "VolumeOptions": {
                                      "type": "object",
                                      "properties": {
                                        "NoCopy": { "type": "boolean" },
                                        "Labels": {
                                          "type": "object",
                                          "properties": {
                                            "string": { "type": "string" }
                                          }
                                        },
                                        "DriverConfig": {
                                          "type": "object",
                                          "properties": {
                                            "Name": { "type": "string" },
                                            "Options": {
                                              "type": "object",
                                              "properties": {
                                                "string": { "type": "string" }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "TmpfsOptions": {
                                      "type": "object",
                                      "properties": {
                                        "SizeBytes": { "type": "integer" },
                                        "Mode": { "type": "integer" }
                                      }
                                    }
                                  }
                                }
                              },
                              "CapAdd": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "CapDrop": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "Dns": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "DnsOptions": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "DnsSearch": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "ExtraHosts": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": "^.+:.+$"
                                }
                              },
                              "GroupAdd": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "IpcMode": { "type": "string" },
                              "Cgroup": { "type": "string" },
                              "Links": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "pattern": "^.+:.+$"
                                }
                              },
                              "OomScoreAdj": { "type": "integer" },
                              "PidMode": {
                                "type": "string",
                                "pattern": "^.+(:.+)?$"
                              },
                              "Privileged": { "type": "boolean" },
                              "PublishAllPorts": { "type": "boolean" },
                              "ReadonlyRootfs": { "type": "boolean" },
                              "SecurityOpt": {
                                "type": "array",
                                "items": { "type": "string" }
                              },
                              "StorageOpt": {
                                "type": "object",
                                "properties": { "string": { "type": "string" } }
                              },
                              "Tmpfs": {
                                "type": "object",
                                "properties": { "string": { "type": "string" } }
                              },
                              "UTSMode": { "type": "string" },
                              "UsernsMode": { "type": "string" },
                              "ShmSize": { "type": "integer", "minimum": 0 },
                              "Sysctls": {
                                "type": "object",
                                "properties": { "string": { "type": "string" } }
                              },
                              "Runtime": { "type": "string" },
                              "ConsoleSize": {
                                "type": "array",
                                "x-constraint": { "length": 2 },
                                "items": { "type": "integer", "minimum": 0 }
                              },
                              "Isolation": {
                                "type": "string",
                                "enum": ["default", "process", "hyperv"]
                              }
                            }
                          },
                          "NetworkingConfig": {
                            "type": "object",
                            "properties": {
                              "EndpointsConfig": {
                                "type": "object",
                                "properties": {
                                  "string": {
                                    "type": "object",
                                    "properties": {
                                      "IPAMConfig": {
                                        "type": "object",
                                        "properties": {
                                          "IPv4Address": {
                                            "type": "string",
                                            "x-format": {
                                              "ip": {
                                                "cidr": "optional",
                                                "version": ["ipv4"]
                                              }
                                            }
                                          },
                                          "IPv6Address": {
                                            "type": "string",
                                            "x-format": {
                                              "ip": {
                                                "cidr": "optional",
                                                "version": ["ipv6"]
                                              }
                                            }
                                          },
                                          "LinkLocalIPs": {
                                            "type": "array",
                                            "items": { "type": "string" }
                                          }
                                        }
                                      },
                                      "Links": {
                                        "type": "array",
                                        "items": { "type": "string" }
                                      },
                                      "Aliases": {
                                        "type": "array",
                                        "items": { "type": "string" }
                                      },
                                      "NetworkId": { "type": "string" },
                                      "EndpointId": { "type": "string" },
                                      "Gateway": { "type": "string" },
                                      "IPAddress": {
                                        "type": "string",
                                        "x-format": {
                                          "ip": {
                                            "cidr": "optional",
                                            "version": ["ipv4"]
                                          }
                                        }
                                      },
                                      "IPPrefixLen": { "type": "integer" },
                                      "IPv6Gateway": { "type": "string" },
                                      "GlobalIPv6Address": {
                                        "type": "string",
                                        "x-format": {
                                          "ip": {
                                            "cidr": "optional",
                                            "version": ["ipv6"]
                                          }
                                        }
                                      },
                                      "GlobalIPv6PrefixLen": {
                                        "type": "integer"
                                      },
                                      "MacAddress": { "type": "string" }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "containerTwinDesiredOptions": { "type": "object" },
                      "environmentVariables": {
                        "type": "array",
                        "description": "An array of object containing environment variables",
                        "x-meta": { "swaggerType": "array" },
                        "x-constraint": { "unique": "key" },
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": { "type": "string" },
                            "value": { "type": "string" }
                          },
                          "required": ["key", "value"]
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "createdAt",
                        "default": "2021-05-21T06:02:07.766Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "updatedAt",
                        "default": "2021-05-21T06:02:07.766Z"
                      }
                    }
                  }
                },
                "mqttTopics": {
                  "type": "array",
                  "description": "MQTT topics",
                  "x-constraint": { "unique": true },
                  "items": { "type": "string" }
                }
              }
            },
            "description": "Container unshared"
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Container(s) not found / Organisation(s) not found"
          }
        }
      }
    },
    "/devices/{deviceId}/notifications/{notificationId}": {
      "delete": {
        "summary": "Delete specific device notification",
        "operationId": "deleteDevicesDeviceidNotificationsNotificationid",
        "description": "devices<br/><br/>deleteDeviceNotifications",
        "parameters": [
          {
            "type": "string",
            "description": "Access token / Key token",
            "name": "authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The id property defines the unique id / objectId",
            "pattern": "^[0-9a-fA-F]{24}$",
            "name": "notificationId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["deviceNotifications"],
        "security": [{ "jwt": [] }],
        "responses": {
          "200": {
            "description": "Device notification deleted",
            "schema": { "type": "string" }
          },
          "400": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Bad request"
          },
          "401": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid authorization"
          },
          "403": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Invalid permissions"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The code property defines the HTTP status code of the response."
                },
                "appCode": {
                  "type": "string",
                  "description": "The appCode property defines the application specific code of the response."
                },
                "message": {
                  "type": "string",
                  "description": "The message property defines the error message of the response."
                }
              },
              "required": ["code", "appCode", "message"]
            },
            "description": "Device(s) not found / Device notification(s) not found"
          }
        }
      }
    }
  }
}
