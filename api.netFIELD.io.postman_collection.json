{
	"info": {
		"_postman_id": "e605b843-f8a1-4590-9bd5-61bdcc517715",
		"name": "netFIELD CLOUD API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Generate authorization token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{authheadertoken}}",
								"description": "Authorization header token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"grantType\": \"password\",\r\n  \"refreshToken\": \"string\",\r\n  \"email\": \"string\",\r\n  \"password\": \"string\",\r\n  \"stayLoggedIn\": false\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/auth",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"auth"
							]
						},
						"description": "Generate authorization/refresh token."
					},
					"response": []
				},
				{
					"name": "Generate refresh token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{authheadertoken}}",
								"description": "Authorization header token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"grantType\": \"refreshToken\",\r\n  \"refreshToken\": \"string\",\r\n  \"email\": \"string\",\r\n  \"password\": \"string\",\r\n  \"stayLoggedIn\": false\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/auth",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"auth"
							]
						},
						"description": "Generate authorization/refresh token."
					},
					"response": []
				},
				{
					"name": "Revoke token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/auth/revoke",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"auth",
								"revoke"
							]
						},
						"description": "Revoke token."
					},
					"response": []
				},
				{
					"name": "Verify token",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/auth/verify",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"auth",
								"verify"
							]
						},
						"description": "Verify token."
					},
					"response": []
				}
			]
		},
		{
			"name": "Containers",
			"item": [
				{
					"name": "Get Containers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/containers?page={{page}}&limit={{limit}}&sortBy={{sortBy}}&sortOrder={{sortOrder}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"containers"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "sortBy",
									"value": "{{sortBy}}"
								},
								{
									"key": "sortOrder",
									"value": "{{sortOrder}}"
								}
							]
						},
						"description": "Get list of containers from the store"
					},
					"response": []
				},
				{
					"name": "Create container",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "Access token",
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "organisationId",
									"value": "",
									"description": "number",
									"type": "text"
								},
								{
									"key": "displayName",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "containerName",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "containerAccess",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "sharedOrganisationIds",
									"value": "",
									"description": "array\n",
									"type": "text"
								},
								{
									"key": "image",
									"description": "file",
									"type": "file",
									"src": []
								},
								{
									"key": "icon",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "type",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "restartPolicy",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "desiredStatus",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "registryType",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "credentials",
									"value": "",
									"description": "object",
									"type": "text"
								},
								{
									"key": "category",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "settingsPageId",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "shortDescription",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "description",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "versions",
									"value": "",
									"description": "array",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/containers",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"containers"
							]
						},
						"description": "Create new container to the store"
					},
					"response": []
				},
				{
					"name": "Delete Container",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/containers/{{containerId}}?deleteContainerReferences={{deleteContainerReferences}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"containers",
								"{{containerId}}"
							],
							"query": [
								{
									"key": "deleteContainerReferences",
									"value": "{{deleteContainerReferences}}",
									"description": "boolean"
								}
							]
						},
						"description": "Delete container from the store"
					},
					"response": []
				},
				{
					"name": "Get Container by Id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/containers/{{containerId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"containers",
								"{{containerId}}"
							]
						},
						"description": "Get a container from the store"
					},
					"response": []
				},
				{
					"name": "Update Container",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "organisationId",
									"value": "",
									"description": "double",
									"type": "text"
								},
								{
									"key": "displayName",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "containerName",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "containerAccess",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "sharedOrganisationIds",
									"value": "",
									"description": "array[integer]",
									"type": "text"
								},
								{
									"key": "image",
									"description": "file",
									"type": "file",
									"src": []
								},
								{
									"key": "icon",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "type",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "restartPolicy",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "desiredStatus",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "registryType",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "category",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "settingsPageId",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "shortDescription",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "description",
									"value": "",
									"description": "string",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/containers/{{containerId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"containers",
								"{{containerId}}"
							]
						},
						"description": "Update a container from the store"
					},
					"response": []
				},
				{
					"name": "Share container",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"organisationIds\": []\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/containers/{{containerId}}/share",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"containers",
								"{{containerId}}",
								"share"
							]
						},
						"description": "Share container with other organisaitons"
					},
					"response": []
				},
				{
					"name": "Unshare container",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/containers/{{containerId}}/share/{{organisationId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"containers",
								"{{containerId}}",
								"share",
								"{{organisationId}}"
							]
						},
						"description": "Unshare container with organisation"
					},
					"response": []
				},
				{
					"name": "Get Container's versions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/containers/{{containerId}}/versions?page={{page}}&limit={{limit}}&sortBy={{sortBy}}&sortOrder={{sortOrder}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"containers",
								"{{containerId}}",
								"versions"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "sortBy",
									"value": "{{sortBy}}"
								},
								{
									"key": "sortOrder",
									"value": "{{sortOrder}}"
								}
							]
						},
						"description": "Get a container from the store"
					},
					"response": []
				},
				{
					"name": "Create container version",
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "Access token",
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "version",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "imageUri",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "releaseNotes",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "useGlobalCredentials",
									"value": "",
									"description": "boolean",
									"type": "text"
								},
								{
									"key": "registryType",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "credentials",
									"value": "",
									"description": "object",
									"type": "text"
								},
								{
									"key": "processorArchitecture",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "containerCreateOptions",
									"value": "",
									"description": "object",
									"type": "text"
								},
								{
									"key": "containerTwinDesiredOptions",
									"value": "",
									"type": "text"
								},
								{
									"key": "environmentVariables",
									"value": "",
									"description": "array",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/containers/{{containerId}}/versions",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"containers",
								"{{containerId}}",
								"versions"
							]
						},
						"description": "Create new container to the store"
					},
					"response": []
				},
				{
					"name": "Delete Container version",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/containers/{{containerId}}/versions/{{versionId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"containers",
								"{{containerId}}",
								"versions",
								"{{versionId}}"
							]
						},
						"description": "Delete container from the store"
					},
					"response": []
				},
				{
					"name": "Get Container's version",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/containers/{{containerId}}/versions/{{versionId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"containers",
								"{{containerId}}",
								"versions",
								"{{versionId}}"
							]
						},
						"description": "Get a container from the store"
					},
					"response": []
				},
				{
					"name": "Update container version",
					"request": {
						"method": "PUT",
						"header": [
							{
								"description": "Access token",
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "version",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "imageUri",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "releaseNotes",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "useGlobalCredentials",
									"value": "",
									"description": "boolean",
									"type": "text"
								},
								{
									"key": "registryType",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "credentials",
									"value": "",
									"description": "object",
									"type": "text"
								},
								{
									"key": "processorArchitecture",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "containerCreateOptions",
									"value": "",
									"description": "object",
									"type": "text"
								},
								{
									"key": "containerTwinDesiredOptions",
									"value": "",
									"type": "text"
								},
								{
									"key": "environmentVariables",
									"value": "",
									"description": "array",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/containers/{{containerId}}/versions/{{versionId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"containers",
								"{{containerId}}",
								"versions",
								"{{versionId}}"
							]
						},
						"description": "Create new container to the store"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "deviceContainers",
			"item": [
				{
					"name": "Get list of deployable containers to device",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/{{deviceId}}/containers/deployable?page={{page}}&limit={{limit}}&sortBy={{sortBy}}&sortOrder={{sortOrder}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"{{deviceId}}",
								"containers",
								"deployable"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "sortBy",
									"value": "{{sortBy}}"
								},
								{
									"key": "sortOrder",
									"value": "{{sortOrder}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get list of installed containers to device",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/{{deviceId}}/containers/installed?page={{page}}&limit={{limit}}&sortBy={{sortBy}}&sortOrder={{sortOrder}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"{{deviceId}}",
								"containers",
								"installed"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "sortBy",
									"value": "{{sortBy}}"
								},
								{
									"key": "sortOrder",
									"value": "{{sortOrder}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get device containers routes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/{{deviceId}}/containers/routes",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"{{deviceId}}",
								"containers",
								"routes"
							]
						},
						"description": "Get the routes for the modules installed on the current device"
					},
					"response": []
				},
				{
					"name": "Create Device Container Route",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"\",\r\n  \"source\": \"\",\r\n  \"condition\": \"\",\r\n  \"target\": \"\"\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/{{deviceId}}/containers/routes",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"{{deviceId}}",
								"containers",
								"routes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Device Container Route",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/{{deviceId}}/containers/routes/{{routeId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"{{deviceId}}",
								"containers",
								"routes",
								"{{routeId}}"
							]
						},
						"description": "Delete device container route from a device"
					},
					"response": []
				},
				{
					"name": "Update Device Container Route",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"string\",\r\n  \"name\": \"string\",\r\n  \"source\": \"string\",\r\n  \"condition\": \"string\",\r\n  \"target\": \"string\"\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/{{deviceId}}/routes/{{routeId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"{{deviceId}}",
								"routes",
								"{{routeId}}"
							]
						},
						"description": "Updates values of a device route form device"
					},
					"response": []
				},
				{
					"name": "Delete Installed Device Container",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/{{deviceId}}/containers/{{containerId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"{{deviceId}}",
								"containers",
								"{{containerId}}"
							]
						},
						"description": "Delete Installed Device Container"
					},
					"response": []
				},
				{
					"name": "Get installed container",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/{{deviceId}}/containers/{{containerId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"{{deviceId}}",
								"containers",
								"{{containerId}}"
							]
						},
						"description": "Get a single specific installed container on a device"
					},
					"response": []
				},
				{
					"name": "Install Container to Device",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "version ",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "restartPolicy",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "desiredStatus",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "containerCreateOptions",
									"value": "",
									"type": "text"
								},
								{
									"key": "containerTwinDesiredOptions",
									"value": "",
									"type": "text"
								},
								{
									"key": "environmentVariables",
									"value": "",
									"description": "array",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/{{deviceId}}/containers/{{containerId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"{{deviceId}}",
								"containers",
								"{{containerId}}"
							]
						},
						"description": "Installs (deploy) a container to device. Every module specified in the database has a set of properties. Some or all can be overridden via body attributes."
					},
					"response": []
				},
				{
					"name": "Update Container to Device Copy",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "version ",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "restartPolicy",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "desiredStatus",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "containerCreateOptions",
									"value": "",
									"type": "text"
								},
								{
									"key": "containerTwinDesiredOptions",
									"value": "",
									"type": "text"
								},
								{
									"key": "environmentVariables",
									"value": "",
									"description": "array",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/{{deviceId}}/containers/{{containerId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"{{deviceId}}",
								"containers",
								"{{containerId}}"
							]
						},
						"description": "Installs (deploy) a container to device. Every module specified in the database has a set of properties. Some or all can be overridden via body attributes."
					},
					"response": []
				},
				{
					"name": "Get device container properties",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/{{deviceId}}/containers/{{containerId}}/properties",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"{{deviceId}}",
								"containers",
								"{{containerId}}",
								"properties"
							]
						},
						"description": "Get a single specific installed container on a device"
					},
					"response": []
				},
				{
					"name": "Get device container route",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/{{deviceId}}/containers/routes/{{routeId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"{{deviceId}}",
								"containers",
								"routes",
								"{{routeId}}"
							]
						},
						"description": "Get information about specific device container route"
					},
					"response": []
				},
				{
					"name": "Delete all device containers",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/{{deviceId}}/containers",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"{{deviceId}}",
								"containers"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "deviceCustomFields",
			"item": [
				{
					"name": "Get device all custom fields",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/{{deviceId}}/custom-fields",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"{{deviceId}}",
								"custom-fields"
							]
						},
						"description": "Get device custom fields."
					},
					"response": []
				},
				{
					"name": "Create device custom field",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fieldId\": \"\",\r\n  \"fieldValue\": \"\"\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/{{deviceId}}/custom-fields",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"{{deviceId}}",
								"custom-fields"
							]
						},
						"description": "Create device custom field."
					},
					"response": []
				},
				{
					"name": "Delete device custom field",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/{{deviceId}}/custom-fields/{{fieldId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"{{deviceId}}",
								"custom-fields",
								"{{fieldId}}"
							]
						},
						"description": "Delete device custom field."
					},
					"response": []
				},
				{
					"name": "Get device custom field",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/{{deviceId}}/custom-fields/{{fieldId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"{{deviceId}}",
								"custom-fields",
								"{{fieldId}}"
							]
						},
						"description": "Get device custom field."
					},
					"response": []
				},
				{
					"name": "Update device custom field",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fieldValue\": \"\"\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/{{deviceId}}/custom-fields/{{fieldId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"{{deviceId}}",
								"custom-fields",
								"{{fieldId}}"
							]
						},
						"description": "Update device custom field."
					},
					"response": []
				}
			]
		},
		{
			"name": "deviceNotifications",
			"item": [
				{
					"name": "Delete all device notifications",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access Token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/{{deviceId}}/notification",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"{{deviceId}}",
								"notification"
							]
						},
						"description": "Delete all the notificaitons for a given device"
					},
					"response": []
				},
				{
					"name": "Get device notificaiton",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/{{deviceId}}/notifications",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"{{deviceId}}",
								"notifications"
							]
						},
						"description": "get a single device notifications"
					},
					"response": []
				},
				{
					"name": "Create Device Notification",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"serialNumber\": \"\",\r\n  \"level\": \"\",\r\n  \"message\": \"\"\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/{{deviceId}}/notifications",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"{{deviceId}}",
								"notifications"
							]
						},
						"description": "Create Device Notification"
					},
					"response": []
				},
				{
					"name": "Delete single notification",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access Token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/{{deviceId}}/notification/{{notificationId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"{{deviceId}}",
								"notification",
								"{{notificationId}}"
							]
						},
						"description": "Delete specific device notification"
					},
					"response": []
				}
			]
		},
		{
			"name": "Devices",
			"item": [
				{
					"name": "Get devices",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/devices?organisationId={{organisationId}}&page={{page}}&limit={{limit}}&sortBy={{sortBy}}&sortOrder={{sortOrder}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices"
							],
							"query": [
								{
									"key": "organisationId",
									"value": "{{organisationId}}"
								},
								{
									"key": "page",
									"value": "{{page}}",
									"description": "Page number"
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "Limit of shown items"
								},
								{
									"key": "sortBy",
									"value": "{{sortBy}}",
									"description": "Sort by property"
								},
								{
									"key": "sortOrder",
									"value": "{{sortOrder}}",
									"description": "Sort order (asc/desc)"
								}
							]
						},
						"description": "Get all devices by organisationId."
					},
					"response": []
				},
				{
					"name": "Create device",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"onboardingType\": \"zeroTouch\",\r\n  \"organisationId\": 0,\r\n  \"deviceType\": \"standard\",\r\n  \"serialNumber\": \"string\",\r\n  \"name\": \"string\",\r\n  \"firmwareVersion\": \"string\",\r\n  \"geolocation\": {\r\n    \"longitude\": \"string\",\r\n    \"latitude\": \"string\"\r\n  },\r\n  \"timeToLiveSecs\": 0,\r\n  \"description\": \"string\",\r\n  \"tags\": \"string\",\r\n  \"properties\": [\r\n    {\r\n      \"name\": \"string\",\r\n      \"value\": \"string\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/devices",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices"
							]
						},
						"description": "Create device for organisation."
					},
					"response": []
				},
				{
					"name": "Off-board device",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{keytoken}}",
								"description": "Key token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"serialNumber\": \"\"\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/offboard",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"offboard"
							]
						},
						"description": "Off-board device."
					},
					"response": []
				},
				{
					"name": "On-board device",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{keytoken}}",
								"description": "Key token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"activationCode\": \"string\",\r\n  \"serialNumber\": \"string\",\r\n  \"firmwareVersion\": \"string\",\r\n  \"modelName\": \"string\",\r\n  \"containerJWT\": \"string\",\r\n  \"useManifest\": true\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/onboard/sas",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"onboard",
								"sas"
							]
						},
						"description": "On-board device."
					},
					"response": []
				},
				{
					"name": "Get device statuses",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\tdeviceIds:\n\t[\n\t\t5edf933e08d0372b5cdc02ed\n        5ee084ef08d0372b5cdc02ee\n    ]\n}\n"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/status?deviceIds=",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"status"
							],
							"query": [
								{
									"key": "deviceIds",
									"value": ""
								}
							]
						},
						"description": "Get device statuses."
					},
					"response": []
				},
				{
					"name": "Delete device",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/{{deviceId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"{{deviceId}}"
							]
						},
						"description": "Delete device by deviceId."
					},
					"response": []
				},
				{
					"name": "Get device",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/{{deviceId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"{{deviceId}}"
							]
						},
						"description": "Get device by deviceId."
					},
					"response": []
				},
				{
					"name": "Update device",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"organisationId\": 0,\r\n  \"name\": \"string\",\r\n  \"firmwareVersion\": \"string\",\r\n  \"modelName\": \"string\",\r\n  \"geolocation\": {\r\n    \"longitude\": \"string\",\r\n    \"latitude\": \"string\"\r\n  },\r\n  \"timeToLiveSecs\": 0,\r\n  \"description\": \"string\",\r\n  \"tags\": \"string\",\r\n  \"properties\": [\r\n    {\r\n      \"name\": \"string\",\r\n      \"value\": \"string\"\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/{{deviceId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"{{deviceId}}"
							]
						},
						"description": "Update device by deviceId."
					},
					"response": []
				},
				{
					"name": "Call method on a device container",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"description": "Access token",
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"containerName\": \"string\",\r\n  \"methodName\": \"string\",\r\n  \"methodPayload\": {}\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/{{deviceId}}/methods",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"{{deviceId}}",
								"methods"
							]
						},
						"description": "Call method on a device container"
					},
					"response": []
				},
				{
					"name": "Get device hardware information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/{{deviceId}}/hardware-info",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"{{deviceId}}",
								"hardware-info"
							]
						},
						"description": "Get device hardware information by id"
					},
					"response": []
				},
				{
					"name": "On-board a device to sensor edge",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"equipmentIds\": [\r\n    \"\"\r\n  ]\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/onboard",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"onboard"
							]
						},
						"description": "On-board a device to sensor edge user organisation"
					},
					"response": []
				},
				{
					"name": "Switch device state between enabled and disabled",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/{{deviceId}}/state?enabled={{enabled}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"{{deviceId}}",
								"state"
							],
							"query": [
								{
									"key": "enabled",
									"value": "{{enabled}}",
									"description": "boolean"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "EdgeOS",
			"item": [
				{
					"name": "Get edgeos",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/edgeos/{{edgeosId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"edgeos",
								"{{edgeosId}}"
							]
						},
						"description": "Get EdgeOS"
					},
					"response": []
				},
				{
					"name": "Create edgeos",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "version",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "name",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "platform",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "type",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": []
								},
								{
									"key": "notes",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "links",
									"value": "",
									"description": "array",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/edgeos",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"edgeos"
							]
						},
						"description": "Upload EdgeOS"
					},
					"response": []
				},
				{
					"name": "Delete edgeos",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/edgeos/{{edgeosId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"edgeos",
								"{{edgeosId}}"
							]
						},
						"description": "Delete EdgeOS"
					},
					"response": []
				},
				{
					"name": "Get edgeos list",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/edgeos?page={{page}}&limit={{limit}}&sortBy={{sortBy}}&sortOrder={{sortOrder}}&platform={{platform}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"edgeos"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}",
									"description": "number"
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "number"
								},
								{
									"key": "sortBy",
									"value": "{{sortBy}}",
									"description": "string"
								},
								{
									"key": "sortOrder",
									"value": "{{sortOrder}}",
									"description": "string"
								},
								{
									"key": "platform",
									"value": "{{platform}}",
									"description": "string"
								}
							]
						},
						"description": "Get EdgeOS list"
					},
					"response": []
				},
				{
					"name": "Update edgeos",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "version",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "name",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "platform",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "type",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "notes",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "links",
									"value": "",
									"description": "array",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/edgeos/{{edgeosId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"edgeos",
								"{{edgeosId}}"
							]
						},
						"description": "Update EdgeOS"
					},
					"response": []
				},
				{
					"name": "Get edge OS platforms",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/edgeos/platforms",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"edgeos",
								"platforms"
							]
						},
						"description": "Get all available edge OS platforms"
					},
					"response": []
				}
			]
		},
		{
			"name": "Groups",
			"item": [
				{
					"name": "Delete group",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/groups/{{groupId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"groups",
								"{{groupId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get group by id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/groups/{{groupId}}?depth={{depth}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"groups",
								"{{groupId}}"
							],
							"query": [
								{
									"key": "depth",
									"value": "{{depth}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create group",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"\",\r\n  \"groupType\": \"\"\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/groups/{{groupId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"groups",
								"{{groupId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update group",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"\",\r\n  \"groupType\": \"\"\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/groups/{{groupId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"groups",
								"{{groupId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a dvice from a group",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/groups/{{groupId}}/devices/{{deviceId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"groups",
								"{{groupId}}",
								"devices",
								"{{deviceId}}"
							],
							"query": [
								{
									"key": "Authorization",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Deletes a group item, which is a reference from a certain group to a given device."
					},
					"response": []
				},
				{
					"name": "Add a device to a group",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"name": "Content-Type",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/groups/{{groupId}}/devices/{{deviceId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"groups",
								"{{groupId}}",
								"devices",
								"{{deviceId}}"
							]
						},
						"description": "Creates a Group Item which hold a reference from a give Device to a given Group"
					},
					"response": []
				},
				{
					"name": "Get group items by groupId",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/groups/{{groupId}}/items?page={{page}}&limit={{limit}}&sortBy={{sortBy}}&sortOrder={{sortOrder}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"groups",
								"{{groupId}}",
								"items"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "sortBy",
									"value": "{{sortBy}}"
								},
								{
									"key": "sortOrder",
									"value": "{{sortOrder}}"
								}
							]
						},
						"description": "Get group items by groupId"
					},
					"response": []
				},
				{
					"name": "Add a container to a group",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/groups/{{groupId}}/containers/{{containerId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"groups",
								"{{groupId}}",
								"containers",
								"{{containerId}}"
							]
						},
						"description": "Creates a Group Item which holds a reference from a given Container to a given Group"
					},
					"response": []
				},
				{
					"name": "Delete a container from a group",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/groups/{{groupId}}/containers/{{containerId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"groups",
								"{{groupId}}",
								"containers",
								"{{containerId}}"
							]
						},
						"description": "Deletes a group item, which is a reference from a certain group to a given container."
					},
					"response": []
				}
			]
		},
		{
			"name": "Keys",
			"item": [
				{
					"name": "Get Keys",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/keys?organisationId={{organisationId}}&page={{page}}&limit={{limit}}&sortBy={{sortBy}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"keys"
							],
							"query": [
								{
									"key": "organisationId",
									"value": "{{organisationId}}",
									"description": "number"
								},
								{
									"key": "page",
									"value": "{{page}}",
									"description": "number"
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "number"
								},
								{
									"key": "sortBy",
									"value": "{{sortBy}}",
									"description": "string"
								}
							]
						},
						"description": "Get all keys for End-point usage with key authentication strategy and specific scope of usage according organisation."
					},
					"response": []
				},
				{
					"name": "Create Key",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"organisationId\": 1,\r\n  \"name\": \"\",\r\n  \"type\": \"\",\r\n  \"resources\": [\r\n    {\r\n      \"resource\": \"\",\r\n      \"permissions\": [\r\n        \"\"\r\n      ]\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/keys",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"keys"
							]
						},
						"description": "Create a key for End-point usage with key authentication strategy and specific scope of usage."
					},
					"response": []
				},
				{
					"name": "Get Keys Permissions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/keys/permissions?organisationId={{organisationId}}&page={{page}}&limit={{limit}}&sortBy={{sortBy}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"keys",
								"permissions"
							],
							"query": [
								{
									"key": "organisationId",
									"value": "{{organisationId}}",
									"description": "number"
								},
								{
									"key": "page",
									"value": "{{page}}",
									"description": "number"
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "number"
								},
								{
									"key": "sortBy",
									"value": "{{sortBy}}",
									"description": "string"
								}
							]
						},
						"description": "Get all keys for End-point usage with key authentication strategy and specific scope of usage according organisation."
					},
					"response": []
				},
				{
					"name": "Delete Key by Id",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/keys/{{keyId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"keys",
								"{{keyId}}"
							]
						},
						"description": "Delete a key for End-point usage with key authentication strategy and specific scope of usage."
					},
					"response": []
				},
				{
					"name": "Get Keys by Id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/keys/{{keyId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"keys",
								"{{keyId}}"
							]
						},
						"description": "Get a key for End-point usage with key authentication strategy and specific scope of usage."
					},
					"response": []
				},
				{
					"name": "Update Key by Id",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"\",\r\n  \"type\": \"\",\r\n  \"scope\": [\r\n    {\r\n      \"resource\": \"\",\r\n      \"permissions\": [\r\n        \"\"\r\n      ]\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/keys/{{keyId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"keys",
								"{{keyId}}"
							]
						},
						"description": "Update a key for End-point usage with key authentication strategy and specific scope of usage."
					},
					"response": []
				},
				{
					"name": "Create sensorEdge key",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"organisationId\": 0,\r\n  \"name\": \"string\"\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/keys/sensoredge",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"keys",
								"sensoredge"
							]
						},
						"description": "Create a key for SensorEdge tenant"
					},
					"response": []
				}
			]
		},
		{
			"name": "Notifications",
			"item": [
				{
					"name": "Notification",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"id\": \"string\",\r\n    \"topic\": \"string\",\r\n    \"subject\": \"string\",\r\n    \"data\": {},\r\n    \"eventType\": \"string\",\r\n    \"eventTime\": \"string\",\r\n    \"metadataVersion\": \"string\",\r\n    \"dataVersion\": \"string\"\r\n  }\r\n]"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/notifications",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"notifications"
							]
						},
						"description": "Create a key for End-point usage with key authentication strategy and specific scope of usage."
					},
					"response": []
				}
			]
		},
		{
			"name": "organisationManifests",
			"item": [
				{
					"name": "Get Deployment-Manifests Containers by Org",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/organisations/{{organisationId}}/deployment-manifests/containers?page={{page}}&limit={{limit}}&sortBy={{sortBy}}&sortOrder={{sortOrder}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"organisations",
								"{{organisationId}}",
								"deployment-manifests",
								"containers"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}",
									"description": "Page number"
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "Limit of shown items"
								},
								{
									"key": "sortBy",
									"value": "{{sortBy}}",
									"description": "ort by property"
								},
								{
									"key": "sortOrder",
									"value": "{{sortOrder}}",
									"description": "sort order (asc/desc)"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Container",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/organisations/{{organisationId}}/deployment-manifests/containers/{{containerId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"organisations",
								"{{organisationId}}",
								"deployment-manifests",
								"containers",
								"{{containerId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get deployment manifest container",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/organisations/{{organisationId}}/deployment-manifests/containers/{{containerId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"organisations",
								"{{organisationId}}",
								"deployment-manifests",
								"containers",
								"{{containerId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a container to the deployment manifest",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "restartPolicy",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "desiredStatus",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "containerCreateOptions",
									"value": "",
									"type": "text"
								},
								{
									"key": "containerTwinDesiredOptions",
									"value": "",
									"type": "text"
								},
								{
									"key": "environmentVariables",
									"value": "",
									"description": "array",
									"type": "text"
								},
								{
									"key": "version",
									"value": "",
									"description": "string",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/organisations/{{organisationId}}/deployment-manifests/containers/{{containerId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"organisations",
								"{{organisationId}}",
								"deployment-manifests",
								"containers",
								"{{containerId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a container in deployment manifest",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "restartPolicy",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "desiredStatus",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "containerCreateOptions",
									"value": "",
									"type": "text"
								},
								{
									"key": "containerTwinDesiredOptions",
									"value": "",
									"type": "text"
								},
								{
									"key": "environmentVariables",
									"value": "",
									"description": "array",
									"type": "text"
								},
								{
									"key": "version",
									"value": "",
									"description": "string",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/organisations/{{organisationId}}/deployment-manifests/containers/{{containerId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"organisations",
								"{{organisationId}}",
								"deployment-manifests",
								"containers",
								"{{containerId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Manifest Routes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/organisations/1/deployment-manifests/routes?limit={{limit}}&sortBy={{sortBy}}&sortOrder={{sortOrder}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"organisations",
								"1",
								"deployment-manifests",
								"routes"
							],
							"query": [
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "Limit of shown items"
								},
								{
									"key": "sortBy",
									"value": "{{sortBy}}",
									"description": "Sort by property"
								},
								{
									"key": "sortOrder",
									"value": "{{sortOrder}}",
									"description": "Sort order (asc/desc)"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Route",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"\",\r\n  \"source\": \"\",\r\n  \"condition\": \"\",\r\n  \"target\": \"\"\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/organisations/{{organisationId}}/deployment-manifests/routes",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"organisations",
								"{{organisationId}}",
								"deployment-manifests",
								"routes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Route",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/organisations/{{organisationId}}/deployment-manifests/routes/{{routeId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"organisations",
								"{{organisationId}}",
								"deployment-manifests",
								"routes",
								"{{routeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get deployment manifest route",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/organisations/{{organisationId}}/deployment-manifests/routes/{{routeId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"organisations",
								"{{organisationId}}",
								"deployment-manifests",
								"routes",
								"{{routeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Route",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"\",\n    \"source\": \"\",\n    \"target\": \"\",\n    \"condition\": \"\"\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/organisations/{{organisationId}}/deployment-manifests/routes/{{routeId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"organisations",
								"{{organisationId}}",
								"deployment-manifests",
								"routes",
								"{{routeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Apply manifest to onboarded device",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/organisations/{{organisationId}}/deployment-manifests/{{deviceId}}/apply",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"organisations",
								"{{organisationId}}",
								"deployment-manifests",
								"{{deviceId}}",
								"apply"
							]
						}
					},
					"response": []
				},
				{
					"name": "Copy manifest",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/organisations/{{organisationId}}/deployment-manifests/copy",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"organisations",
								"{{organisationId}}",
								"deployment-manifests",
								"copy"
							]
						}
					},
					"response": []
				}
			],
			"description": "Organisation Deployment Manifest"
		},
		{
			"name": "Organisations",
			"item": [
				{
					"name": "Get organisations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/organisations?page={{page}}&limit={{limit}}&sortBy={{sortBy}}&sortOrder={{sortOrder}}&type={{type}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"organisations"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}",
									"description": "number"
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "number"
								},
								{
									"key": "sortBy",
									"value": "{{sortBy}}",
									"description": "string"
								},
								{
									"key": "sortOrder",
									"value": "{{sortOrder}}",
									"description": "string"
								},
								{
									"key": "type",
									"value": "{{type}}",
									"description": "string"
								}
							]
						},
						"description": "Get all organisations according user permissions"
					},
					"response": []
				},
				{
					"name": "Delete organisation by id",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/organisations/{{organisationId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"organisations",
								"{{organisationId}}"
							]
						},
						"description": "Delete organisation."
					},
					"response": []
				},
				{
					"name": "Get organisation by id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							},
							{
								"key": "depth",
								"value": "1",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/organisations/{{organisationId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"organisations",
								"{{organisationId}}"
							]
						},
						"description": "Get organisation and it's children by organisationId."
					},
					"response": []
				},
				{
					"name": "Create organisation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"string\",\r\n  \"admin\": \"string\",\r\n  \"phoneNumber\": \"string\",\r\n  \"street\": \"string\",\r\n  \"houseNumber\": \"string\",\r\n  \"addressSupplement\": \"string\",\r\n  \"zipCode\": \"string\",\r\n  \"city\": \"string\",\r\n  \"country\": \"string\",\r\n  \"notes\": \"string\",\r\n  \"childrenInheritManifest\": true\r\n,\r\n  \"canChildrenInheritManifest\": false\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/organisations/{{organisationId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"organisations",
								"{{organisationId}}"
							]
						},
						"description": "Create an organisation."
					},
					"response": []
				},
				{
					"name": "Update organisation",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"parentId\": 0,\r\n  \"name\": \"string\",\r\n  \"admin\": {\r\n    \"id\": 0,\r\n    \"fullName\": \"string\",\r\n    \"email\": \"string\"\r\n  },\r\n  \"phoneNumber\": \"string\",\r\n  \"street\": \"string\",\r\n  \"houseNumber\": \"string\",\r\n  \"addressSupplement\": \"string\",\r\n  \"zipCode\": \"string\",\r\n  \"city\": \"string\",\r\n  \"country\": \"string\",\r\n  \"notes\": \"string\",\r\n  \"companyName\": \"string\",\r\n  \"childrenInheritManifest\": true,\r\n  \"canChildrenInheritManifest\": false\r\n,\r\n  \"defaultDeviceGroupId\": 0,\r\n  \"createdAt\": \"2020-02-26T14:13:18.133Z\",\r\n  \"updatedAt\": \"2020-02-26T14:13:18.133Z\"\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/organisations/{{organisationId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"organisations",
								"{{organisationId}}"
							]
						},
						"description": "Modify an organisations data"
					},
					"response": []
				}
			],
			"description": "Organisations resources"
		},
		{
			"name": "Permissions",
			"item": [
				{
					"name": "Get Resource Permissions",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/permissions?resource={{permissionResource}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"permissions"
							],
							"query": [
								{
									"key": "resource",
									"value": "{{permissionResource}}",
									"description": "string"
								}
							]
						},
						"description": "Get permissions and security levels per resource"
					},
					"response": []
				},
				{
					"name": "Get Permissions for Containers",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"containerPermissions\": [\r\n    {\r\n      \"containerId\": \"string\",\r\n      \"permissions\": [\r\n        \"containers.createContainers\"\r\n      ]\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/permissions/containers",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"permissions",
								"containers"
							]
						},
						"description": "Get permissions against list of containersIds."
					},
					"response": []
				},
				{
					"name": "Get Permissions for Devices",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"devicePermissions\": [\r\n    {\r\n      \"deviceId\": \"string\",\r\n      \"permissions\": [\r\n        \"devices.createDevices\"\r\n      ]\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/permissions/devices",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"permissions",
								"devices"
							]
						},
						"description": "Get permissions against list of deviceIds"
					},
					"response": []
				},
				{
					"name": "Get Permissions for EdgeOS",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"edgeosPermissions\": [\r\n    {\r\n      \"edgeosId\": \"string\",\r\n      \"permissions\": [\r\n        \"edgeos.createEdgeos\"\r\n      ]\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/permissions/edgeos",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"permissions",
								"edgeos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Permissions for Groups",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"groupPermissions\": [\r\n    {\r\n      \"groupId\": 0,\r\n      \"permissions\": [\r\n        \"groups.createGroup\"\r\n      ]\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/permissions/firmware",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"permissions",
								"firmware"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Permissions for Keys",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"keyPermissions\": [\r\n    {\r\n      \"keyId\": \"string\",\r\n      \"permissions\": [\r\n        \"keys.createKey\"\r\n      ]\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/permissions/keys",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"permissions",
								"keys"
							]
						},
						"description": "Get permissions against list of keys."
					},
					"response": []
				},
				{
					"name": "Get Permissions for Organisations",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"organisationPermissions\": [\r\n    {\r\n      \"organisationId\": 0,\r\n      \"permissions\": [\r\n        \"usersAndOrganisations.createOrganisations\"\r\n      ]\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/permissions/organisations",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"permissions",
								"organisations"
							]
						},
						"description": "Get permissions against list of organisation ids."
					},
					"response": []
				},
				{
					"name": "Get Permissions for Roles",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"rolePermissions\": [\r\n    {\r\n      \"organisationId\": 0,\r\n      \"roleName\": \"string\",\r\n      \"permissions\": [\r\n        \"roles.createRoles\"\r\n      ]\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/permissions/roles",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"permissions",
								"roles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Permissions for Tenants",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"tenantPermissions\": [\r\n    {\r\n      \"tenantId\": 0,\r\n      \"permissions\": [\r\n        \"string\"\r\n      ]\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/permissions/tenants",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"permissions",
								"tenants"
							]
						},
						"description": "Get permissions against list of organisation ids."
					},
					"response": []
				},
				{
					"name": "Get Permissions for Users",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userPermissions\": [\r\n    {\r\n      \"userId\": 0,\r\n      \"permissions\": [\r\n        \"usersAndOrganisations.createUsers\"\r\n      ]\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/permissions/users",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"permissions",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Permissions for Webhooks",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"webhookPermissions\": [\r\n    {\r\n      \"webhookId\": \"string\",\r\n      \"permissions\": [\r\n        \"string\"\r\n      ]\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/permissions/webhooks",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"permissions",
								"webhooks"
							]
						},
						"description": "Get all permissions against firmware id"
					},
					"response": []
				}
			]
		},
		{
			"name": "remoteDevices",
			"item": [
				{
					"name": "Get remote device status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/{{deviceId}}/remote",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"{{deviceId}}",
								"remote"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create remote device",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"\",\r\n  \"geolocation\": \"\",\r\n  \"description\": \"\",\r\n  \"tags\": \"\",\r\n  \"properties\": [\r\n    {\r\n      \"name\": \"\",\r\n      \"value\": \"\"\r\n    }\r\n  ],\r\n  \"status\": \"enabled\"\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/{{deviceId}}/remote",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"{{deviceId}}",
								"remote"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get remote device credentials",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/{{deviceId}}/remote/credentials",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"{{deviceId}}",
								"remote",
								"credentials"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Roles",
			"item": [
				{
					"name": "Get roles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"description": "Access token",
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/roles?organisationId={{organisationId}}&page={{page}}&limit={{limit}}&sortBy={{sortBy}}&sortOrder={{sortOrder}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"roles"
							],
							"query": [
								{
									"key": "organisationId",
									"value": "{{organisationId}}",
									"description": "min(1), null or empty not allowed"
								},
								{
									"key": "page",
									"value": "{{page}}",
									"description": "Page number"
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "Limit of shown items"
								},
								{
									"key": "sortBy",
									"value": "{{sortBy}}",
									"description": "Sort by property"
								},
								{
									"key": "sortOrder",
									"value": "{{sortOrder}}",
									"description": "Sort order (asc/desc)"
								}
							]
						},
						"description": "Get all roles for a given organisation by organisationId."
					},
					"response": []
				},
				{
					"name": "Create role",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"role\": \"string\",\r\n  \"editable\": true,\r\n  \"deletable\": true,\r\n  \"organisationId\": 0,\r\n  \"resources\": [\r\n    {\r\n      \"resource\": \"roles\",\r\n      \"permissions\": [\r\n        \"permission.securityLevel\"\r\n      ]\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/roles?organisationId={{organisationId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"roles"
							],
							"query": [
								{
									"key": "organisationId",
									"value": "{{organisationId}}"
								}
							]
						},
						"description": "Create role for organisation."
					},
					"response": []
				},
				{
					"name": "Update role",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"role\": \"string\",\r\n  \"editable\": true,\r\n  \"deletable\": true,\r\n  \"organisationId\": 0,\r\n  \"resources\": [\r\n    {\r\n      \"resource\": \"roles\",\r\n      \"permissions\": [\r\n        \"permission.securityLevel\"\r\n      ]\r\n    }\r\n  ]\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/roles?organisationId={{organisationId}}&role=",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"roles"
							],
							"query": [
								{
									"key": "organisationId",
									"value": "{{organisationId}}"
								},
								{
									"key": "role",
									"value": "",
									"description": "string"
								}
							]
						},
						"description": "Update role in organisation."
					},
					"response": []
				},
				{
					"name": "Delete role",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/roles/{{roleName}}?organisationId={{organisationId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"roles",
								"{{roleName}}"
							],
							"query": [
								{
									"key": "organisationId",
									"value": "{{organisationId}}"
								}
							]
						},
						"description": "Delete role from organisation."
					},
					"response": []
				},
				{
					"name": "Get single role",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/roles/{{roleName}}?organisationId={{organisationId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"roles",
								"{{roleName}}"
							],
							"query": [
								{
									"key": "organisationId",
									"value": "{{organisationId}}",
									"description": "min(1), null or empty not allowed"
								}
							]
						},
						"description": "Get single role by organisationId and roleName."
					},
					"response": []
				}
			],
			"description": "Roles"
		},
		{
			"name": "Search",
			"item": [
				{
					"name": "Seach Containers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/search/containers?searchText={{searchText}}&filter={{filter}}&searchType={{searchType}}&page={{page}}&limit={{limit}}&sortBy={{sortBy}}&sortOrder={{sortOrder}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"search",
								"containers"
							],
							"query": [
								{
									"key": "searchText",
									"value": "{{searchText}}"
								},
								{
									"key": "filter",
									"value": "{{filter}}",
									"description": "\"name=value\" (can have more than one filter) (doesn't affect the request if you have searchText parameter)"
								},
								{
									"key": "searchType",
									"value": "{{searchType}}"
								},
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "sortBy",
									"value": "{{sortBy}}"
								},
								{
									"key": "sortOrder",
									"value": "{{sortOrder}}"
								}
							]
						},
						"description": "Make a request to search in the Containers collection."
					},
					"response": []
				},
				{
					"name": "Search Devices",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/search/devices?searchText={{searchText}}&filter={{filter}}&searchType={{searchType}}&page={{page}}&limit={{limit}}&sortBy={{sortBy}}&sortOrder={{sortOrder}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"search",
								"devices"
							],
							"query": [
								{
									"key": "searchText",
									"value": "{{searchText}}"
								},
								{
									"key": "filter",
									"value": "{{filter}}",
									"description": "\"name=value\" (can have more than one filter) (doesn't affect the request if you have searchText parameter)"
								},
								{
									"key": "searchType",
									"value": "{{searchType}}"
								},
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "sortBy",
									"value": "{{sortBy}}"
								},
								{
									"key": "sortOrder",
									"value": "{{sortOrder}}"
								}
							]
						},
						"description": "Make a request to search in the Devices collection."
					},
					"response": []
				},
				{
					"name": "Search Organisations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/search/organisations?searchText={{searchText}}&filter={{filter}}&searchType={{searchType}}&page={{page}}&limit={{limit}}&sortBy={{sortBy}}&sortOrder={{sortOrder}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"search",
								"organisations"
							],
							"query": [
								{
									"key": "searchText",
									"value": "{{searchText}}"
								},
								{
									"key": "filter",
									"value": "{{filter}}",
									"description": "\"name=value\" (can have more than one filter) (doesn't affect the request if you have searchText parameter)"
								},
								{
									"key": "searchType",
									"value": "{{searchType}}"
								},
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "sortBy",
									"value": "{{sortBy}}"
								},
								{
									"key": "sortOrder",
									"value": "{{sortOrder}}"
								}
							]
						},
						"description": "Make a request to search Organisations."
					},
					"response": []
				},
				{
					"name": "Search Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/search/users?searchText={{searchText}}&filter={{filter}}&searchType={{searchType}}&page={{page}}&limit={{limit}}&sortBy={{sortBy}}&sortOrder={{sortOrder}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"search",
								"users"
							],
							"query": [
								{
									"key": "searchText",
									"value": "{{searchText}}"
								},
								{
									"key": "filter",
									"value": "{{filter}}",
									"description": "\"name=value\" (can have more than one filter) (doesn't affect the request if you have searchText parameter)"
								},
								{
									"key": "searchType",
									"value": "{{searchType}}"
								},
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "sortBy",
									"value": "{{sortBy}}"
								},
								{
									"key": "sortOrder",
									"value": "{{sortOrder}}"
								}
							]
						},
						"description": "Search users in the User DB."
					},
					"response": []
				},
				{
					"name": "Seach Deployment Filters",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/search/deployment-filters?searchText={{searchText}}&filter={{filter}}&searchType={{searchType}}&page={{page}}&limit={{limit}}&sortBy={{sortBy}}&sortOrder={{sortOrder}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"search",
								"deployment-filters"
							],
							"query": [
								{
									"key": "searchText",
									"value": "{{searchText}}"
								},
								{
									"key": "filter",
									"value": "{{filter}}",
									"description": "\"name=value\" (can have more than one filter) (doesn't affect the request if you have searchText parameter)"
								},
								{
									"key": "searchType",
									"value": "{{searchType}}"
								},
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "sortBy",
									"value": "{{sortBy}}"
								},
								{
									"key": "sortOrder",
									"value": "{{sortOrder}}"
								}
							]
						},
						"description": "Make a request to search in the Containers collection."
					},
					"response": []
				},
				{
					"name": "Seach Deployment Jobs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/search/deployment-jobs?searchText={{searchText}}&filter={{filter}}&searchType={{searchType}}&page={{page}}&limit={{limit}}&sortBy={{sortBy}}&sortOrder={{sortOrder}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"search",
								"deployment-jobs"
							],
							"query": [
								{
									"key": "searchText",
									"value": "{{searchText}}"
								},
								{
									"key": "filter",
									"value": "{{filter}}",
									"description": "\"name=value\" (can have more than one filter) (doesn't affect the request if you have searchText parameter)"
								},
								{
									"key": "searchType",
									"value": "{{searchType}}"
								},
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "sortBy",
									"value": "{{sortBy}}"
								},
								{
									"key": "sortOrder",
									"value": "{{sortOrder}}"
								}
							]
						},
						"description": "Make a request to search in the Containers collection."
					},
					"response": []
				},
				{
					"name": "Seach Deployment Rollouts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/search/deployment-rollouts?searchText={{searchText}}&filter={{filter}}&searchType={{searchType}}&page={{page}}&limit={{limit}}&sortBy={{sortBy}}&sortOrder={{sortOrder}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"search",
								"deployment-rollouts"
							],
							"query": [
								{
									"key": "searchText",
									"value": "{{searchText}}"
								},
								{
									"key": "filter",
									"value": "{{filter}}",
									"description": "\"name=value\" (can have more than one filter) (doesn't affect the request if you have searchText parameter)"
								},
								{
									"key": "searchType",
									"value": "{{searchType}}"
								},
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "sortBy",
									"value": "{{sortBy}}"
								},
								{
									"key": "sortOrder",
									"value": "{{sortOrder}}"
								}
							]
						},
						"description": "Make a request to search in the Containers collection."
					},
					"response": []
				}
			]
		},
		{
			"name": "Tenants",
			"item": [
				{
					"name": "Get all tenants",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/tenants/organisations?page={{page}}&limit={{limit}}&sortBy={{sortBy}}&sortOrder={{sortOrder}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"tenants",
								"organisations"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "sortBy",
									"value": "{{sortBy}}"
								},
								{
									"key": "sortOrder",
									"value": "{{sortOrder}}"
								}
							]
						},
						"description": "Get all tenants"
					},
					"response": []
				},
				{
					"name": "Create tenant",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"\",\r\n  \"admin\": {\r\n    \"email\": \"\",\r\n    \"firstName\": \"\",\r\n    \"lastName\": \"\",\r\n    \"jobTitle\": \"\",\r\n    \"department\": \"\",\r\n    \"mobilePhone\": \"\",\r\n    \"telephone\": \"\",\r\n    \"street\": \"\",\r\n    \"houseNumber\": \"\",\r\n    \"addressSupplement\": \"\",\r\n    \"zipCode\": \"\",\r\n    \"city\": \"\",\r\n    \"country\": \"\"\r\n  },\r\n  \"phoneNumber\": \"\",\r\n  \"street\": \"\",\r\n  \"houseNumber\": \"\",\r\n  \"addressSupplement\": \"\",\r\n  \"zipCode\": \"\",\r\n  \"city\": \"\",\r\n  \"country\": \"\",\r\n  \"notes\": \"\",\r\n  \"childOrganisationsLimit\": 1,\r\n  \"usersLimit\": 1,\r\n  \"devicesLimit\": 1,\r\n  \"keysLimit\": 1,\r\n  \"keysRequestMonthlyLimit\": 1\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/tenants/organisations",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"tenants",
								"organisations"
							]
						},
						"description": "Create tenant"
					},
					"response": []
				},
				{
					"name": "Delete tenant",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/tenants/organisations/{{tenantId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"tenants",
								"organisations",
								"{{tenantId}}"
							]
						},
						"description": "Delete tenant"
					},
					"response": []
				},
				{
					"name": "Get single tenant",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/tenants/organisations/{{tenantId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"tenants",
								"organisations",
								"{{tenantId}}"
							]
						},
						"description": "Get single tenant"
					},
					"response": []
				},
				{
					"name": "Update tenant",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"status\": \"\",\r\n  \"childOrganisationsLimit\": 1,\r\n  \"usersLimit\": 1,\r\n  \"devicesLimit\": 1,\r\n  \"keysLimit\": 1,\r\n  \"keysRequestMonthlyLimit\": 1\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/tenants/organisations/{{tenantId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"tenants",
								"organisations",
								"{{tenantId}}"
							]
						},
						"description": "Update tenant"
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/users?organisationId={{organisationId}}&page={{page}}&limit={{limit}}&sortBy={{sortBy}}&sortOrder={{sortOrder}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"users"
							],
							"query": [
								{
									"key": "organisationId",
									"value": "{{organisationId}}"
								},
								{
									"key": "page",
									"value": "{{page}}",
									"description": "Page number"
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "Limit of shown items"
								},
								{
									"key": "sortBy",
									"value": "{{sortBy}}",
									"description": "Sort by property"
								},
								{
									"key": "sortOrder",
									"value": "{{sortOrder}}",
									"description": "Sort order (asc/desc)"
								}
							]
						},
						"description": "Get users by organisationId."
					},
					"response": []
				},
				{
					"name": "Get notification emails",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/users/profile/notification-emails?page={{page}}&limit={{limit}}&sortBy={{sortBy}}&sortOrder={{sortOrder}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"users",
								"profile",
								"notification-emails"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "sortBy",
									"value": "{{sortBy}}"
								},
								{
									"key": "sortOrder",
									"value": "{{sortOrder}}"
								}
							]
						},
						"description": "Get user profile notification emails."
					},
					"response": []
				},
				{
					"name": "Create user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"organisationId\": 0,\r\n  \"firstName\": \"string\",\r\n  \"lastName\": \"string\",\r\n  \"email\": \"string\",\r\n  \"jobTitle\": \"string\",\r\n  \"department\": \"string\",\r\n  \"mobilePhone\": \"string\",\r\n  \"telephone\": \"string\",\r\n  \"street\": \"string\",\r\n  \"houseNumber\": \"string\",\r\n  \"addressSupplement\": \"string\",\r\n  \"zipCode\": \"string\",\r\n  \"city\": \"string\",\r\n  \"country\": \"string\",\r\n  \"status\": {\r\n    \"statusId\": 0,\r\n    \"description\": \"string\"\r\n  },\r\n  \"editable\": true,\r\n  \"deletable\": true,\r\n  \"createdAt\": \"2020-02-26T14:13:18.102Z\",\r\n  \"updatedAt\": \"2020-02-26T14:13:18.102Z\"\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/users",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"users"
							]
						},
						"description": "Create user."
					},
					"response": []
				},
				{
					"name": "Add notification email",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{  \r\n  \"email\": \"string\" \r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/users/profile/notification-emails",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"users",
								"profile",
								"notification-emails"
							]
						},
						"description": "Add notification email to user profile."
					},
					"response": []
				},
				{
					"name": "Set new password",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{authheadertoken}}",
								"description": "Authorization header token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"\",\r\n  \"password\": \"\",\r\n  \"code\": \"\"\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/users/password",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"users",
								"password"
							]
						},
						"description": "Reset forgotten password using code from email address."
					},
					"response": []
				},
				{
					"name": "Reset password",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{authheadertoken}}",
								"description": "Authorization header token",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/users/password/reset?email={{email}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"users",
								"password",
								"reset"
							],
							"query": [
								{
									"key": "email",
									"value": "{{email}}",
									"description": "string"
								}
							]
						},
						"description": "Reset password trough email address."
					},
					"response": []
				},
				{
					"name": "Get user profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/users/profile",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"users",
								"profile"
							]
						},
						"description": "Get user profile."
					},
					"response": []
				},
				{
					"name": "Update user profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"organisationId\": 0,\r\n  \"firstName\": \"string\",\r\n  \"lastName\": \"string\",\r\n  \"email\": \"string\",\r\n  \"jobTitle\": \"string\",\r\n  \"department\": \"string\",\r\n  \"mobilePhone\": \"string\",\r\n  \"telephone\": \"string\",\r\n  \"street\": \"string\",\r\n  \"houseNumber\": \"string\",\r\n  \"addressSupplement\": \"string\",\r\n  \"zipCode\": \"string\",\r\n  \"city\": \"string\",\r\n  \"country\": \"string\",\r\n  \"status\": {\r\n    \"statusId\": 0,\r\n    \"description\": \"string\"\r\n  },\r\n  \"editable\": true,\r\n  \"deletable\": true,\r\n  \"createdAt\": \"2020-02-26T14:13:18.102Z\",\r\n  \"updatedAt\": \"2020-02-26T14:13:18.102Z\"\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/users/profile",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"users",
								"profile"
							]
						},
						"description": "Update user profile."
					},
					"response": []
				},
				{
					"name": "Register a user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"organisationId\": 1,\r\n  \"password\": \"\",\r\n  \"firstName\": \"\",\r\n  \"lastName\": \"\",\r\n  \"email\": \"\",\r\n  \"jobTitle\": \"\",\r\n  \"department\": \"\",\r\n  \"mobilePhone\": \"\",\r\n  \"telephone\": \"\",\r\n  \"street\": \"\",\r\n  \"houseNumber\": \"\",\r\n  \"addressSupplement\": \"\",\r\n  \"zipCode\": \"\",\r\n  \"city\": \"\",\r\n  \"country\": \"\"\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/users/register",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Suggest users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/users/suggest?organisationId={{organisationId}}&search={{search}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"users",
								"suggest"
							],
							"query": [
								{
									"key": "organisationId",
									"value": "{{organisationId}}",
									"description": "number"
								},
								{
									"key": "search",
									"value": "{{search}}",
									"description": "string"
								}
							]
						},
						"description": "Get user suggestions given a search keyword (searches in user's full name and email)."
					},
					"response": []
				},
				{
					"name": "Verify user",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{authheadertoken}}",
								"description": "Authorization header token",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/users/verify?email={{email}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"users",
								"verify"
							],
							"query": [
								{
									"key": "email",
									"value": "{{email}}",
									"description": "string"
								}
							]
						},
						"description": "Resend user verification code to email address."
					},
					"response": []
				},
				{
					"name": "Verify user",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{authheadertoken}}",
								"description": "Authorization header token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"\",\r\n  \"code\": \"\"\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/users/verify",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"users",
								"verify"
							]
						},
						"description": "Verify user by code send trough email."
					},
					"response": []
				},
				{
					"name": "Delete user",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/users/{{userId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"users",
								"{{userId}}"
							]
						},
						"description": "Delete user by userId."
					},
					"response": []
				},
				{
					"name": "Delete notification email",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/users/profile/notification-emails/{{notificationEmailId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"users",
								"profile",
								"notification-emails",
								"{{notificationEmailId}}"
							]
						},
						"description": "Delete notification email by notificationEmailId."
					},
					"response": []
				},
				{
					"name": "Get user",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/users/{{userId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"users",
								"{{userId}}"
							]
						},
						"description": "Get user by userId."
					},
					"response": []
				},
				{
					"name": "Update user",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"organisationId\": 0,\r\n  \"firstName\": \"string\",\r\n  \"lastName\": \"string\",\r\n  \"email\": \"string\",\r\n  \"jobTitle\": \"string\",\r\n  \"department\": \"string\",\r\n  \"mobilePhone\": \"string\",\r\n  \"telephone\": \"string\",\r\n  \"street\": \"string\",\r\n  \"houseNumber\": \"string\",\r\n  \"addressSupplement\": \"string\",\r\n  \"zipCode\": \"string\",\r\n  \"city\": \"string\",\r\n  \"country\": \"string\",\r\n  \"status\": {\r\n    \"statusId\": 0,\r\n    \"description\": \"string\"\r\n  },\r\n  \"editable\": true,\r\n  \"deletable\": true,\r\n  \"createdAt\": \"2020-02-26T14:13:18.102Z\",\r\n  \"updatedAt\": \"2020-02-26T14:13:18.102Z\"\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/users/{{userId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"users",
								"{{userId}}"
							]
						},
						"description": "Update user."
					},
					"response": []
				},
				{
					"name": "Get user roles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/users/{{userId}}/roles?page={{page}}&limit={{limit}}&sortBy={{sortBy}}&sortOrder={{sortOrder}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"users",
								"{{userId}}",
								"roles"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}",
									"description": "Page number"
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "Limit of shown items"
								},
								{
									"key": "sortBy",
									"value": "{{sortBy}}",
									"description": "Sort by property"
								},
								{
									"key": "sortOrder",
									"value": "{{sortOrder}}",
									"description": "Sort order (asc/desc)"
								}
							]
						},
						"description": "Get all roles for given user."
					},
					"response": []
				},
				{
					"name": "Delete role from user",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/users/{{userId}}/roles/{{roleName}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"users",
								"{{userId}}",
								"roles",
								"{{roleName}}"
							]
						},
						"description": "Delete role from user."
					},
					"response": []
				},
				{
					"name": "Add role to user",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/users/{{userId}}/roles/{{roleName}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"users",
								"{{userId}}",
								"roles",
								"{{roleName}}"
							]
						},
						"description": "Add role to user."
					},
					"response": []
				}
			],
			"description": "Users"
		},
		{
			"name": "Webhooks",
			"item": [
				{
					"name": "Get webhooks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/webhooks?organisationId=",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"webhooks"
							],
							"query": [
								{
									"key": "organisationId",
									"value": ""
								},
								{
									"key": "deviceId",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Retrieve webhooks for an organisation"
					},
					"response": []
				},
				{
					"name": "Create webhook",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"organisationId\": 1,\r\n  \"url\": \"\",\r\n  \"requestType\": \"\",\r\n  \"actionType\": \"\",\r\n  \"headers\": [\r\n    {\r\n      \"name\": \"\",\r\n      \"value\": \"\"\r\n    }\r\n  ],\r\n  \"queries\": [\r\n    {\r\n      \"name\": \"\",\r\n      \"value\": \"\"\r\n    }\r\n  ],\r\n  \"payload\": {}\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/webhooks",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"webhooks"
							]
						},
						"description": "Create webhook for an organisation"
					},
					"response": []
				},
				{
					"name": "Delete webhook",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/webhooks/{{webhookId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"webhooks",
								"{{webhookId}}"
							]
						},
						"description": "Delete webhook by id"
					},
					"response": []
				},
				{
					"name": "Get webhook",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/webhooks/{{webhookId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"webhooks",
								"{{webhookId}}"
							]
						},
						"description": "Get specific webhook"
					},
					"response": []
				},
				{
					"name": "Update webhook",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"url\": \"\",\r\n  \"requestType\": \"\",\r\n  \"actionType\": \"\",\r\n  \"headers\": [\r\n    {\r\n      \"name\": \"\",\r\n      \"value\": \"\"\r\n    }\r\n  ],\r\n  \"queries\": [\r\n    {\r\n      \"name\": \"\",\r\n      \"value\": \"\"\r\n    }\r\n  ],\r\n  \"payload\": {}\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/webhooks/{{webhookId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"webhooks",
								"{{webhookId}}"
							]
						},
						"description": "Update webhook by id"
					},
					"response": []
				},
				{
					"name": "Trigger a single webhook",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"organisationId\": 1,\r\n  \"url\": \"\",\r\n  \"description\": \"\",\r\n  \"requestType\": \"\",\r\n  \"actionType\": \"\",\r\n  \"headers\": [\r\n    {\r\n      \"name\": \"\",\r\n      \"value\": \"\"\r\n    }\r\n  ],\r\n  \"queries\": [\r\n    {\r\n      \"name\": \"\",\r\n      \"value\": \"\"\r\n    }\r\n  ],\r\n  \"payload\": {}\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/webhooks/test",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"webhooks",
								"test"
							]
						},
						"description": "Trigger a single webhook for a dummy device with testing\r\npurposes"
					},
					"response": []
				}
			]
		},
		{
			"name": "Dashboards",
			"item": [
				{
					"name": "Create dashboard",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"organisationId\": 0,\r\n  \"name\": \"string\",\r\n  \"description\": \"string\"\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/dashboards",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"dashboards"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get dashboards",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/dashboards?organisationId={{organisationId}}&page={{page}}&limit={{limit}}&sortBy={{sortBy}}&sortOrder={{sortOrder}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"dashboards"
							],
							"query": [
								{
									"key": "organisationId",
									"value": "{{organisationId}}"
								},
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "sortBy",
									"value": "{{sortBy}}"
								},
								{
									"key": "sortOrder",
									"value": "{{sortOrder}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get dashboard",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access Token",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/dashboards/{{dashboardId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"dashboards",
								"{{dashboardId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update dashboard",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access Token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"organisationId\": 0,\r\n  \"name\": \"string\",\r\n  \"description\": \"string\"\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/dashboards/{{dashboardId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"dashboards",
								"{{dashboardId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete dashboard",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/dashboards/{{dashboardId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"dashboards",
								"{{dashboardId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create dashboard panel",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"string\",\r\n  \"layoutPosX\": 0,\r\n  \"layoutPosY\": 0,\r\n  \"layoutWidth\": 0,\r\n  \"layoutHeight\": 0\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/dashboards/{{dashboardId}}/panels",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"dashboards",
								"{{dashboardId}}",
								"panels"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get dashboard panels",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access Token",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/dashboards/{{dashboardId}}/panels",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"dashboards",
								"{{dashboardId}}",
								"panels"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get dashboard panel",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"description": "Access Token",
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							}
						],
						"url": {
							"raw": "http://localhost:5000/v1/dashboards/{{dashboardId}}/panels/{{panelId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"v1",
								"dashboards",
								"{{dashboardId}}",
								"panels",
								"{{panelId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update dashboard panel",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"description": "Access Token",
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"string\",\r\n  \"layoutPosX\": 0,\r\n  \"layoutPosY\": 0,\r\n  \"layoutWidth\": 0,\r\n  \"layoutHeight\": 0\r\n}"
						},
						"url": {
							"raw": "http://localhost:5000/v1/dashboards/{{dashboardId}}/panels/{{panelId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"v1",
								"dashboards",
								"{{dashboardId}}",
								"panels",
								"{{panelId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete dashboard panel",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"description": "Access Token",
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							}
						],
						"url": {
							"raw": "http://localhost:5000/v1/dashboards/{{dashboardId}}/panels/{{panelId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"v1",
								"dashboards",
								"{{dashboardId}}",
								"panels",
								"{{panelId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create dashboard series",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"deviceId\": \"string\",\r\n  \"topic\": \"string\",\r\n  \"columns\": \"string\",\r\n  \"rows\": \"string\"\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/dashboards/{{dashboardId}}/panels/{{panelId}}/series",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"dashboards",
								"{{dashboardId}}",
								"panels",
								"{{panelId}}",
								"series"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get list of dashboard series",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Typea",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/dashboards/{{dashboardId}}/panels/{{panelId}}/series",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"dashboards",
								"{{dashboardId}}",
								"panels",
								"{{panelId}}",
								"series"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get dashboard series",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/dashboards/{{dashboardId}}/panels/{{panelId}}/series/{{seriesId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"dashboards",
								"{{dashboardId}}",
								"panels",
								"{{panelId}}",
								"series",
								"{{seriesId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update dashboard series",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"deviceId\": \"string\",\r\n  \"topic\": \"string\",\r\n  \"columns\": \"string\",\r\n  \"rows\": \"string\"\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/dashboards/{{dashboardId}}/panels/{{panelId}}/series/{{seriesId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"dashboards",
								"{{dashboardId}}",
								"panels",
								"{{panelId}}",
								"series",
								"{{seriesId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete dashboard series",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/dashboards/{{dashboardId}}/panels/{{panelId}}/series/{{seriesId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"dashboards",
								"{{dashboardId}}",
								"panels",
								"{{panelId}}",
								"series",
								"{{seriesId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "sensorEdgeManifest",
			"item": [
				{
					"name": "Add container",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "displayName",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "containerName",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "containerAccess",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "restartPolicy",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "desiredStatus",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "registryType",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "shortDescription",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "version",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "processorArchitecture",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "imageUri",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "sharedOrganisationIds",
									"value": "",
									"description": "array",
									"type": "text"
								},
								{
									"key": "icon",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "type",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "credentials",
									"value": "",
									"description": "object",
									"type": "text"
								},
								{
									"key": "category",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "settingsPageId",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "description",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "image",
									"description": "file",
									"type": "file",
									"src": []
								},
								{
									"key": "containerCreateOptions",
									"value": "",
									"description": "object",
									"type": "text"
								},
								{
									"key": "containerTwinDesiredOptions",
									"value": "",
									"description": "object",
									"type": "text"
								},
								{
									"key": "environmentVariables",
									"value": "",
									"description": "array",
									"type": "text"
								},
								{
									"key": "releaseNotes",
									"value": "",
									"description": "array",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/sensoredge/deployment-manifest/containers",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"sensoredge",
								"deployment-manifest",
								"containers"
							]
						},
						"description": "Add a sensor edge container to the collection"
					},
					"response": []
				},
				{
					"name": "Get all containers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/sensoredge/deployment-manifest/containers?page={{page}}&limit={{limit}}&sortBy={{sortBy}}&sortOrder={{sortOrder}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"sensoredge",
								"deployment-manifest",
								"containers"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "sortBy",
									"value": "{{sortBy}}"
								},
								{
									"key": "sortOrder",
									"value": "{{sortOrder}}"
								}
							]
						},
						"description": "Get a single sensor edge container"
					},
					"response": []
				},
				{
					"name": "Get container by id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/sensoredge/deployment-manifest/containers/{{containerId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"sensoredge",
								"deployment-manifest",
								"containers",
								"{{containerId}}"
							]
						},
						"description": "Get a list of all sensor edge containers"
					},
					"response": []
				},
				{
					"name": "Update container",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "displayName",
									"value": "",
									"description": "string",
									"type": "text",
									"disabled": true
								},
								{
									"key": "containerName",
									"value": "",
									"description": "string",
									"type": "text",
									"disabled": true
								},
								{
									"key": "containerAccess",
									"value": "",
									"description": "string",
									"type": "text",
									"disabled": true
								},
								{
									"key": "sharedOrganisationIds",
									"value": "",
									"description": "arrary",
									"type": "text",
									"disabled": true
								},
								{
									"key": "icon",
									"value": "",
									"description": "string",
									"type": "text",
									"disabled": true
								},
								{
									"key": "type",
									"value": "",
									"description": "string",
									"type": "text",
									"disabled": true
								},
								{
									"key": "restartPolicy",
									"value": "",
									"description": "string",
									"type": "text",
									"disabled": true
								},
								{
									"key": "desiredStatus",
									"value": "",
									"description": "string",
									"type": "text",
									"disabled": true
								},
								{
									"key": "registryType",
									"value": "",
									"description": "string",
									"type": "text",
									"disabled": true
								},
								{
									"key": "credentials",
									"value": "",
									"description": "object",
									"type": "text",
									"disabled": true
								},
								{
									"key": "category",
									"value": "",
									"description": "string",
									"type": "text",
									"disabled": true
								},
								{
									"key": "settingsPageId",
									"value": "",
									"description": "string",
									"type": "text",
									"disabled": true
								},
								{
									"key": "shortDescription",
									"value": "",
									"description": "string",
									"type": "text",
									"disabled": true
								},
								{
									"key": "description",
									"value": "",
									"description": "string",
									"type": "text",
									"disabled": true
								},
								{
									"key": "version",
									"value": "",
									"description": "string",
									"type": "text",
									"disabled": true
								},
								{
									"key": "processorArchitecture ",
									"value": "",
									"description": "string",
									"type": "text",
									"disabled": true
								},
								{
									"key": "imageUri ",
									"value": "",
									"description": "string",
									"type": "text",
									"disabled": true
								},
								{
									"key": "image",
									"description": "file",
									"type": "file",
									"src": [],
									"disabled": true
								},
								{
									"key": "containerCreateOptions",
									"value": "",
									"description": "object",
									"type": "text",
									"disabled": true
								},
								{
									"key": "containerTwinDesiredOptions",
									"value": "",
									"description": "object",
									"type": "text",
									"disabled": true
								},
								{
									"key": "environmentVariables",
									"value": "",
									"description": "array",
									"type": "text",
									"disabled": true
								},
								{
									"key": "releaseNotes",
									"value": "",
									"description": "array",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/sensoredge/deployment-manifest/containers/{{containerId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"sensoredge",
								"deployment-manifest",
								"containers",
								"{{containerId}}"
							]
						},
						"description": "Add a sensor edge container to the collection"
					},
					"response": []
				},
				{
					"name": "Delete container",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/sensoredge/deployment-manifest/containers/{{containerId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"sensoredge",
								"deployment-manifest",
								"containers",
								"{{containerId}}"
							]
						},
						"description": "Delete sensor edge container\r\n"
					},
					"response": []
				},
				{
					"name": "Create os",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "version",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "name",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "platform",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "type",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": []
								},
								{
									"key": "notes",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "links",
									"value": "",
									"description": "array",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/sensoredge/deployment-manifest/os",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"sensoredge",
								"deployment-manifest",
								"os"
							]
						},
						"description": "Upload sensorEDGE OS"
					},
					"response": []
				}
			]
		},
		{
			"name": "deviceManifests",
			"item": [
				{
					"name": "Checks the actuality of sensor edge device containers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/{{deviceId}}/deployment-manifests/check",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"{{deviceId}}",
								"deployment-manifests",
								"check"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update and redeploy sensor edge device containers",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/devices/{{deviceId}}/deployment-manifests/deploy",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"devices",
								"{{deviceId}}",
								"deployment-manifests",
								"deploy"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "deploymentFilters",
			"item": [
				{
					"name": "Create deployment filter",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"organisationId\": 1,\r\n    \"name\": \"string\",\r\n    \"description\": \"string\",\r\n    \"filterCondition\": {\r\n        \"condition\": \"AND\",\r\n        \"rules\": [\r\n            {\r\n                \"type\": \"text\",\r\n                \"field\": \"string\",\r\n                \"operator\": \"=\",\r\n                \"value\": \"string\"\r\n            },\r\n            {\r\n                \"condition\": \"AND\",\r\n                \"rules\": [\r\n                    {\r\n                        \"type\": \"text\",\r\n                        \"field\": \"string\",\r\n                        \"operator\": \"=\",\r\n                        \"value\": \"string\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/deployments/filters",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"deployments",
								"filters"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a list of all filters",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/deployments/filters?organisationId={{organisationId}}&page={{page}}&limit={{limit}}&sortBy={{sortBy}}&sortOrder={{sortOrder}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"deployments",
								"filters"
							],
							"query": [
								{
									"key": "organisationId",
									"value": "{{organisationId}}"
								},
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "sortBy",
									"value": "{{sortBy}}"
								},
								{
									"key": "sortOrder",
									"value": "{{sortOrder}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update deployment filter",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"string\",\r\n    \"description\": \"string\",\r\n    \"filterCondition\": {\r\n        \"condition\": \"AND\",\r\n        \"rules\": [\r\n            {\r\n                \"type\": \"text\",\r\n                \"field\": \"string\",\r\n                \"operator\": \"=\",\r\n                \"value\": \"string\"\r\n            },\r\n            {\r\n                \"condition\": \"AND\",\r\n                \"rules\": [\r\n                    {\r\n                        \"type\": \"text\",\r\n                        \"field\": \"string\",\r\n                        \"operator\": \"=\",\r\n                        \"value\": \"string\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/deployments/filters/{{filterId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"deployments",
								"filters",
								"{{filterId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete deployment filter by id",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/deployments/filters/{{filterId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"deployments",
								"filters",
								"{{filterId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get single deployment filter by id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/deployments/filters/{{filterId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"deployments",
								"filters",
								"{{filterId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Execute deployment filter by filterId or filter condition",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"type\": \"byFilterId\",\r\n  \"filterId\": \"string\",\r\n  \"filterCondition\": {\r\n    \"condition\": \"AND\",\r\n    \"rules\": [\r\n      {\r\n        \"type\": \"text\",\r\n        \"field\": \"string\",\r\n        \"operator\": \"=\",\r\n        \"value\": \"string\"\r\n      }\r\n    ]\r\n  }\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/deployments/filters/devices?page={{page}}&limit={{limit}}&sortBy={{sortBy}}&sortOrder={{sortOrder}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"deployments",
								"filters",
								"devices"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "sortBy",
									"value": "{{sortBy}}"
								},
								{
									"key": "sortOrder",
									"value": "{{sortOrder}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "deploymentJobs",
			"item": [
				{
					"name": "Create a deployment job with lists of containers and routes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "organisationId",
									"value": "{{organisationId}}",
									"type": "text"
								},
								{
									"key": "name",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "containers",
									"value": "",
									"description": "array",
									"type": "text"
								},
								{
									"key": "routes",
									"value": "",
									"description": "array",
									"type": "text"
								},
								{
									"key": "type",
									"value": "",
									"description": "string",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/deployments/jobs",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"deployments",
								"jobs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add container to a deployment job",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "version ",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "restartPolicy",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "desiredStatus",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "containerCreateOptions",
									"value": "",
									"type": "text"
								},
								{
									"key": "containerTwinDesiredOptions",
									"value": "",
									"type": "text"
								},
								{
									"key": "environmentVariables",
									"value": "",
									"description": "array",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/deployments/jobs/{{jobId}}​/containers​/{{containerId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"deployments",
								"jobs",
								"{{jobId}}​",
								"containers​",
								"{{containerId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add direct method",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"methodName\": \"string\",\r\n  \"methodPayload\": {} \r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/deployments/jobs/{{jobId}}/containers/{{containerId}}/methods",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"deployments",
								"jobs",
								"{{jobId}}",
								"containers",
								"{{containerId}}",
								"methods"
							]
						},
						"description": "Add direct method to a container into deployment job"
					},
					"response": []
				},
				{
					"name": "Update direct method",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"methodName\": \"string\",\r\n  \"methodPayload\": {} \r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/deployments/jobs/{{jobId}}/containers/{{containerId}}/methods/{{methodId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"deployments",
								"jobs",
								"{{jobId}}",
								"containers",
								"{{containerId}}",
								"methods",
								"{{methodId}}"
							]
						},
						"description": "Update direct method to container into deployment job"
					},
					"response": []
				},
				{
					"name": "Get direct method by id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/deployments/jobs/{{jobId}}/containers/{{containerId}}/methods/{{methodId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"deployments",
								"jobs",
								"{{jobId}}",
								"containers",
								"{{containerId}}",
								"methods",
								"{{methodId}}"
							]
						},
						"description": "Get single direct method by methodId"
					},
					"response": []
				},
				{
					"name": "Delete direct method",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/deployments/jobs/{{jobId}}/containers/{{containerId}}/methods/{{methodId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"deployments",
								"jobs",
								"{{jobId}}",
								"containers",
								"{{containerId}}",
								"methods",
								"{{methodId}}"
							]
						},
						"description": "Delete direct method from container into deployment job."
					},
					"response": []
				},
				{
					"name": "Get direct methods by containerId",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/deployments/jobs/{{jobId}}/containers/{{containerId}}/methods?page={{page}}&limit={{limit}}&sortBy={{sortBy}}&sortOrder={{sortOrder}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"deployments",
								"jobs",
								"{{jobId}}",
								"containers",
								"{{containerId}}",
								"methods"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "sortBy",
									"value": "{{sortBy}}"
								},
								{
									"key": "sortOrder",
									"value": "{{sortOrder}}"
								}
							]
						},
						"description": "Get all deployment job container direct methods by container id"
					},
					"response": []
				},
				{
					"name": "Add route to a deployment job",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"string\",\r\n  \"source\": \"string\",\r\n  \"condition\": \"string\",\r\n  \"target\": \"string\"\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/deployments/jobs/{{jobId}}/routes",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"deployments",
								"jobs",
								"{{jobId}}",
								"routes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Apply deployment configuration into IOT HUB",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"excludedDevices\": []\r\n}\r\n"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/deployments/jobs/{{jobId}}/execute/{{filterId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"deployments",
								"jobs",
								"{{jobId}}",
								"execute",
								"{{filterId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update container inside the deployment job",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "version ",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "restartPolicy",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "desiredStatus",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "containerCreateOptions",
									"value": "",
									"type": "text"
								},
								{
									"key": "containerTwinDesiredOptions",
									"value": "",
									"type": "text"
								},
								{
									"key": "environmentVariables",
									"value": "",
									"description": "array",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/deployments/jobs/{{jobId}}​/containers​/{{containerId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"deployments",
								"jobs",
								"{{jobId}}​",
								"containers​",
								"{{containerId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update route inside the deployment job",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"string\",\r\n  \"source\": \"string\",\r\n  \"condition\": \"string\",\r\n  \"target\": \"string\"\r\n}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/deployments/jobs/{{jobId}}/routes/{{routeId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"deployments",
								"jobs",
								"{{jobId}}",
								"routes",
								"{{routeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete container inside the deployment job by id",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/deployments/jobs/{{jobId}}​/containers​/{{containerId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"deployments",
								"jobs",
								"{{jobId}}​",
								"containers​",
								"{{containerId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete route inside the deployment job by id",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/deployments/jobs/{{jobId}}/routes/{{routeId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"deployments",
								"jobs",
								"{{jobId}}",
								"routes",
								"{{routeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get container inside the deployment job by id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/deployments/jobs/{{jobId}}​/containers​/{{containerId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"deployments",
								"jobs",
								"{{jobId}}​",
								"containers​",
								"{{containerId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get route inside the deployment job by id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/deployments/jobs/{{jobId}}/routes/{{routeId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"deployments",
								"jobs",
								"{{jobId}}",
								"routes",
								"{{routeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a list of all containers inside the deployment job",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/deployments/jobs/{{jobId}}​/containers​?page={{page}}&limit={{limit}}&sortBy={{sortBy}}&sortOrder={{sortOrder}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"deployments",
								"jobs",
								"{{jobId}}​",
								"containers​"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "sortBy",
									"value": "{{sortBy}}"
								},
								{
									"key": "sortOrder",
									"value": "{{sortOrder}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a list of all routes inside the deployment job",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/deployments/jobs/{{jobId}}/routes?page={{page}}&limit={{limit}}&sortBy={{sortBy}}&sortOrder={{sortOrder}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"deployments",
								"jobs",
								"{{jobId}}",
								"routes"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "sortBy",
									"value": "{{sortBy}}"
								},
								{
									"key": "sortOrder",
									"value": "{{sortOrder}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete deployment job by id",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/deployments/jobs/{{jobId}}​",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"deployments",
								"jobs",
								"{{jobId}}​"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update deployment job by id",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "",
									"description": "string",
									"type": "text"
								},
								{
									"key": "containers",
									"value": "",
									"description": "array",
									"type": "text"
								},
								{
									"key": "routes",
									"value": "",
									"description": "array",
									"type": "text"
								},
								{
									"key": "type",
									"value": "",
									"description": "string",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/deployments/jobs/{{jobId}}​",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"deployments",
								"jobs",
								"{{jobId}}​"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get single deployment job by id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/deployments/jobs/{{jobId}}​",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"deployments",
								"jobs",
								"{{jobId}}​"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a list of all deployment jobs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/deployments/jobs?organisationId={{organisationId}}&page={{page}}&limit={{limit}}&sortBy={{sortBy}}&sortOrder={{sortOrder}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"deployments",
								"jobs"
							],
							"query": [
								{
									"key": "organisationId",
									"value": "{{organisationId}}"
								},
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "sortBy",
									"value": "{{sortBy}}"
								},
								{
									"key": "sortOrder",
									"value": "{{sortOrder}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "deploymentRollouts",
			"item": [
				{
					"name": "Get rollouts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/deployments/rollouts?organisationId={{organisationId}}&jobId={{jobId}}&status={{rolloutStatus}}&page={{page}}&limit={{limit}}&sortBy={{sortBy}}&sortOrder={{sortOrder}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"deployments",
								"rollouts"
							],
							"query": [
								{
									"key": "organisationId",
									"value": "{{organisationId}}"
								},
								{
									"key": "jobId",
									"value": "{{jobId}}"
								},
								{
									"key": "status",
									"value": "{{rolloutStatus}}"
								},
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "sortBy",
									"value": "{{sortBy}}"
								},
								{
									"key": "sortOrder",
									"value": "{{sortOrder}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get single deployment rollout by rolloutId",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/deployments/rollouts/{{rolloutId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"deployments",
								"rollouts",
								"{{rolloutId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pause execution of deployment job by rolloutId",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/deployments/rollouts/{{rolloutId}}/pause",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"deployments",
								"rollouts",
								"{{rolloutId}}",
								"pause"
							]
						}
					},
					"response": []
				},
				{
					"name": "Start execution of deployment job by rolloutId",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/deployments/rollouts/{{rolloutId}}/start",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"deployments",
								"rollouts",
								"{{rolloutId}}",
								"start"
							]
						}
					},
					"response": []
				},
				{
					"name": "Rollback deployment job by rolloutId",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/deployments/rollouts/{{rolloutId}}/rollback",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"deployments",
								"rollouts",
								"{{rolloutId}}",
								"rollback"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get device rollbacks items",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/deployments/rollouts/{{rolloutId}}/rollbacks/{{deviceId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"deployments",
								"rollouts",
								"{{rolloutId}}",
								"rollbacks",
								"{{deviceId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "softwareModules",
			"item": [
				{
					"name": "Create software modules",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"description": "Access token",
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[{\r\n  \"vendor\": \"string\",\r\n  \"name\": \"string\",\r\n  \"description\": \"string\",\r\n  \"type\": \"application\",\r\n  \"version\": \"string\"\r\n}]"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/softwaremodules",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"softwaremodules"
							]
						},
						"description": "Create software modules"
					},
					"response": []
				},
				{
					"name": "Get single software module",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "{{accesstoken}}",
								"description": "Access token",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/softwaremodules/{{softwareModuleId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"softwaremodules",
								"{{softwareModuleId}}"
							]
						},
						"description": "Get single software module by softwareModuleId."
					},
					"response": []
				}
			]
		},
		{
			"name": "AppStore",
			"item": [
				{
					"name": "Get orders",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"description": "Access token",
								"key": "Authorization",
								"type": "text",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1SWQiOjEsIm9JZCI6MSwic0lkIjoiYTFmN2IyN2Y5MmE1OTJjZGQzZjY2ZGFhM2JkYzAzYTQiLCJpYXQiOjE2MTgyOTgwMzcsImV4cCI6MTY0OTgzNDAzN30.5fLDu7L07yL1nK5NQ71ma-JQv-N3CWmzP12Tz5XrIW8"
							}
						],
						"url": {
							"raw": "http://{{url}}/{{version}}/app-store/containers/orders?organisationId={{organisationId}}&page={{page}}&limit={{limit}}&sortBy={{sortBy}}&sortOrder={{sortOrder}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"app-store",
								"containers",
								"orders"
							],
							"query": [
								{
									"key": "organisationId",
									"value": "{{organisationId}}"
								},
								{
									"key": "page",
									"value": "{{page}}",
									"description": "Page number"
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "Limit of shown items"
								},
								{
									"key": "sortBy",
									"value": "{{sortBy}}",
									"description": "Sort by property"
								},
								{
									"key": "sortOrder",
									"value": "{{sortOrder}}",
									"description": "Sort order (asc/desc)"
								}
							]
						},
						"description": "Get users by organisationId."
					},
					"response": []
				},
				{
					"name": "Get order",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"description": "Access token",
								"key": "Authorization",
								"type": "text",
								"value": "{{accesstoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"url": {
							"raw": "http://{{url}}/{{version}}/app-store/containers/orders/{{orderId}}",
							"protocol": "http",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{version}}",
								"app-store",
								"containers",
								"orders",
								"{{orderId}}"
							]
						},
						"description": "Get user by userId."
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}